{"version":3,"sources":["libs/generator.js","AbacusContext.js","Bead.js","Abacus.js","Exercise.js","App.js","serviceWorker.js","index.js"],"names":["factory","_utils","utils","stop_cycle","primer","ch","POSSIBLE_CONST_PROSTO","POSSIBLE_CONST_BRAT","POSSIBLE_CONST_DRUG","POSSIBLE_CONST_COMBO","chislo","chislo_plus_all","znak","schotchik","Kolslog","Kolcifr","cifr","Level_Operation","Level","Operation","possible_checked_var","chislo_plus","half","Checked_cifr","randomInteger","n","m","random","Math","floor","power10","pow","duplicat","b","c","d","e","f","a","length","g","push","ravno","number","chislo_plus_f","parseInt","chislo_minus_f","exclude","arr","index","indexOf","splice","possible_checked","arrchecked","slice","initial","arr_possible","j","k","r","p","i","calculate_simple_add","max_chislo","yes_no","POSSIBLE_CHECKED_CONST","calculate_simple_sub","calculate_simple_add_sub","max_chislo_4","l","vspom_chislo","razmer","toString","per","calculate_brother_add","vspom_chislo1","vspom_chislo2","calculate_brother_sub","calculate_brother_add_sub","calculate_friend_add","calculate_friend_sub","undefined","calculate_friend_add_sub","calculate_combo_add","calculate_combo_sub","calculate_combo_add_sub","calculate_random_add","calculate_random_sub","calculate_random_add_sub","generate","cfg","Array","isArray","Half","t","seq","answer","reduce","from","map","digit","reverse","generateFractional","result","newAnswer","digitsCountAfterPoint","digitsCountBeforePoint","termsCount","operations","treatZero","before","after","toFixed","generateAroundZero","prenum","before2","after2","replace","console","log","reachedMinus","limit","ii","abs","module","exports","process","MyContext","React","createContext","Provider","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","ansPosition","state","gameStarted","beadHeight","value","dragged","active","abacusState","beadState","currentY","initialY","yOffset","dragStart","newState","assign","target","id","uch","document","querySelector","getBoundingClientRect","height","type","touches","clientY","currentTarget","setState","drag","preventDefault","includes","ind","firstOne","firstZero","dragEnd","calculateValue","resetAbacus","generateEmptyAbacus","abacus","resetStart","getElementById","setAttribute","resetEnd","startGame","level","res","ans","nextLevel","inherits","createClass","key","max","intermedateSum","react_default","createElement","exerciseAnswer","actions","nextExample","props","children","Component","Consumer","Bead","tclass","row","context","y","column","styles","transform","style","className","AbacusTest","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","Fragment","src_Bead_0","Exercise","color","App","src_Exercise_0","src_Abacus","Boolean","window","location","hostname","match","rootElement","ReactDOM","render","AbacusContext_Provider","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.432075fd.chunk.js","sourcesContent":["let _utils = (function () {\n    let utils;\n    let stop_cycle;\n    let primer;\n    let ch;\n    \n    const POSSIBLE_CONST_PROSTO = [\n        [\n            [\n                [0,1,2,3,4,5,6,7,8,9],\n                [0,1,2,3,5,6,7,8],\n                [0,1,2,5,6,7],\n                [0,1,5,6],[0,5],\n                [0,1,2,3,4],\n                [0,1,2,3],\n                [0,1,2],\n                [0,1],\n                [0]\n            ],\n            [\n                [],[],[],[],[],[],[],[],[],[]\n            ]\n        ],\n        [\n            [\n                [],[],[],[],[],[],[],[],[],[]\n            ],\n            [\n                [0],\n                [0,1],\n                [0,1,2],\n                [0,1,2,3],\n                [0,1,2,3,4],\n                [0,5],\n                [0,1,5,6],\n                [0,1,2,5,6,7],\n                [0,1,2,3,5,6,7,8],\n                [0,1,2,3,4,5,6,7,8,9]\n            ]\n        ],\n        [\n            [\n                [0,1,2,3,4,5,6,7,8,9],\n                [0,1,2,3,5,6,7,8],\n                [0,1,2,5,6,7],\n                [0,1,5,6],\n                [0,5],\n                [0,1,2,3,4],\n                [0,1,2,3],\n                [0,1,2],\n                [0,1],\n                [0]\n            ],\n            [\n                [0],\n                [0,1],\n                [0,1,2],\n                [0,1,2,3],\n                [0,1,2,3,4],\n                [0,5],\n                [0,1,5,6],\n                [0,1,2,5,6,7],\n                [0,1,2,3,5,6,7,8],\n                [0,1,2,3,4,5,6,7,8,9]\n            ]\n        ]\n    ];\n    const POSSIBLE_CONST_BRAT = [\n        [\n            [\n                [1,2,3,4],\n                [4],\n                [3,4],\n                [2,3,4],\n                [1,2,3,4],\n                [0,1,2,3,4],\n                [0,1,2,3],\n                [0,1,2],\n                [0,1],\n                [0]\n            ],\n            [\n                [0],\n                [0,1],\n                [0,1,2],\n                [0,1,2,3],\n                [0,1,2,3,4],\n                [0,5],\n                [5],\n                [5,6],\n                [5,6,7],\n                [5,6,7,8]\n            ]\n        ],\n        [\n            [\n                [5,6,7,8],\n                [5,6,7,8],\n                [5,6,7],\n                [5,6],\n                [0,5],\n                [0,1,2,3],\n                [0,1,2],\n                [0,1],\n                [0,1],\n                [0]\n            ],\n            [\n                [0],\n                [0,1],\n                [0,1,2],\n                [0,1,2,3],\n                [0,1,2,3,4],\n                [1,2,3,4],\n                [2,3,4],\n                [3,4],\n                [4],\n                [1,2,3,4]\n            ]\n        ],\n        [\n            [\n                [1,2,3,4],\n                [4],\n                [3,4],\n                [2,3,4],\n                [1,2,3,4],\n                [0,1,2,3,4],\n                [0,1,2,3],\n                [0,1,2],\n                [0,1],\n                [0]\n            ],\n            [\n                [0],\n                [0,1],\n                [0,1,2],\n                [0,1,2,3],\n                [0,1,2,3,4],\n                [1,2,3,4],\n                [2,3,4],\n                [3,4],\n                [4],\n                [0,1,2,3,4,5,6,7,8,9]\n            ]\n        ]\n    ];\n    const POSSIBLE_CONST_DRUG =[\n        [\n            [\n                [3,4,5,6,7],\n                [4,9],\n                [4,3,8,9],\n                [4,3,2,7,8,9],\n                [6,7,8,9],\n                [5],\n                [4,5,9],\n                [3,4,5,8,9],\n                [2,3,4,5,7,8,9],\n                [1,2,3,4,5,6,7,8,9]\n            ],\n            [\n                [],[],[],[],[],[],[],[],[],[]]\n        ],\n        [\n            [[],[],[],[],[],[],[],[],[],[]\n            ],\n            [\n                [1,2,3,4,5,6,7,8,9],\n                [2,3,4,5,7,8,9],\n                [3,4,5,8,9],\n                [4,5,9],\n                [5],\n                [6,7,8,9],\n                [4,3,2,7,8,9],\n                [4,3,8,9],\n                [4,9],\n                [3,4,5,6,7]\n            ]\n        ],\n        [\n            [\n                [3,4,5,6,7],\n                [4,9],\n                [4,3,8,9],\n                [4,3,2,7,8,9],\n                [6,7,8,9],\n                [5],\n                [4,5,9],\n                [3,4,5,8,9],\n                [2,3,4,5,7,8,9],\n                [1,2,3,4,5,6,7,8,9]\n            ],\n            [\n                [1,2,3,4,5,6,7,8,9],\n                [2,3,4,5,7,8,9],\n                [3,4,5,8,9],\n                [4,5,9],\n                [5],\n                [6,7,8,9],\n                [4,3,2,7,8,9],\n                [4,3,8,9],\n                [4,9],\n                [3,4,5,6,7]\n            ]\n        ]\n    ];\n    const POSSIBLE_CONST_COMBO = [\n        [\n            [\n                [5,6,7,8],\n                [5,6,7],\n                [3,4,5,6],\n                [2,3,4,5],\n                [6,7,8,9],\n                [6,7,8,9],\n                [6,7,8],\n                [6,7],\n                [6,7,8],\n                [6,7,8,9]\n            ],\n            [\n                [],[],[],[],[],[],[],[],[],[]\n            ]\n        ],\n        [\n            [\n                [],[],[],[],[],[],[],[],[],[]\n            ],\n            [\n                [6,7,8,9],\n                [6,7,8],\n                [6,7,8,9],\n                [6,7,8],\n                [6,7,8,9],\n                [1,2,3],\n                [1,2,3,4],\n                [1,2,3,4,5],\n                [1,2,3,4,5,6],\n                [5,6,7,8]\n            ]\n        ],\n        [\n            [\n                [1,2,3,4,5,6,7,8],\n                [5,6,7,9],\n                [3,4,5,6],\n                [2,3,4,5],\n                [6,7,8,9],\n                [6,7,8,9],\n                [6,7,8],\n                [6,7],\n                [6,7,8],\n                [6,7,8,9]\n            ],\n            [\n                [6,7,8,9],\n                [6,7,8],\n                [6,7,8,9],\n                [6,7,8],\n                [6,7,8,9],\n                [1,2,3],\n                [1,2,3,4],\n                [1,2,3,4,5],\n                [1,2,3,4,5,6],\n                [1,2,3,4,5,6,7,8]\n            ]\n        ]\n    ];\n\n    var chislo = 0,\n        chislo_plus_all = 0,\n        znak = 0,\n        schotchik = 0,\n        Kolslog = 4, // Количество слагаемых\n        Kolcifr = 1, // Сложность: 1: 1, 2: 10, 3: 100, 4: 1000\n        Kolcifr2 = null,\n        cifr = [],\n        Level_Operation = 12, // Level*10 + Operation\n        Level = 1, // 1: Просто, 2: Брат, 3: Друг, 4: Комбо, 5: Произвольный\n        Operation = 2, // 0: плюс, 1: минус, 2: плюс/минус\n        possible_checked_var = [],\n        chislo_plus = [],\n        // vip = 0, // ??? Количество примеров\n        // prav = 0, // Количество правильно решенных примеров\n        half = true, // Отвечает за 1/2\n        Checked_cifr = [];\n\n    /*\n     * @public\n     * Функция генерации\n     * {Object} cfg конфиг для генерации\n     *  {Array} Checked_cifr\n     *  {Number} Level Уровень игры - 1: Просто, 2: Брат, 3: Друг, 4: Комбо, 5: Произвольный\n     *  {Number} Operation Доступные операции - 0: плюс, 1: минус, 2: плюс/минус\n     *  {Number} operationLevel Уровень игры - renamed Level_Operation = Level * 10 + Operation;\n     *  {Number} Kolslog Количество слагаемых\n     *  {Number} Kolcifr Количество цифр\n     *  {Boolean} Half 1/2\n     */\n    function generate(cfg){\n        Level = cfg.Level;\n        Operation = cfg.Operation;\n        Level_Operation = Level * 10 + Operation;\n        if (Array.isArray(cfg.Kolcifr)) {\n            Kolcifr = cfg.Kolcifr[0];\n            Kolcifr2 = cfg.Kolcifr[1];\n        } else {\n            Kolcifr = cfg.Kolcifr;\n        }\n        Kolslog = cfg.Kolslog;\n        Checked_cifr = cfg.Checked_cifr;\n        half = cfg.Half;\n\n        stop_cycle = false\n        schotchik = 0\n        chislo = 0;\n        cifr = [];\n        chislo_plus = [];\n        // let primer_num = 0\n        // let primer_num_n = [0,0,0,0,0,0,0,0,0]\n        primer = []\n\n        for (let i = 0; i < Kolcifr ; i++) {\n            var t =  possible_checked(Level,Operation);\n            possible_checked_var[i] = t.slice();\n        }\n\n        switch (parseInt(Level_Operation)) {\n            case 10: {\n                znak = 0;\n                chislo = 0;\n                let i;\n                for (i = 0; i < Kolcifr-1; i++){\n                    cifr[i] = randomInteger(4);\n                    chislo += cifr[i]*power10(i);\n                }\n                i = Kolcifr - 1;\n                cifr[i] = 1 + randomInteger(3);\n                chislo += cifr[i]*power10(i);\n                primer.push(chislo)\n                while (stop_cycle === false){\n                    calculate_simple_add()\n                }\n\n            }\n                break;\n\n            case 11: {\n                chislo = 0;\n                let t = Checked_cifr.slice();\n                exclude(0,t);\n                for (let i = 0; i < Kolcifr; i++){\n                    cifr[i] = t[randomInteger(t.length)]\n                    chislo += cifr[i]*power10(i);\n                }\n                primer.push(chislo)\n                while (stop_cycle === false){\n                    calculate_simple_sub()\n                }\n\n            }\n                break;\n\n            case 12: {\n                chislo = 0;\n                let t = Checked_cifr.slice();\n                let i;\n                for (i = 0; i < Kolcifr-1; i++){\n                    cifr[i] = t[randomInteger(t.length)]\n                    chislo += cifr[i]*power10(i);\n                }\n                exclude(0,t);\n                i = Kolcifr - 1;\n                cifr[i] = t[randomInteger(t.length)]\n                chislo += cifr[i]*power10(i);\n\n                primer.push(chislo)\n                while (stop_cycle === false){\n                    calculate_simple_add_sub()\n                }\n\n            }\n                break;\n\n            case 20: {\n                znak = 0;\n                chislo = 0;\n                let i;\n                for (i = 0; i < Kolcifr-1; i++){\n                    cifr[i] = randomInteger(5);\n                    chislo += cifr[i]*power10(i);\n                }\n                i = Kolcifr - 1;\n                cifr[i] = 2 + randomInteger(3);\n                chislo += cifr[i]*power10(i);\n                ;\n                primer.push(chislo)\n                while (stop_cycle === false){\n                    calculate_brother_add()\n                }\n\n            }\n                break;\n\n            case 21: {\n                chislo = 0;\n                for (let i = 0; i < Kolcifr; i++){\n                    cifr[i] = 5+randomInteger(5);\n                    chislo += cifr[i]*power10(i);\n                }\n                ;\n                primer.push(chislo)\n                while (stop_cycle === false){\n                    calculate_brother_sub()\n                }\n            }\n                break;\n\n            case 22: {\n                chislo = 0;\n                let i;\n                for (i = 0; i < Kolcifr-1; i++){\n                    cifr[i] = randomInteger(10);\n                    chislo += cifr[i]*power10(i);\n                }\n                i = Kolcifr - 1;\n                cifr[i] = 2 + randomInteger(8);\n                chislo += cifr[i]*power10(i);\n                ;\n                primer.push(chislo)\n                while (stop_cycle === false){\n                    calculate_brother_add_sub()\n                }\n\n            }\n                break;\n\n            case 30: {\n                znak = 0;\n                chislo = 0;\n                let i;\n                for (i = 0; i < Kolcifr-1; i++){\n                    cifr[i] = randomInteger(10);\n                    chislo += cifr[i]*power10(i);\n                }\n                i = Kolcifr - 1;\n                cifr[i] = 2 + randomInteger(8);\n                chislo += cifr[i]*power10(i);\n                ;\n                primer.push(chislo)\n                while (stop_cycle === false){\n                    calculate_friend_add()\n                }\n\n            }\n                break;\n\n            case 31: {\n                znak = 1;\n                chislo = 0;\n                let i;\n                for (i = 0; i < Kolcifr; i++){\n                    cifr[i] = randomInteger(10);\n                    chislo += cifr[i]*power10(i);\n                }\n                i = Kolcifr;\n                cifr[i] = 2 + randomInteger(8);\n                chislo += cifr[i]*power10(i);\n                ;\n                primer.push(chislo)\n                while (stop_cycle === false){\n                    calculate_friend_sub()\n                }\n\n            }\n                break;\n\n            case 32: {\n                znak = 0;\n                chislo = 0;\n                let i;\n                for (i = 0; i < Kolcifr-1; i++){\n                    cifr[i] = randomInteger(10);\n                    chislo += cifr[i]*power10(i);\n                }\n                i = Kolcifr - 1;\n                cifr[i] = 2 + randomInteger(8);\n                chislo += cifr[i]*power10(i);\n                ;\n                primer.push(chislo)\n                while (stop_cycle === false){\n                    calculate_friend_add_sub()\n                }\n\n            }\n                break;\n\n            case 40: {\n                znak = 0;\n                chislo = 0;\n                let i;\n                for (i = 0; i < Kolcifr-1; i++){\n                    cifr[i] = randomInteger(10);\n                    chislo += cifr[i]*power10(i);\n                }\n                i = Kolcifr - 1;\n                cifr[i] = 2 + randomInteger(8);\n                chislo += cifr[i]*power10(i);\n                ;\n                primer.push(chislo)\n                while (stop_cycle === false){\n                    calculate_combo_add()\n                }\n\n            }\n                break;\n\n            case 41: {\n                znak = 1;\n                chislo = 0;\n                let i;\n                for (i = 0; i < Kolcifr; i++){\n                    cifr[i] = randomInteger(10);\n                    chislo += cifr[i]*power10(i);\n                }\n                i = Kolcifr;\n                cifr[i] = 2 + randomInteger(8);\n                chislo += cifr[i]*power10(i);\n                ;\n                primer.push(chislo)\n                while (stop_cycle === false){\n                    calculate_combo_sub()\n                }\n\n            }\n                break;\n\n            case 42: {\n                znak = 0;\n                chislo = 0;\n                let i;\n                for (i = 0; i < Kolcifr-1; i++){\n                    cifr[i] = randomInteger(10);\n                    chislo += cifr[i]*power10(i);\n                }\n                i = Kolcifr - 1;\n                cifr[i] = 2 + randomInteger(8);\n                chislo += cifr[i]*power10(i);\n                ;\n                primer.push(chislo)\n                while (stop_cycle === false){\n                    calculate_combo_add_sub()\n                }\n\n            }\n                break;\n            case 50: {\n                znak = 0;\n                chislo = 0;\n                let i;\n                for (i = 0; i < Kolcifr-1; i++){\n                    cifr[i] = randomInteger(10);\n                    chislo += cifr[i]*power10(i);\n                }\n                i = Kolcifr - 1;\n                cifr[i] = 2 + randomInteger(8);\n                chislo += cifr[i]*power10(i);\n                ;\n                primer.push(chislo)\n                while (stop_cycle === false){\n                    calculate_random_add()\n                }\n\n            }\n                break;\n\n            case 51: {\n                znak = 1;\n                chislo = 0;\n                let i;\n                for (i = 0; i < Kolcifr; i++){\n                    cifr[i] = randomInteger(10);\n                    chislo += cifr[i]*power10(i);\n                }\n                i = Kolcifr;\n                cifr[i] = 2 + randomInteger(8);\n                chislo += cifr[i]*power10(i);\n                ;\n                primer.push(chislo)\n                while (stop_cycle === false){\n                    calculate_random_sub()\n                }\n\n            }\n                break;\n\n            case 52: {\n                znak = 0;\n                chislo = 0;\n                let i;\n                for (i = 0; i < Kolcifr-1; i++){\n                    cifr[i] = randomInteger(10);\n                    chislo += cifr[i]*power10(i);\n                }\n                i = Kolcifr - 1;\n                cifr[i] = 2 + randomInteger(8);\n                chislo += cifr[i]*power10(i);\n                ;\n                primer.push(chislo)\n                while (stop_cycle === false){\n                    calculate_random_add_sub()\n                }\n\n            }\n                break;\n            default:\n                break;\n        }\n\n        return {\n            seq: primer,\n            // answer: cifr // something wrong with cifr for level 3+\n            answer: splitAndReverse(primer.reduce(function (a, b) { return a + b; }))\n        };\n    }\n\n    function generateFractional(cfg) {\n        let result = {\n            seq: [],\n            newAnswer: 0\n        };\n        \n        let {\n            digitsCountAfterPoint,\n            digitsCountBeforePoint,\n            termsCount,\n            operations,\n            treatZero\n        } = cfg;\n        operations = [\n            \"plus\",\n            \"plusMinus\"\n        ].indexOf(operations) > -1 ? operations : \"plus\";\n        if (operations === \"plus\") {\n            for (let i = 0, l = termsCount; i < l; i++) {\n                let before = utils.random(1, 9) + \"\";\n                let after = utils.random(0, 9) + \"\";\n                for (let i = 1, l = digitsCountBeforePoint; i < l; i++) {\n                    before += utils.random(0, 9);\n                }\n                for (let i = 1, l = digitsCountAfterPoint; i < l; i++) {\n                    after += utils.random(0, 9);\n                }\n                result.seq.push(before + \".\" + after);\n                result.newAnswer += (before + \".\" + after)*1;\n                result.newAnswer = result.newAnswer.toFixed(digitsCountAfterPoint)*1;\n            }\n        } else {\n            if (treatZero === \"around\") {\n                generateAroundZero();\n            } else if (treatZero === \"more\") {\n                generate(1);\n            } else if (treatZero === \"less\") {\n                generate(-1);\n            } else {\n                generateAroundZero();\n            }\n        }\n        return result;\n\n        function generateAroundZero() {\n            let a = 1;\n            for (let i = 0, l = termsCount; i < l; i++) {\n                let before = utils.random(1, result.newAnswer === 0 ? 6 : 9) + \"\";\n                let after = utils.random(0, 9) + \"\";\n                let prenum;\n                for (let i = 1, l = digitsCountBeforePoint; i < l; i++) {\n                    before += utils.random(0, 9);\n                }\n                for (let i = 1, l = digitsCountAfterPoint; i < l; i++) {\n                    after += utils.random(0, 9);\n                }\n                prenum = (before + \".\" + after)*1;\n                while (!prenum || (a === 1 ? result.newAnswer + prenum < 0 : result.newAnswer - prenum > 0)) {\n                    let before2 = utils.random(before[0]*1, 9) + \"\";\n                    let after2 = utils.random(0, 9) + \"\";\n                    for (let i = 1, l = digitsCountBeforePoint; i < l; i++) {\n                        before2 += utils.random(0, 9);\n                    }\n                    for (let i = 1, l = digitsCountAfterPoint; i < l; i++) {\n                        after2 += utils.random(0, 9);\n                    }\n                    prenum = (before2 + \".\" + after2)*1;\n                }\n                prenum *= a;\n                result.seq.push(prenum.toFixed(digitsCountAfterPoint).replace(\".\", \".\"));\n                result.newAnswer += prenum;\n                result.newAnswer = result.newAnswer.toFixed(digitsCountAfterPoint)*1;\n                a *= -1;\n            }\n        }\n\n        function generate(b) {\n            b = b*1 > 0 ? 1 : -1;\n            console.log(b);\n            let reachedMinus = false;\n            let limit = Math.pow(10, digitsCountBeforePoint)*2.5;\n            for (let i = 0, l = termsCount; i < l; i++) {\n                let before = utils.random(1, 9) + \"\";\n                let after = utils.random(0, 9) + \"\";\n                let prenum;\n                for (let i = 1, l = digitsCountBeforePoint; i < l; i++) {\n                    before += utils.random(0, 9);\n                }\n                for (let i = 1, l = digitsCountAfterPoint; i < l; i++) {\n                    after += utils.random(0, 9);\n                }\n                prenum = (before + \".\" + after)*1;\n                let a = result.newAnswer !== 0 && utils.random(0, 10) > 3 || i === 1 ? -1 : 1;\n                prenum *= a;\n                let ii = 0;\n                reachedMinus = reachedMinus || result.newAnswer + prenum < 0;\n                while ( (!prenum || (\n                    b === -1 ?\n                        reachedMinus ?\n                            result.newAnswer + prenum > 0 :\n                            false :\n                        result.newAnswer + prenum < 0\n                )) && !!result.newAnswer) {\n\n                    let before2 = utils.random(1, 9) + \"\";\n                    let after2 = utils.random(0, 9) + \"\";\n                    for (let i = 1, l = digitsCountBeforePoint; i < l; i++) {\n                        before2 += utils.random(0, 9);\n                    }\n                    for (let i = 1, l = digitsCountAfterPoint; i < l; i++) {\n                        after2 += utils.random(0, 9);\n                    }\n                    prenum = (before2 + \".\" + after2)*1;\n                    prenum *= a;\n                    if (ii > 3) {\n                        prenum *= -1;\n                        break;\n                    }\n                    ii++;\n                }\n                if (Math.abs(result.newAnswer + prenum) > limit)\n                    prenum *= -1;\n                result.seq.push(prenum.toFixed(digitsCountAfterPoint).replace(\".\", \".\"));\n                result.newAnswer += prenum;\n                result.newAnswer = result.newAnswer.toFixed(digitsCountAfterPoint)*1;\n            }\n        }\n    }\n\n    /*\n     * @private\n     * Превращает число в перевернутый массив (нужно для ответа генератора)\n     * {Number} n число\n     * return {Array of Number}\n     */\n    function splitAndReverse(n) {\n        return Array.from(n.toString())\n                    .map(function(digit) {\n                        return parseInt(digit)\n                    })\n                    .reverse();\n    }\n\n    /*\n     * @private\n     * Генерирует рандомное число\n     * {Number} n число\n     * return {Number}\n     */\n    function randomInteger (n, m) {\n        let result;\n        if (m) {\n            result = utils.random(n, m);\n        } else {\n            result = Math.floor(Math.random()*(n-0.0001));\n        }\n        // console.log(n);\n        // console.log(result);\n        // if (m) {\n        //     return utils.random(n, m);\n        // } else {\n        //     return Math.floor(Math.random()*(n-0.0001));\n        // }\n        return result;\n    }\n\n    /*\n     * @private\n     * {Number} n число\n     * return {Number}\n     */\n    function power10(n){\n        return Math.pow(10, n);\n    }\n\n    /*\n     * @private\n     */\n    function duplicat(b, c) {\n        var d = [],\n            e = {},\n            f = {};\n\n        for (let a = 0; a < b.length; a++) {\n            e[b[a]] = !0;\n        }\n\n        for (let a = 0; a < c.length; a++) {\n            f[c[a]] = !0;\n        }\n\n        for (var g in e) {\n            f[g] && d.push(g);\n        }\n\n        return d;\n    };\n\n    /*\n     * @private\n     */\n    function ravno(number) {\n        stop_cycle = true;\n    }\n\n    /*\n     * @private\n     */\n    function chislo_plus_f(){\n        chislo += chislo_plus_all;\n        primer.push(chislo_plus_all)\n        chislo = parseInt(chislo);\n        chislo_plus_all = parseInt(chislo_plus_all);\n    }\n\n    /*\n     * @private\n     */\n    function chislo_minus_f(){\n        chislo -= chislo_plus_all;\n        ch = -chislo_plus_all\n        primer.push(ch)\n        chislo = parseInt(chislo);\n        chislo_plus_all = parseInt(chislo_plus_all);\n    }\n\n    /*\n     * @private\n     \n    function include(a, arr) {\n        if (arr.indexOf(a) === -1) {\n            arr.push(a);\n        }\n\n        return arr;\n    };\n*/\n    /*\n     * @private\n     */\n    function exclude(a, arr) {\n        let index = arr.indexOf(a);\n\n        if (index !== -1) {\n            arr.splice(index, 1);\n        }\n\n        return arr;\n    }\n\n    /*\n     * @private\n     */\n    function yes_no(a, arr){\n        var c = false, i = 0;\n        while (c === false && i<arr.length) {\n            if (a === arr[i++]) c = true;\n        }\n        return c;\n    }\n\n    /*\n     * @private\n     * {Number} n Level\n     * {Number} m Operation\n     * return {Number} possible numbers\n     */\n    function possible_checked (n,m){\n        var arrchecked = Checked_cifr.slice();\n        let initial =\n            [[[0,1,2,3,4,5,6,7,8,9],[0,1,2,3,5,6,7,8],[0,1,2,5,6,7],[0,1,5,6],[0,5],[0,1,2,3,4],[0,1,2,3],[0,1,2],[0,1],[0]],\n                [[0],[0,1],[0,1,2],[0,1,2,3],[0,1,2,3,4],[0,5],[0,1,5,6],[0,1,2,5,6,7],[0,1,2,3,5,6,7,8],[0,1,2,3,4,5,6,7,8,9]]];\n        var arr_possible = [[[],[],[],[],[],[],[],[],[],[]],\n            [[],[],[],[],[],[],[],[],[],[]]];\n        if (n === 2){\n            for (let j = 0; j <= 1; j++){\n                for (let k = 0; k <= 9; k++){\n                    arr_possible[j][k] = initial[j][k].slice();\n                }\n            }\n        }\n        switch (parseInt(n)) {\n            case 1:\n                for (let j = 0; j <= 1; j++){\n                    for (let k = 0; k <= 9; k++){\n                        arr_possible[j][k] = duplicat(arrchecked, POSSIBLE_CONST_PROSTO[m][j][k]);\n                        if (arr_possible[j][k].length === 0){\n                            arr_possible[j][k] = initial[j][k].slice();\n                        }\n                    }\n                }\n                break;\n            case 2:\n                for (let j = 0; j <= 1; j++){\n                    for (let k = 0; k <= 9; k++){\n                        arr_possible[j][k] = POSSIBLE_CONST_BRAT[m][j][k].slice();\n                    }\n                }\n                switch (parseInt(m)){\n                    case 0:\n                        for (let k = 1; k <= 4; k++){\n                            arr_possible[0][k] = duplicat(arrchecked, POSSIBLE_CONST_BRAT[m][0][k]);\n                            if (arr_possible[0][k].length === 0 || arr_possible[0][k] === 0){\n                                arr_possible[0][k] = initial[0][k].slice();\n                            }\n                        }\n                        break;\n                    case 1:\n                        for (let k = 5; k <= 8; k++){\n                            arr_possible[1][k] = duplicat(arrchecked, POSSIBLE_CONST_BRAT[m][1][k]);\n                            if (arr_possible[1][k].length === 0 || arr_possible[1][k] === 0){\n                                arr_possible[1][k] = initial[1][k].slice();\n                            }\n                        }\n                        break;\n                    case 2:\n                        for (let k = 1; k <= 4; k++){\n                            arr_possible[0][k] = duplicat(arrchecked, POSSIBLE_CONST_BRAT[m][0][k]);\n                            if (arr_possible[0][k].length === 0 || arr_possible[0][k] === 0){\n                              arr_possible[0][k] = initial[0][k].slice();\n                            }\n                        }\n                        for (let k = 5; k <= 8; k++){\n                            arr_possible[1][k] = duplicat(arrchecked, POSSIBLE_CONST_BRAT[m][1][k]);\n                            if (arr_possible[1][k].length === 0 || arr_possible[1][k] === 0){\n                              arr_possible[1][k] = initial[1][k].slice();\n                            }\n                        }\n                      break;\n                      default:\n                      break;\n                }\n                break;\n            case 3:\n                var r = 1, p = 1;\n                switch (parseInt(m)) {\n                    case 0: r = 0; p = 0; break;\n                    case 1: r = 1; p = 1; break;\n                    case 2: r = 0; p = 1; break;\n                    default: break;\n                }\n                for (let j = r; j <= p; j++){\n                    for (let k = 0; k <= 9; k++){\n                        arr_possible[j][k] = duplicat(arrchecked, POSSIBLE_CONST_DRUG[m][j][k]);\n                        if (arr_possible[j][k].length === 0){\n                            arr_possible[j][k] = initial[j][k].slice();\n                        }\n                    }\n                }\n                break;\n            case 4:\n                // var r = 1, p = 1;\n                switch (parseInt(m)) {\n                    case 0:\n                        for (let k = 0; k <= 4; k++){\n                            arr_possible[0][k] = POSSIBLE_CONST_COMBO[0][0][k].slice();\n                        }\n                        for (let k = 5; k <= 9; k++){\n                            arr_possible[0][k] = duplicat(arrchecked, POSSIBLE_CONST_COMBO[0][0][k]);\n                            if (arr_possible[0][k].length === 0){\n                                arr_possible[0][k] =  duplicat([6,7,8,9], POSSIBLE_CONST_DRUG[2][0][k]);\n                            }\n                            if (arr_possible[0][k].length === 0){\n                                arr_possible[0][k] =  initial[0][k].slice();\n                            }\n                        }\n                        break;\n                    case 1:\n                        for (let k = 6; k <= 9; k++){\n                            arr_possible[1][k] = POSSIBLE_CONST_COMBO[1][1][k].slice();\n                        }\n                        for (let k = 0; k <= 5; k++){\n                            arr_possible[1][k] = duplicat(arrchecked, POSSIBLE_CONST_COMBO[1][1][k]);\n                            if (arr_possible[1][k].length === 0 /*|| arr_possible[j][k] === 0*/){\n                                arr_possible[1][k] =  duplicat([6,7,8,9],POSSIBLE_CONST_DRUG[2][1][k]);\n                            }\n                            if (arr_possible[1][k].length === 0){\n                                arr_possible[1][k] =  initial[1][k].slice();\n                            }\n                        }\n                        break;\n                    case 2:\n                        for (let k = 0; k <= 4; k++){\n                            arr_possible[0][k] = POSSIBLE_CONST_COMBO[0][0][k].slice();\n                        }\n                        for (let k = 5; k <= 9; k++){\n                            arr_possible[0][k] = duplicat(arrchecked, POSSIBLE_CONST_COMBO[0][0][k]);\n                            if (arr_possible[0][k].length === 0){\n                                arr_possible[0][k] =  duplicat([6,7,8,9], POSSIBLE_CONST_DRUG[2][0][k]);\n                            }\n                            if (arr_possible[0][k].length === 0){\n                                arr_possible[0][k] =  initial[0][k].slice();\n                            }\n                        }\n                        for (let k = 6; k <= 9; k++){\n                            arr_possible[1][k] = POSSIBLE_CONST_COMBO[1][1][k].slice();\n                        }\n                        for (let k = 0; k <= 5; k++){\n                            arr_possible[1][k] = duplicat(arrchecked, POSSIBLE_CONST_COMBO[1][1][k]);\n                            if (arr_possible[1][k].length === 0 /*|| arr_possible[j][k] === 0*/){\n                                arr_possible[1][k] =  duplicat([6,7,8,9],POSSIBLE_CONST_DRUG[2][1][k]);\n                            }\n                            if (arr_possible[1][k].length === 0){\n                                arr_possible[1][k] =  initial[1][k].slice();\n                            }\n                        }\n\n\n                        break;\n                    default:\n                        break;\n                }\n                break;\n\n            case 5:\n                for (let i = 0; i <= 9; i++) {\n                    for (let j = 0; j<=1; j++){\n                        arr_possible[j][i] = [1,2,3,4,5,6,7,8,9];\n                    }\n                }\n                break;\n            default:\n                break;\n        }\n        return arr_possible;\n    }\n\n    /*\n     * @private\n     */\n    function calculate_simple_add() {\n        var max_chislo = 0;\n        if (yes_no(5,Checked_cifr)) {\n            for (let i = 0; i < Kolcifr; i++){\n                max_chislo += 9*power10(i);\n            }\n        }\n        else{\n            for (let i = 0; i < Kolcifr; i++){\n                max_chislo += 4*power10(i);\n            }\n        }\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n\n        if (chislo === max_chislo || schotchik === Kolslog) {\n            ravno();\n        }\n        else {\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = [];\n                for (let i = 0; i < Kolcifr; i++) {\n                    var p = possible_checked_var[i][znak][cifr[i]].slice();\n                    if (p.length === 0 || p[0] === 0) {\n                        possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                        p = possible_checked_var[i][znak][cifr[i]].slice();\n                    }\n                    chislo_plus[i] = p[randomInteger(p.length)];\n                    chislo_plus_all += chislo_plus[i]*power10(i);\n                }\n            } while (chislo_plus_all === 0);\n\n            for (let i = 0; i < Kolcifr; i++) {\n                cifr[i] += parseInt(chislo_plus[i]);\n                for (let k = 0; k <= 9; k++){\n                    exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                }\n            }\n            chislo_plus_f();\n        }\n    }\n\n    /*\n * @private\n */\n    function calculate_simple_sub() {\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n\n        if (chislo === 0 || schotchik === Kolslog) {\n            ravno();\n        }\n        else {\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = [];\n                for (let i = 0; i < Kolcifr; i++) {\n                    var p = possible_checked_var[i][1][cifr[i]];\n                    if (p.length === 0 || p[0] === 0) {\n                        possible_checked_var[i][1][cifr[i]] = POSSIBLE_CHECKED_CONST[1][cifr[i]].slice();\n                        p = possible_checked_var[i][1][cifr[i]];\n                    }\n                    chislo_plus[i] = p[randomInteger(p.length)];\n                    chislo_plus_all += chislo_plus[i]*power10(i);\n                }\n            } while (chislo_plus_all === 0);\n\n            for (let i = 0; i < Kolcifr; i++) {\n                cifr[i] -= parseInt(chislo_plus[i]);\n                for (let k = 0; k <= 9; k++){\n                    exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                }\n            }\n            chislo_minus_f();\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_simple_add_sub() {\n        chislo = parseInt(chislo);\n        var max_chislo_4 = 0, l = Checked_cifr.length-1;\n        if (l === 4){\n            for (let i = 0; i < Kolcifr; i++){\n                max_chislo_4 += 4*power10(i);\n            }\n        }\n        var max_chislo = power10(Kolcifr) - 1;\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n        if (schotchik === Kolslog) {\n            ravno();\n        }\n        else {\n            var vspom_chislo = 0;\n            for (let i = 0; i < Kolcifr; i++){\n                vspom_chislo += 5*power10(i);\n            }\n\n            switch (chislo){\n                case 0: znak = 0; break;\n                case vspom_chislo: znak = 0; break;\n                case max_chislo: znak = 1; break;\n                case max_chislo_4:\n                    if ( l === 4 ) znak = 1; else znak = randomInteger(2); break;\n                default: znak = randomInteger(2); break;\n            }\n            var razmer = parseInt((chislo.toString()).length);\n            var per = 0;\n            if (half === true && razmer > 1 && Kolcifr > 1 && schotchik % 2 === 1){\n                per = 1;\n                // var uio = chislo%power10(Kolcifr-1);\n                switch (chislo%power10(Kolcifr-1)){\n                    case 0: znak = 0; break;\n                    case parseInt(vspom_chislo/10): znak = 0; break;\n                    case parseInt(max_chislo/10): znak = 1; break;\n                    case parseInt(max_chislo_4/10):\n                        if ( l === 4 ) znak = 1; else znak = randomInteger(2); break;\n                    default: znak = randomInteger(2); break;\n                }\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = [];\n\n                for (let i = 0; i < Kolcifr - per; i++) {\n                    var p = possible_checked_var[i][znak][cifr[i]].slice();\n                    if (p.length === 0 || p[0] === 0) {\n                        possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                        p = possible_checked_var[i][znak][cifr[i]].slice();\n                    }\n                    chislo_plus[i] = p[randomInteger(p.length)];\n                    chislo_plus_all += chislo_plus[i]*power10(i);\n                }\n            } while (chislo_plus_all === 0);\n            for (let i = 0; i < Kolcifr-per; i++) {\n                if (znak === 0)  cifr[i] += parseInt(chislo_plus[i]);\n                else cifr[i] -= parseInt(chislo_plus[i]);\n                for (let k = 0; k <= 9; k++){\n                    exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                }\n            }\n\n            if (znak === 0) {\n                chislo_plus_f();\n            }\n            else {\n                chislo_minus_f();\n            }\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_brother_add() {\n        var max_chislo = power10(Kolcifr)-1;\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n\n        if (schotchik === Kolslog) {\n            ravno();\n        }\n        else {\n            var vspom_chislo1 = 0, vspom_chislo2 = 0;\n            for (let i = 0; i < Kolcifr; i++){\n                vspom_chislo1 += 5*power10(i);\n                vspom_chislo2 += 7*power10(i);\n            }\n            if (chislo >= vspom_chislo2) znak = 1;\n            else if (chislo < vspom_chislo1) znak = 0;\n            else znak = randomInteger(2);\n            var razmer = parseInt((chislo.toString()).length);\n            var per = 0;\n            if (half === true && razmer > 1 && Kolcifr > 1 && schotchik % 2 === 1){\n                per = 1;\n                switch (chislo%power10(Kolcifr-1)){\n                    case 0: znak = 0; break;\n                    case parseInt(max_chislo/10): znak = 1; break;\n                    default: znak = randomInteger(2); break;\n                }\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = [];\n                for (let i = 0; i < Kolcifr-per; i++) {\n                    var p = possible_checked_var[i][znak][cifr[i]].slice();\n                    if (p.length === 0 || p[0] === 0) {\n                        possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                        p = possible_checked_var[i][znak][cifr[i]].slice();\n                    }\n                    chislo_plus[i] = p[randomInteger(p.length)];\n                    chislo_plus_all += chislo_plus[i]*power10(i);\n                }\n            } while (chislo_plus_all === 0);\n\n            for (let i = 0; i < Kolcifr-per; i++) {\n                if (znak === 0)  cifr[i] += parseInt(chislo_plus[i]);\n                else cifr[i] -= parseInt(chislo_plus[i]);\n                for (let k = 0; k <= 9; k++){\n                    exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                }\n            }\n\n            if (znak === 0) {\n                chislo_plus_f();\n            }\n            else {\n                chislo_minus_f();\n            }\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_brother_sub() {\n        var max_chislo = power10(Kolcifr)-1;\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n\n        if (schotchik === Kolslog) {\n            ravno();\n        }\n        else {\n            var vspom_chislo1 = 0;\n            for (let i = 0; i < Kolcifr; i++){\n                vspom_chislo1 += 5*power10(i);\n            }\n            if (chislo < vspom_chislo1) znak = 0;\n            else znak = 1;\n            var razmer = parseInt((chislo.toString()).length);\n            var per = 0;\n            if (half === true && razmer > 1 && Kolcifr > 1 &&  schotchik % 2 === 1){\n                per = 1;\n                switch (chislo%power10(Kolcifr-1)){\n                    case 0: znak = 0; break;\n                    case parseInt(max_chislo/10): znak = 1; break;\n                    default: znak = randomInteger(2); break;\n                }\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = [];\n                for (let i = 0; i < Kolcifr-per; i++) {\n                    var p = possible_checked_var[i][znak][cifr[i]].slice();\n                    if (p.length === 0 || p[0] === 0) {\n                        possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                        p = possible_checked_var[i][znak][cifr[i]].slice();\n                    }\n                    chislo_plus[i] = p[randomInteger(p.length)];\n                    chislo_plus_all += chislo_plus[i]*power10(i);\n                }\n            } while (chislo_plus_all === 0);\n\n            for (let i = 0; i < Kolcifr-per; i++) {\n                if (cifr[i]>=5 && cifr[i] <= 8) {\n                    for (let k = 5; k <= 9; k++){\n                        exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                        exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                    }\n                }\n                else {\n                    for (let k = 0; k <= 4; k++){\n                        exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                        exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                    }\n                }\n                if (znak === 0)  cifr[i] += parseInt(chislo_plus[i]);\n                else cifr[i] -= parseInt(chislo_plus[i]);\n            }\n\n            if (znak === 0) chislo_plus_f();\n            else chislo_minus_f();\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_brother_add_sub() {\n        var max_chislo = power10(Kolcifr)-1;\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n\n        if (schotchik === Kolslog) {\n            ravno();\n        }\n        else {\n            var vspom_chislo1 = 0, vspom_chislo2 = 0;\n            for (let i = 0; i < Kolcifr; i++){\n                vspom_chislo1 += 5*power10(i);\n                vspom_chislo2 += 7*power10(i);\n            }\n            if (chislo >= vspom_chislo2) znak = 1;\n            else if (chislo < vspom_chislo1) znak = 0;\n            else znak = randomInteger(2);\n            var razmer = parseInt((chislo.toString()).length);\n            var per = 0;\n            if (half === true && razmer > 1 && Kolcifr > 1 && schotchik % 2 === 1){\n                per = 1;\n                switch (chislo%power10(Kolcifr-1)){\n                    case 0: znak = 0; break;\n                    case parseInt(max_chislo/10): znak = 1; break;\n                    default: znak = randomInteger(2); break;\n                }\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = [];\n                for (let i = 0; i < Kolcifr-per; i++) {\n                    var p = possible_checked_var[i][znak][cifr[i]].slice();\n                    if (p.length === 0 || p[0] === 0) {\n                        possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                        p = possible_checked_var[i][znak][cifr[i]].slice();\n                    }\n                    chislo_plus[i] = p[randomInteger(p.length)];\n                    chislo_plus_all += chislo_plus[i]*power10(i);\n                }\n            } while (chislo_plus_all === 0);\n\n            for (let i = 0; i < Kolcifr-per; i++) {\n                if (znak === 0)  cifr[i] += parseInt(chislo_plus[i]);\n                else cifr[i] -= parseInt(chislo_plus[i]);\n                for (let k = 0; k <= 9; k++){\n                    exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                }\n            }\n\n            if (znak === 0) chislo_plus_f();\n            else chislo_minus_f();\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_friend_add() {\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n        if (schotchik === Kolslog) {\n            ravno();\n        }\n        else {\n            var razmer = parseInt((chislo.toString()).length);\n            var per = 0;\n            if (half === true && razmer > 1 && Kolcifr > 1 && schotchik % 2 === 1){\n                per = 1;\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = [];\n                for (let i = 0; i < Kolcifr-per; i++) {\n                    var p = possible_checked_var[i][znak][cifr[i]].slice();\n                    if (p.length === 0 || p[0] === 0) {\n                        possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                        p = possible_checked_var[i][znak][cifr[i]].slice();\n                    }\n                    chislo_plus[i] = p[randomInteger(p.length)];\n                    chislo_plus_all += chislo_plus[i]*power10(i);\n                }\n            } while (chislo_plus_all === 0);\n\n            for (let i = 0; i < Kolcifr-per; i++) {\n                for (let k = 0; k <= 9; k++){\n\n                    exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n\n                }\n            }\n            chislo_plus_f();\n            cifr.length = 0;\n            for (let i = 0; i < Kolcifr; i++) {\n                cifr[i] = parseInt((chislo % power10(i + 1))/power10(i));\n            }\n\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_friend_sub() {\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n\n\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n        var razmer = 0;\n        razmer = parseInt((chislo.toString()).length);\n\n        if (razmer === 1 || schotchik === Kolslog) {\n            ravno();\n        }\n        else {\n            var per = 0;\n            if (half === true && razmer > 2  && Kolcifr > 1 && schotchik % 2 === 1){\n                per = 1;\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = undefined;\n                chislo_plus = [];\n                for (let i = 0; i < razmer - 1 - per; i++) {\n                    var p = possible_checked_var[i][1][cifr[i]];\n                    if (p.length === 0 || p[0] === 0) {\n                        possible_checked_var[i][1][cifr[i]] = POSSIBLE_CHECKED_CONST[1][cifr[i]].slice();\n                        p = possible_checked_var[i][1][cifr[i]];\n                    }\n                    chislo_plus[i] = p[randomInteger(p.length)];\n                    chislo_plus_all += chislo_plus[i]*power10(i);\n                }\n            } while (chislo_plus_all === 0);\n\n            for (let i = 0; i < razmer - 1 - per; i++) {\n                for (let k = 0; k <= 9; k++){\n\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n\n                }\n            }\n\n            chislo_minus_f();\n            razmer = parseInt((chislo.toString()).length);\n            cifr.length = 0;\n            for (let i = 0; i < razmer; i++) {\n                cifr[i] = parseInt((chislo % power10(i + 1))/power10(i));\n            }\n            cifr.length = razmer - 1;\n\n\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_friend_add_sub() {\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n\n        var razmer = 0;\n        razmer = parseInt((chislo.toString()).length);\n        if (schotchik === Kolslog) {\n            ravno();\n        }\n        else {\n            if (razmer <= Kolcifr) znak = 0;\n            else znak =  randomInteger(2);\n            var per = 0;\n            if (half === true && razmer > 1 && Kolcifr > 1 && schotchik % 2 === 1){\n                per = 1;\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = [];\n                if (znak === 0){\n                    for (let i = 0; i < Kolcifr - per; i++) {\n                        var p = possible_checked_var[i][znak][cifr[i]].slice();\n                        if (p.length === 0 || p[0] === 0) {\n                            possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                            p = possible_checked_var[i][znak][cifr[i]].slice();\n                        }\n                        chislo_plus[i] = p[randomInteger(p.length)];\n                        chislo_plus_all += chislo_plus[i]*power10(i);\n                    }\n                }\n                else{\n                    if (razmer > Kolcifr){\n                        for (let i = 0; i < Kolcifr - per; i++) {\n                            let p = possible_checked_var[i][znak][cifr[i]].slice();\n                            if (p.length === 0 || p[0] === 0) {\n                                possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                                p = possible_checked_var[i][znak][cifr[i]].slice();\n                            }\n                            chislo_plus[i] = p[randomInteger(p.length)];\n                            chislo_plus_all += chislo_plus[i]*power10(i);\n                        }\n                    }\n                    else{\n                        for (let i = 0; i < razmer - 1; i++) {\n                            let p = possible_checked_var[i][znak][cifr[i]].slice();\n                            if (p.length === 0 || p[0] === 0) {\n                                possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                                p = possible_checked_var[i][znak][cifr[i]].slice();\n                            }\n                            chislo_plus[i] = p[randomInteger(p.length)];\n                            chislo_plus_all += chislo_plus[i]*power10(i);\n                        }\n                    }\n                }\n            } while (chislo_plus_all === 0);\n\n            for (let i = 0; i < Kolcifr - per; i++) {\n\n                for (let k = 0; k <= 9; k++){\n                    exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                }\n\n            }\n            if (znak === 0) {\n                chislo_plus_f();\n                cifr.length = 0;\n                for (let i = 0; i < Kolcifr; i++) {\n                    cifr[i] = parseInt((chislo % power10(i + 1))/power10(i));\n                }\n            }\n            else {\n                chislo_minus_f();\n                cifr.length = 0;\n                for (let i = 0; i < Kolcifr; i++) {\n                    cifr[i] = parseInt((chislo % power10(i + 1))/power10(i));\n                }\n            }\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_combo_add() {\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n\n        if (schotchik === Kolslog) {\n            ravno();\n        }\n        else {\n            var razmer = parseInt((chislo.toString()).length);\n            var per = 0;\n            if (half === true && razmer > 1 && Kolcifr > 1 && schotchik % 2 === 1){\n                per = 1;\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = [];\n                for (let i = 0; i < Kolcifr-per; i++) {\n                    var p = possible_checked_var[i][znak][cifr[i]].slice();\n                    if (p.length === 0 || p[0] === 0) {\n                        possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                        p = possible_checked_var[i][znak][cifr[i]].slice();\n                    }\n                    chislo_plus[i] = p[randomInteger(p.length)];\n                    chislo_plus_all += chislo_plus[i]*power10(i);\n                }\n            } while (chislo_plus_all === 0);\n            for (let i = 0; i < Kolcifr-per; i++) {\n                for (let k = 0; k <= 9; k++){\n                    exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                }\n            }\n            chislo_plus_f();\n            cifr.length = 0;\n            for (let i = 0; i < Kolcifr; i++) {\n                cifr[i] = parseInt((chislo % power10(i + 1))/power10(i));\n            }\n\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_combo_sub() {\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation).slice();\n\n\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n        var razmer = 0;\n        razmer = parseInt((chislo.toString()).length);\n\n        if (razmer === 1 || schotchik === Kolslog) {\n            ravno();\n        }\n        else {\n            var per = 0;\n            if (half === true && razmer > 2 && Kolcifr > 1 && schotchik % 2 === 1){\n                per = 1;\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = undefined;\n                chislo_plus = [];\n\n\n                for (let i = 0; i < razmer - 1 - per; i++) {\n                    var p = possible_checked_var[i][1][cifr[i]];\n                    if (p.length === 0 || p[0] === 0) {\n                        possible_checked_var[i][1][cifr[i]] = POSSIBLE_CHECKED_CONST[1][cifr[i]].slice();\n                        p = possible_checked_var[i][1][cifr[i]];\n                    }\n                    chislo_plus[i] = p[randomInteger(p.length)];\n                    chislo_plus_all += chislo_plus[i]*power10(i);\n                }\n            } while (chislo_plus_all === 0);\n\n            for (let i = 0; i < razmer - 1 - per; i++) {\n                for (let k = 0; k <= 4; k++){\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                }\n            }\n\n            chislo_minus_f();\n            razmer = parseInt((chislo.toString()).length);\n            cifr.length = 0;\n            for (let i = 0; i < razmer; i++) {\n                cifr[i] = parseInt((chislo % power10(i + 1))/power10(i));\n            }\n            cifr.length = razmer - 1;\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_combo_add_sub() {\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n\n        var razmer = 0;\n        razmer = parseInt((chislo.toString()).length);\n        if (schotchik === Kolslog) {\n            ravno();\n        }\n        else {\n            if (razmer <= Kolcifr) znak = 0;\n            else znak =  randomInteger(2);\n            var per = 0;\n            if (half === true && razmer > 1 && Kolcifr > 1 && schotchik % 2 === 1){\n                per = 1;\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = [];\n                if (znak === 0){\n                    for (let i = 0; i < Kolcifr - per; i++) {\n                        var p = possible_checked_var[i][znak][cifr[i]].slice();\n                        if (p.length === 0 || p[0] === 0) {\n                            possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                            p = possible_checked_var[i][znak][cifr[i]].slice();\n                        }\n                        chislo_plus[i] = p[randomInteger(p.length)];\n                        chislo_plus_all += chislo_plus[i]*power10(i);\n                    }\n                }\n                else{\n                    if (razmer > Kolcifr){\n                        for (let i = 0; i < Kolcifr - per; i++) {\n                            let p = possible_checked_var[i][znak][cifr[i]].slice();\n                            if (p.length === 0 || p[0] === 0) {\n                                possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                                p = possible_checked_var[i][znak][cifr[i]].slice();\n                            }\n                            chislo_plus[i] = p[randomInteger(p.length)];\n                            chislo_plus_all += chislo_plus[i]*power10(i);\n                        }\n                    }\n                    else{\n                        for (let i = 0; i < razmer - 1; i++) {\n                            let p = possible_checked_var[i][znak][cifr[i]].slice();\n                            if (p.length === 0 || p[0] === 0) {\n                                possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                                p = possible_checked_var[i][znak][cifr[i]].slice();\n                            }\n                            chislo_plus[i] = p[randomInteger(p.length)];\n                            chislo_plus_all += chislo_plus[i]*power10(i);\n                        }\n                    }\n                }\n            } while (chislo_plus_all === 0);\n\n            for (let i = 0; i < Kolcifr - per; i++) {\n                for (let k = 0; k <= 9; k++){\n                    exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                }\n            }\n            if (znak === 0) {\n                chislo_plus_f();\n                cifr.length = 0;\n                for (let i = 0; i < Kolcifr; i++) {\n                    cifr[i] = parseInt((chislo % power10(i + 1))/power10(i));\n                }\n            }\n            else {\n                chislo_minus_f();\n                cifr.length = 0;\n                for (let i = 0; i < Kolcifr; i++) {\n                    cifr[i] = parseInt((chislo % power10(i + 1))/power10(i));\n                }\n            }\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_random_add() {\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n\n        if (schotchik === Kolslog) {\n            ravno();\n        }\n        else {\n            var razmer = parseInt((chislo.toString()).length);\n            var per = 0;\n            if (half === true && razmer > 1 && Kolcifr > 1 && schotchik % 2 === 1){\n                per = 1;\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = [];\n                for (let i = 0; i < Kolcifr - per; i++) {\n                    var p = possible_checked_var[i][znak][cifr[i]].slice();\n                    if (p.length === 0 || p[0] === 0) {\n                        possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                        p = possible_checked_var[i][znak][cifr[i]].slice();\n                    }\n                    chislo_plus[i] = p[randomInteger(p.length)];\n                    chislo_plus_all += chislo_plus[i]*power10(i);\n                }\n            } while (chislo_plus_all === 0);\n\n            for (let i = 0; i < Kolcifr - per; i++) {\n                for (let k = 0; k <= 9; k++){\n                    exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                }\n            }\n            chislo_plus_f();\n            cifr.length = 0;\n            for (let i = 0; i < Kolcifr; i++) {\n                cifr[i] = parseInt((chislo % power10(i + 1))/power10(i));\n            }\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_random_sub() {\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n        var razmer = 0;\n        razmer = parseInt((chislo.toString()).length);\n\n        if (razmer === 1 || schotchik === Kolslog) {\n            ravno();\n        }\n        else {\n            var per = 0;\n            if (half === true && razmer > 2 && Kolcifr > 1 && schotchik % 2 === 1){\n                per = 1;\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = undefined;\n                chislo_plus = [];\n\n\n                for (let i = 0; i < razmer - 1 - per; i++) {\n                    var p = possible_checked_var[i][1][cifr[i]];\n                    if (p.length === 0 || p[0] === 0) {\n                        possible_checked_var[i][1][cifr[i]] = POSSIBLE_CHECKED_CONST[1][cifr[i]].slice();\n                        p = possible_checked_var[i][1][cifr[i]];\n                    }\n                    chislo_plus[i] = p[randomInteger(p.length)];\n                    chislo_plus_all += chislo_plus[i]*power10(i);\n                }\n            } while (chislo_plus_all === 0);\n\n            for (let i = 0; i < razmer - 1 - per; i++) {\n                for (let k = 0; k <= 9; k++){\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                }\n            }\n            chislo_minus_f();\n            razmer = parseInt((chislo.toString()).length);\n            cifr.length = 0;\n            for (let i = 0; i < razmer; i++) {\n                cifr[i] = parseInt((chislo % power10(i + 1))/power10(i));\n            }\n            cifr.length = razmer - 1;\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_random_add_sub() {\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n        var razmer = 0;\n        razmer = parseInt((chislo.toString()).length);\n        if (schotchik === Kolslog) {\n            ravno();\n        }\n        else {\n            if (razmer <= Kolcifr) znak = 0;\n            else znak =  randomInteger(2);\n            var per = 0;\n            if (half === true && razmer > 1 && Kolcifr > 1 && schotchik % 2 === 1){\n                per = 1;\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = [];\n                if (znak === 0){\n                    for (let i = 0; i < Kolcifr - per; i++) {\n                        var p = possible_checked_var[i][znak][cifr[i]].slice();\n                        if (p.length === 0 || p[0] === 0) {\n                            possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                            p = possible_checked_var[i][znak][cifr[i]].slice();\n                        }\n                        chislo_plus[i] = p[randomInteger(p.length)];\n                        chislo_plus_all += chislo_plus[i]*power10(i);\n                    }\n                }\n                else{\n                    if (razmer > Kolcifr){\n                        for (let i = 0; i < Kolcifr - per; i++) {\n                            let p = possible_checked_var[i][znak][cifr[i]].slice();\n                            if (p.length === 0 || p[0] === 0) {\n                                possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                                p = possible_checked_var[i][znak][cifr[i]].slice();\n                            }\n                            chislo_plus[i] = p[randomInteger(p.length)];\n                            chislo_plus_all += chislo_plus[i]*power10(i);\n                        }\n                    }\n                    else{\n                        for (let i = 0; i < razmer - 1; i++) {\n                            let p = possible_checked_var[i][znak][cifr[i]].slice();\n                            if (p.length === 0 || p[0] === 0) {\n                                possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                                p = possible_checked_var[i][znak][cifr[i]].slice();\n                            }\n                            chislo_plus[i] = p[randomInteger(p.length)];\n                            chislo_plus_all += chislo_plus[i]*power10(i);\n                        }\n                    }\n                }\n            } while (chislo_plus_all === 0);\n\n            for (let i = 0; i < Kolcifr - per; i++) {\n                for (let k = 0; k <= 9; k++){\n                    exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                }\n            }\n\n            if (znak === 0) {\n                chislo_plus_f();\n                cifr.length = 0;\n                for (let i = 0; i < Kolcifr; i++) {\n                    cifr[i] = parseInt((chislo % power10(i + 1))/power10(i));\n                }\n            }\n            else {\n                cifr.length = 0;\n                for (let i = 0; i < Kolcifr; i++) {\n                    cifr[i] = parseInt((chislo % power10(i + 1))/power10(i));\n                }\n                chislo_minus_f();\n            }\n        }\n    }\n\n    return {\n        generate,\n        generateFractional,\n        calculate_simple_add_sub: calculate_simple_add_sub,\n        possible_checked: possible_checked\n    }\n})();\n\n(function (root, factory) {\n    let define;\n    if (typeof define === \"function\" && define.amd) {\n        define([], factory);\n    } else if (typeof exports === \"object\") {\n        module.exports = factory();\n    } else {\n        root._utils = factory();\n    }\n}(this, function () {\n    return _utils;\n}));","import React, { Component } from 'react';\r\n\r\nimport utils from './libs/generator'\r\n\r\n\r\nfunction process(cfg) {\r\n\r\n\r\n    let res = utils.generate(cfg);\r\n    //console.log('Level:', cfg.Level, '| Operation:', cfg.Operation, '| Result:', res);\r\n    //let seq_sum = res.seq.reduce(function (a, b) { return a + b; });\r\n    //let ans = res.answer.reverse().reduce(function (a, b) { return a * 10 + b });\r\n    //console.assert(seq_sum == ans, seq_sum, ans);\r\n    //console.assert(res.seq.length == cfg.Kolslog);\r\n    return res\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const MyContext = React.createContext();\r\n\r\nexport class Provider extends Component {\r\n    ansPosition = 0\r\n    state = {\r\n        gameStarted: false,\r\n        seq: [],\r\n        ansPosition: 0,\r\n        beadHeight: 0,\r\n        value: 0,\r\n        dragged: {\r\n            c: null,\r\n            r: null\r\n        },\r\n        active: false,\r\n        abacusState: [\r\n            [{\r\n                beadState: 0,\r\n                active: false,\r\n                currentY: 0,\r\n                initialY: 0,\r\n                yOffset: 0,\r\n            }, {\r\n                beadState: 0,\r\n                active: false,\r\n                currentY: 0,\r\n                initialY: 0,\r\n                yOffset: 0,\r\n            }, {\r\n                beadState: 0,\r\n                active: false,\r\n                currentY: 0,\r\n                initialY: 0,\r\n                yOffset: 0,\r\n            }, {\r\n                beadState: 0,\r\n                active: false,\r\n                currentY: 0,\r\n                initialY: 0,\r\n                yOffset: 0,\r\n            }, {\r\n                beadState: 0,\r\n                active: false,\r\n                currentY: 0,\r\n                initialY: 0,\r\n                yOffset: 0,\r\n            }],\r\n            [{\r\n                beadState: 0,\r\n                active: false,\r\n                currentY: 0,\r\n                initialY: 0,\r\n                yOffset: 0,\r\n            }, {\r\n                beadState: 0,\r\n                active: false,\r\n                currentY: 0,\r\n                initialY: 0,\r\n                yOffset: 0,\r\n            }, {\r\n                beadState: 0,\r\n                active: false,\r\n                currentY: 0,\r\n                initialY: 0,\r\n                yOffset: 0,\r\n            }, {\r\n                beadState: 0,\r\n                active: false,\r\n                currentY: 0,\r\n                initialY: 0,\r\n                yOffset: 0,\r\n            }, {\r\n                beadState: 0,\r\n                active: false,\r\n                currentY: 0,\r\n                initialY: 0,\r\n                yOffset: 0,\r\n            }],\r\n        ]\r\n    }\r\n\r\n    dragStart = (e) => {\r\n\r\n        try {\r\n            let newState = Object.assign({}, this.state);\r\n\r\n            newState.dragged.c = parseInt(e.target.id[0]);\r\n            newState.dragged.r = parseInt(e.target.id[2]);\r\n            let c = parseInt(e.target.id[0]);\r\n            let r = parseInt(e.target.id[2]);\r\n\r\n\r\n\r\n\r\n\r\n            let uch;\r\n            uch = document.querySelector('#uc1').getBoundingClientRect().height;\r\n            newState.beadHeight = uch;  // изучи получше реакт и научись делать это в ComponentDidMount\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            if (e.type === \"touchstart\") {\r\n                newState.abacusState[c][r].initialY = e.touches[0].clientY - this.state.abacusState[c][r].yOffset;\r\n            } else {\r\n                newState.abacusState[c][r].initialY = e.clientY - this.state.abacusState[c][r].yOffset;\r\n            }\r\n\r\n            if (e.target !== e.currentTarget) {\r\n                // newState.abacusState[c][r].active = true;\r\n                newState.active = true;\r\n\r\n            }\r\n\r\n\r\n\r\n            this.setState(newState);\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    drag = (e) => {\r\n        let c, r;\r\n\r\n        try {\r\n\r\n            //   if (this.state.abacusState[c][r].active === true) {\r\n            if (this.state.active === true) {\r\n\r\n                c = this.state.dragged.c;\r\n                r = this.state.dragged.r;\r\n                let newState = Object.assign({}, this.state);\r\n                let uch = newState.beadHeight;\r\n\r\n\r\n                // let dragItem = e.target;\r\n                e.preventDefault();\r\n\r\n                let currentY;\r\n\r\n\r\n                if (e.type === \"touchmove\") {\r\n                    currentY = e.touches[0].clientY - this.state.abacusState[c][r].initialY;\r\n                } else {\r\n                    currentY = e.clientY - this.state.abacusState[c][r].initialY;\r\n                }\r\n\r\n                if (!this.state.abacusState[c][r].beadState) {\r\n                    if (r === 0) {\r\n                        if (currentY >= 0) {\r\n                            if (currentY < uch / 4) {\r\n                                newState.abacusState[c][r].currentY = currentY\r\n                                //this.setTranslate(newState.abacusState[c][r].currentY, dragItem);\r\n                            } else {\r\n                                currentY = uch / 2\r\n                                //this.setTranslate(newState.abacusState[c][r].currentY, dragItem);\r\n\r\n                                newState.abacusState[c][r].yOffset = currentY;\r\n                                newState.abacusState[c][r].currentY = currentY;\r\n                                newState.abacusState[c][r].beadState = 1;\r\n                                // newState.abacusState[c][r].active = false;\r\n                                newState.active = false;\r\n                                this.setState(newState);\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if ([1, 2, 3, 4].includes(r)) {\r\n                        if (currentY < 0) {\r\n                            if (currentY > -1 * uch / 4) {\r\n                                // this.setTranslate(currentY, dragItem);\r\n                                newState.abacusState[c][r].currentY = currentY;\r\n                                let firstOne = 1;\r\n                                for (let ind = 1; ind <= 4; ind++) {\r\n                                    if (newState.abacusState[c][ind].beadState === 1) {\r\n                                        firstOne = ind + 1;\r\n                                    }\r\n                                }\r\n\r\n                                for (let ind = firstOne; ind <= r; ind++) {\r\n                                    // let item = document.querySelector(\"#bead_\" + c + \"_\" + ind);\r\n                                    // this.setTranslate(newState.abacusState[c][r].currentY, item);\r\n                                    newState.abacusState[c][ind].currentY = currentY;\r\n                                    newState.abacusState[c][ind].yOffset = currentY;\r\n                                }\r\n                            } else {\r\n                                currentY = -1 * uch / 2;\r\n\r\n                                for (let ind = 1; ind <= r; ind++) {\r\n                                    // let item = document.querySelector(\"#bead_\" + c + \"_\" + ind);\r\n                                    //this.setTranslate(newState.abacusState[c][r].currentY, item);\r\n\r\n                                    newState.abacusState[c][ind].beadState = 1;\r\n                                    newState.abacusState[c][ind].yOffset = currentY;\r\n                                    newState.abacusState[c][ind].currentY = currentY;\r\n                                }\r\n\r\n                                // newState.abacusState[c][r].active = false;\r\n                                newState.active = false;\r\n                                this.setState(newState);\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (newState.abacusState[c][r].beadState) {\r\n\r\n                    if (r === 0) {\r\n\r\n                        if (newState.abacusState[c][r].currentY > uch / 4) {\r\n                            // this.setTranslate(newState.abacusState[c][r].currentY, dragItem);\r\n                            newState.abacusState[c][r].currentY = currentY;\r\n                            newState.abacusState[c][r].yOffset = currentY;\r\n                        }\r\n                        else if (currentY <= uch / 4) {\r\n\r\n                            currentY = 0;\r\n                            // this.setTranslate(newState.abacusState[c][r].currentY, dragItem);\r\n                            newState.abacusState[c][r].currentY = currentY;\r\n                            newState.abacusState[c][r].yOffset = currentY;\r\n                            newState.abacusState[c][r].beadState = 0;\r\n                            // newState.abacusState[c][r].active = false;\r\n                            newState.active = false;\r\n                            this.setState(newState);\r\n                            return false;\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    if ([1, 2, 3, 4].includes(r)) {\r\n                        if (currentY < 0) {\r\n                            if (currentY <= -1 * uch / 4 && currentY > -1 * uch / 2) {\r\n                                let firstZero = 4;\r\n\r\n                                for (let ind = 4; ind > 0; ind--) {\r\n                                    if (newState.abacusState[c][ind].beadState === 0) {\r\n                                        firstZero = ind - 1;\r\n                                    }\r\n                                }\r\n                                for (let ind = r; ind <= firstZero; ind++) {\r\n                                    newState.abacusState[c][ind].currentY = currentY;\r\n                                    newState.abacusState[c][ind].yOffset = currentY;\r\n                                    // let item = document.querySelector(\"#bead_\" + c + \"_\" + ind);\r\n                                    // this.setTranslate(newState.abacusState[c][r].currentY, item);\r\n                                }\r\n                                //this.setTranslate(currentY, dragItem);\r\n\r\n                            }\r\n                            if (currentY > -1 * uch / 4) {\r\n                                currentY = 0;\r\n                                //this.setTranslate(currentY, dragItem);\r\n                                for (let ind = r; ind <= 4; ind++) {\r\n                                    // let item = document.querySelector(\"#bead_\" + c + \"_\" + ind);\r\n                                    // this.setTranslate(newState.abacusState[c][r].currentY, item);\r\n                                    newState.abacusState[c][ind].beadState = 0;\r\n                                    newState.abacusState[c][ind].yOffset = currentY;\r\n                                    newState.abacusState[c][ind].currentY = currentY;\r\n                                }\r\n                                // newState.abacusState[c][r].active = false;\r\n                                newState.active = false;\r\n                                this.setState(newState);\r\n                                return false;\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                this.setState(newState);\r\n            }\r\n        } catch (e) {\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    dragEnd = (e) => {\r\n\r\n\r\n        try {\r\n            let c = this.state.dragged.c;\r\n            let r = this.state.dragged.r;\r\n            let newState = Object.assign({}, this.state);\r\n            let uch = newState.beadHeight;\r\n            let currentY = newState.abacusState[c][r].currentY;\r\n\r\n\r\n\r\n            //   if (newState.abacusState[c][r].active) {\r\n            if (!newState.abacusState[c][r].beadState) {\r\n\r\n                if (r === 0) {\r\n                    if (currentY < uch / 2) {\r\n                        currentY = 0;\r\n                        newState.abacusState[c][r].yOffset = currentY;\r\n                        newState.abacusState[c][r].currentY = currentY;\r\n                        // setTranslate(newState.abacusState[c][r].currentY, dragItem);\r\n                    }\r\n                }\r\n                if ([1, 2, 3, 4].includes(r)) {\r\n                    if (currentY > -1 * uch / 4) {\r\n                        let firstOne = 1;\r\n                        for (let ind = 1; ind <= 4; ind++) {\r\n                            if (newState.abacusState[c][ind].beadState === 1) {\r\n                                firstOne = ind + 1;\r\n                            }\r\n                        }\r\n                        for (let ind = firstOne; ind <= r; ind++) {\r\n                            newState.abacusState[c][ind].currentY = 0;\r\n                            newState.abacusState[c][ind].yOffset = 0;\r\n                            // let item = document.querySelector(\"#bead_\" + column + \"_\" + ind);\r\n                            // setTranslate(abacusState[column][ind].currentY, item);\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (newState.abacusState[c][r].beadState) {\r\n                if (r === 0) {\r\n                    if (currentY > uch / 4) {\r\n                        currentY = uch / 2;\r\n                        newState.abacusState[c][r].currentY = currentY;\r\n                        newState.abacusState[c][r].yOffset = currentY;\r\n                        //   newState.abacusState[c][r].yOffset = newState.abacusState[c][r].yOffset;\r\n                        // setTranslate(newState.abacusState[c][r].currentY, dragItem);\r\n                    }\r\n                }\r\n                if ([1, 2, 3, 4].includes(r)) {\r\n\r\n                    if (newState.abacusState[c][r].currentY > -1 * uch / 2) {\r\n                        let firstZero = 4;\r\n\r\n                        for (let ind = 4; ind > 0; ind--) {\r\n                            if (newState.abacusState[c][ind].beadState === 0) {\r\n                                firstZero = ind - 1;\r\n                            }\r\n                        }\r\n                        for (let ind = r; ind <= firstZero; ind++) {\r\n                            currentY = -1 * uch / 2;\r\n                            newState.abacusState[c][ind].yOffset = currentY;\r\n                            newState.abacusState[c][ind].currentY = currentY;\r\n                            // abacusState[column][ind].yOffset = abacusState[column][ind].yOffset;\r\n                            // let item = document.querySelector(\"#bead_\" + column + \"_\" + ind);\r\n                            // setTranslate(abacusState[column][ind].currentY, item);\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n            //   }\r\n            newState.abacusState[c][r].initialY = currentY;\r\n            // newState.abacusState[c][r].active = false;\r\n            newState.active = false;\r\n            newState.dragged.c = null;\r\n            newState.dragged.r = null;\r\n            newState.value = this.calculateValue(newState.abacusState);\r\n            this.setState(newState);\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    calculateValue(abacusState) {\r\n        let value0 = abacusState[0][0].beadState * 5 + Math.max(abacusState[0][1].beadState, abacusState[0][2]\r\n            .beadState * 2, abacusState[0][3].beadState * 3, abacusState[0][4].beadState * 4);\r\n        let value1 = 10 * (abacusState[1][0].beadState * 5 + Math.max(abacusState[1][1].beadState, abacusState[\r\n            1][2]\r\n            .beadState * 2, abacusState[1][3].beadState * 3, abacusState[1][4].beadState * 4));\r\n        return value0 + value1;\r\n    }\r\n\r\n    resetAbacus = () => {\r\n        let newState = Object.assign({}, this.state);\r\n        newState.abacusState = this.generateEmptyAbacus();\r\n        this.setState(newState);\r\n\r\n    }\r\n\r\n\r\n    generateEmptyAbacus = () => {\r\n        let c = 2;\r\n        let r = 5;\r\n        let abacus = [];\r\n        for (let j = 1; j <= c; j++) {\r\n            abacus.push([])\r\n            for (let i = 1; i <= r; i++) {\r\n                abacus[j-1].push({\r\n                    beadState: 0,\r\n                    active: false,\r\n                    currentY: 0,\r\n                    initialY: 0,\r\n                    yOffset: 0,\r\n                })\r\n            }\r\n        }\r\n        return abacus\r\n    }\r\n\r\n    resetStart = () => {\r\n        document.getElementById(\"reset\").setAttribute(\"class\", \"reset reset_clicked\");\r\n        this.resetAbacus();\r\n    }\r\n\r\n    resetEnd = () => {\r\n        document.getElementById(\"reset\").setAttribute(\"class\", \"reset\");\r\n    }\r\n    startGame = () => {\r\n        var level = { level: 2, Checked_cifr: [1] };\r\n\r\n        var cfg = {\r\n            Checked_cifr: level.Checked_cifr,\r\n            Level: level.level,\r\n            Operation: 2,\r\n            Kolslog: 3,\r\n            Kolcifr: 1\r\n        }\r\n        let res = process(cfg);\r\n        let newState = Object.assign({}, this.state);\r\n        newState.seq = res.seq;\r\n        newState.ans = res.ans;\r\n        newState.gameStarted = true;\r\n\r\n        this.setState(newState);\r\n    }\r\n    nextLevel = () => {\r\n        \r\n        console.log(\"nextlevel\")\r\n        let newState = Object.assign({}, this.state);\r\n        newState.ansPosition = 0;\r\n\r\n        \r\n        newState.abacusState = this.generateEmptyAbacus();\r\n        \r\n\r\n        var level = { level: 2, Checked_cifr: [1] };\r\n\r\n        var cfg = {\r\n            Checked_cifr: level.Checked_cifr,\r\n            Level: level.level,\r\n            Operation: 2,\r\n            Kolslog: 3,\r\n            Kolcifr: 1\r\n        }\r\n        let res = process(cfg);\r\n        newState.seq = res.seq;\r\n        this.setState(newState);\r\n\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n\r\n        let intermedateSum = 0;\r\n        for (let i = 0; i <= this.state.ansPosition; i++) {\r\n            intermedateSum += this.state.seq[i];\r\n        }\r\n\r\n        if (this.state.value === intermedateSum) {\r\n            let newState = Object.assign({}, this.state);\r\n            newState.ansPosition = this.state.ansPosition + 1;\r\n            this.setState(newState);\r\n        }\r\n\r\n\r\n        console.log(intermedateSum, this.state.seq, this.state.ansPosition, this.state.value)\r\n\r\n        if (this.state.ansPosition === 3) {\r\n            this.nextLevel();\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <MyContext.Provider\r\n                value={{\r\n                    gameStarted: this.state.gameStarted,\r\n                    seq: this.state.seq,\r\n                    exerciseAnswer: this.state.exerciseAnswer,\r\n                    ansPosition: this.state.ansPosition,\r\n                    value: this.state.value,\r\n                    dragged: this.state.dragged,\r\n                    active: this.state.active,\r\n                    abacusState: this.state.abacusState,\r\n                    actions: {\r\n                        nextExample: this.nextExample,\r\n                        startGame: this.startGame,\r\n                        nextLevel: this.nextLevel,\r\n                        resetStart: this.resetStart,\r\n                        resetEnd: this.resetEnd,\r\n                        dragStart: this.dragStart,\r\n                        drag: this.drag,\r\n                        dragEnd: this.dragEnd,\r\n                    },\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </MyContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Consumer = MyContext.Consumer ","import React, { Component } from 'react';\r\nimport './Bead.css'\r\nimport { Consumer } from \"./AbacusContext\";\r\n\r\nclass Bead extends Component {\r\n\r\n    render() {\r\n\r\n        let tclass;\r\n        if (this.props.row >= 1) {\r\n            tclass = \"bead bead_bottom\"\r\n        } else if (this.props.row === 0) {\r\n            tclass = \"bead bead_upper\"\r\n        }\r\n\r\n        return (\r\n            <Consumer>\r\n                {context => {\r\n\r\n                    let y = context.abacusState[this.props.column][this.props.row].currentY;\r\n\r\n                    let styles = {\r\n                        transform: `translateY(${y}px)`\r\n                    };\r\n\r\n                    return (\r\n                        <div\r\n                            style={styles}\r\n                            className={`${tclass}`}\r\n                            id={this.props.column + \" \" + this.props.row}\r\n\r\n/*                          onTouchStart={(e) => context.actions.dragStart(e, this.props.column, this.props.row)}\r\n                            onTouchMove={(e) => context.actions.drag(e, this.props.column, this.props.row)}\r\n                            onTouchEnd={(e) => context.actions.dragEnd(e, this.props.column, this.props.row)}\r\n\r\n                            onMouseDown={(e) => context.actions.dragStart(e, this.props.column, this.props.row)}\r\n                            onMouseMove={(e) => context.actions.drag(e, this.props.column, this.props.row)}\r\n                            onMouseUp={(e) => context.actions.dragEnd(e, this.props.column, this.props.row)} */\r\n                        ></div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Bead","import React, { Component } from 'react';\r\nimport './Abacus.css';\r\nimport Bead from './Bead';\r\nimport { Consumer } from \"./AbacusContext\";\r\n\r\n\r\n\r\nclass AbacusTest extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Consumer>\r\n                {context => (\r\n\r\n                    <div \r\n                        className={\"abacus\" + context.abacusState.length} \r\n                        id=\"abacus\"\r\n                        onTouchStart={(e) => context.actions.dragStart(e)}\r\n                        onTouchMove={(e) => context.actions.drag(e)}\r\n                        onTouchEnd={(e) => context.actions.dragEnd(e)}\r\n\r\n                        onMouseDown={(e) => context.actions.dragStart(e)}\r\n                        onMouseMove={(e) => context.actions.drag(e)}\r\n                        onMouseUp={(e) => context.actions.dragEnd(e)}\r\n                    >\r\n                        <div className=\"button_holder\">\r\n                            <div className=\"somecass\"\r\n                            onMouseDown={(e) => context.actions.resetStart(e)}  \r\n                            onMouseUp={(e) => context.actions.resetEnd(e)}\r\n                            id=\"pressarea\">\r\n                                <div className=\"reset\" id=\"reset\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"upperedge edgefillhor\">\r\n                           \r\n                        </div>\r\n                        {context.abacusState.map((column, i) => (\r\n\r\n                            <React.Fragment key={\"column_\" + i}>\r\n\r\n                                <div className={\"uppercontainer\" + i} id=\"uc1\">\r\n                                    <Bead\r\n                                        column={i}\r\n                                        row={0}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"separator sepfill\"></div>\r\n                                <div className={\"bottomcontainer\" + i}>\r\n                                    <div className=\"beadspacer\"></div>\r\n                                    <Bead\r\n                                        column={i}\r\n                                        row={1}\r\n                                    />\r\n                                    <Bead\r\n                                        column={i}\r\n                                        row={2}\r\n                                    />\r\n                                    <Bead\r\n                                        column={i}\r\n                                        row={3}\r\n                                    />\r\n                                    <Bead\r\n                                        column={i}\r\n                                        row={4}\r\n                                    />\r\n                                </div>\r\n                            </React.Fragment>\r\n                        ))}\r\n                        <div className=\"bottomedge edgefillhor\"><p className=\"value\">{context.value}</p></div>\r\n                        <div className=\"rightedge edgefillvert\"></div>\r\n                    </div>\r\n                )}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AbacusTest\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './Exercise.css';\r\n\r\nimport { Consumer } from \"./AbacusContext\";\r\n\r\n\r\n\r\nclass Exercise extends Component {\r\n    \r\n    \r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {context => {\r\n                \r\n               \r\n\r\n                    return (\r\n                        <>\r\n                            <div style={context.ansPosition === 0 ? {color: \"red\"} : {color: \"black\"}}>{context.seq[0]}</div>\r\n                            <div style={context.ansPosition === 1 ? {color: \"red\"} : {color: \"black\"}}>{context.seq[1]}</div>\r\n                            <div style={context.ansPosition === 2 ? {color: \"red\"} : {color: \"black\"}}>{context.seq[2]}</div>\r\n                        </>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Exercise","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Abacus from './Abacus'\r\nimport Exercise from './Exercise'\r\nimport { Consumer } from \"./AbacusContext\";\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {context => {\r\n\r\n                    if (context.gameStarted === false) {\r\n                        return (\r\n                            <div className=\"app\">\r\n                                <button onMouseUp={(e) => context.actions.startGame(e)}>Начать!</button>\r\n                            </div>\r\n                        )\r\n                    } else {\r\n                        return (\r\n                            <div className=\"app\">\r\n\r\n                                <div className=\"header\"></div>\r\n                                <div className=\"helper\"></div>\r\n                                <div className=\"exercise\">\r\n                                    <Exercise />\r\n                                </div>\r\n                                <div className=\"abacusholder\">\r\n                                    <Abacus />\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n\r\n                }}\r\n\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"./AbacusContext\";\n\n\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n  <Provider><App /></Provider>,\n  rootElement\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}