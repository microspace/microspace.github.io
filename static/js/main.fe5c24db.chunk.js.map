{"version":3,"sources":["libs/generator.js","AbacusContext.js","Bead.js","InfoMessage.js","Abacus.js","Exercise.js","App.js","serviceWorker.js","index.js"],"names":["factory","utils","random","min","max","Math","floor","cloneObject","obj","JSON","parse","stringify","debounce","func","interval","lastCall","clearTimeout","args","arguments","self","this","setTimeout","apply","throttle","now","Date","_utils","stop_cycle","primer","POSSIBLE_CONST_PROSTO","POSSIBLE_CONST_BRAT","POSSIBLE_CONST_DRUG","POSSIBLE_CONST_COMBO","chislo","chislo_plus_all","znak","schotchik","Kolslog","Kolcifr","cifr","Level_Operation","Level","Operation","possible_checked_var","chislo_plus","half","Checked_cifr","randomInteger","n","m","power10","pow","duplicat","b","c","d","e","f","a","length","g","push","ravno","number","chislo_plus_f","parseInt","chislo_minus_f","ch","exclude","arr","index","indexOf","splice","possible_checked","arrchecked","slice","initial","arr_possible","j","k","r","p","i","calculate_simple_add","max_chislo","yes_no","POSSIBLE_CHECKED_CONST","calculate_simple_sub","calculate_simple_add_sub","max_chislo_4","l","vspom_chislo","razmer","toString","per","calculate_brother_add","vspom_chislo1","vspom_chislo2","calculate_brother_sub","calculate_brother_add_sub","calculate_friend_add","calculate_friend_sub","undefined","calculate_friend_add_sub","calculate_combo_add","calculate_combo_sub","calculate_combo_add_sub","calculate_random_add","calculate_random_sub","calculate_random_add_sub","generate","cfg","Array","isArray","Half","t","seq","answer","reduce","from","map","digit","reverse","generateFractional","result","newAnswer","digitsCountAfterPoint","digitsCountBeforePoint","termsCount","operations","treatZero","before","after","toFixed","generateAroundZero","prenum","before2","after2","replace","console","log","reachedMinus","limit","ii","abs","module","exports","process","MyContext","React","createContext","Provider","_Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","_key","possibleConstructorReturn","getPrototypeOf","call","concat","state","gameStarted","levelState","ans","ansPosition","beadHeight","value","dragged","active","abacusState","beadState","currentY","initialY","yOffset","dragStart","target","id","resetAbacus","newState","assign","uch","document","querySelector","getBoundingClientRect","height","type","touches","clientY","currentTarget","setState","drag","preventDefault","includes","ind","firstOne","firstZero","dragEnd","calculateValue","nextLevel","generateEmptyAbacus","abacus","resetStart","getElementById","setAttribute","resetEnd","startGame","level","res","inherits","createClass","key","intermedateSum","react_default","createElement","exerciseAnswer","actions","nextExample","props","children","Component","Consumer","Bead","tclass","row","context","y","column","styles","transform","style","className","InfoMessage","AbacusTest","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","Fragment","src_Bead_0","src_InfoMessage_0","Exercise","color","App","src_Exercise_0","src_Abacus","Boolean","window","location","hostname","match","rootElement","ReactDOM","render","AbacusContext_Provider","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fe5c24db.chunk.js","sourcesContent":["var utils = {\n\trandom: function (min, max) {\n\t\treturn Math.floor(Math.random() * (max - min + 1)) + min;\n\t},\n\tcloneObject: function (obj) {\n\t\treturn JSON.parse(JSON.stringify(obj));\n\t},\n\tdebounce: function (func, interval) {\n        let lastCall = -1;\n        return function() {\n            clearTimeout(lastCall);\n            let args = arguments;\n            let self = this;\n            lastCall = setTimeout(function() {\n                func.apply(self, args);\n            }, interval);\n        };\n    },\n\tthrottle: function (func, interval) {\n        let lastCall = 0;\n        return function() {\n            let now = Date.now();\n            if (lastCall + interval < now) {\n                lastCall = now;\n                return func.apply(this, arguments);\n            }\n        };\n    }\n};\n\nlet _utils = (function () {\n    const POSSIBLE_CONST_PROSTO = [\n        [\n            [\n                [0,1,2,3,4,5,6,7,8,9],\n                [0,1,2,3,5,6,7,8],\n                [0,1,2,5,6,7],\n                [0,1,5,6],[0,5],\n                [0,1,2,3,4],\n                [0,1,2,3],\n                [0,1,2],\n                [0,1],\n                [0]\n            ],\n            [\n                [],[],[],[],[],[],[],[],[],[]\n            ]\n        ],\n        [\n            [\n                [],[],[],[],[],[],[],[],[],[]\n            ],\n            [\n                [0],\n                [0,1],\n                [0,1,2],\n                [0,1,2,3],\n                [0,1,2,3,4],\n                [0,5],\n                [0,1,5,6],\n                [0,1,2,5,6,7],\n                [0,1,2,3,5,6,7,8],\n                [0,1,2,3,4,5,6,7,8,9]\n            ]\n        ],\n        [\n            [\n                [0,1,2,3,4,5,6,7,8,9],\n                [0,1,2,3,5,6,7,8],\n                [0,1,2,5,6,7],\n                [0,1,5,6],\n                [0,5],\n                [0,1,2,3,4],\n                [0,1,2,3],\n                [0,1,2],\n                [0,1],\n                [0]\n            ],\n            [\n                [0],\n                [0,1],\n                [0,1,2],\n                [0,1,2,3],\n                [0,1,2,3,4],\n                [0,5],\n                [0,1,5,6],\n                [0,1,2,5,6,7],\n                [0,1,2,3,5,6,7,8],\n                [0,1,2,3,4,5,6,7,8,9]\n            ]\n        ]\n    ];\n    const POSSIBLE_CONST_BRAT = [\n        [\n            [\n                [1,2,3,4],\n                [4],\n                [3,4],\n                [2,3,4],\n                [1,2,3,4],\n                [0,1,2,3,4],\n                [0,1,2,3],\n                [0,1,2],\n                [0,1],\n                [0]\n            ],\n            [\n                [0],\n                [0,1],\n                [0,1,2],\n                [0,1,2,3],\n                [0,1,2,3,4],\n                [0,5],\n                [5],\n                [5,6],\n                [5,6,7],\n                [5,6,7,8]\n            ]\n        ],\n        [\n            [\n                [5,6,7,8],\n                [5,6,7,8],\n                [5,6,7],\n                [5,6],\n                [0,5],\n                [0,1,2,3],\n                [0,1,2],\n                [0,1],\n                [0,1],\n                [0]\n            ],\n            [\n                [0],\n                [0,1],\n                [0,1,2],\n                [0,1,2,3],\n                [0,1,2,3,4],\n                [1,2,3,4],\n                [2,3,4],\n                [3,4],\n                [4],\n                [1,2,3,4]\n            ]\n        ],\n        [\n            [\n                [1,2,3,4],\n                [4],\n                [3,4],\n                [2,3,4],\n                [1,2,3,4],\n                [0,1,2,3,4],\n                [0,1,2,3],\n                [0,1,2],\n                [0,1],\n                [0]\n            ],\n            [\n                [0],\n                [0,1],\n                [0,1,2],\n                [0,1,2,3],\n                [0,1,2,3,4],\n                [1,2,3,4],\n                [2,3,4],\n                [3,4],\n                [4],\n                [0,1,2,3,4,5,6,7,8,9]\n            ]\n        ]\n    ];\n    const POSSIBLE_CONST_DRUG =[\n        [\n            [\n                [3,4,5,6,7],\n                [4,9],\n                [4,3,8,9],\n                [4,3,2,7,8,9],\n                [6,7,8,9],\n                [5],\n                [4,5,9],\n                [3,4,5,8,9],\n                [2,3,4,5,7,8,9],\n                [1,2,3,4,5,6,7,8,9]\n            ],\n            [\n                [],[],[],[],[],[],[],[],[],[]]\n        ],\n        [\n            [[],[],[],[],[],[],[],[],[],[]\n            ],\n            [\n                [1,2,3,4,5,6,7,8,9],\n                [2,3,4,5,7,8,9],\n                [3,4,5,8,9],\n                [4,5,9],\n                [5],\n                [6,7,8,9],\n                [4,3,2,7,8,9],\n                [4,3,8,9],\n                [4,9],\n                [3,4,5,6,7]\n            ]\n        ],\n        [\n            [\n                [3,4,5,6,7],\n                [4,9],\n                [4,3,8,9],\n                [4,3,2,7,8,9],\n                [6,7,8,9],\n                [5],\n                [4,5,9],\n                [3,4,5,8,9],\n                [2,3,4,5,7,8,9],\n                [1,2,3,4,5,6,7,8,9]\n            ],\n            [\n                [1,2,3,4,5,6,7,8,9],\n                [2,3,4,5,7,8,9],\n                [3,4,5,8,9],\n                [4,5,9],\n                [5],\n                [6,7,8,9],\n                [4,3,2,7,8,9],\n                [4,3,8,9],\n                [4,9],\n                [3,4,5,6,7]\n            ]\n        ]\n    ];\n    const POSSIBLE_CONST_COMBO = [\n        [\n            [\n                [5,6,7,8],\n                [5,6,7],\n                [3,4,5,6],\n                [2,3,4,5],\n                [6,7,8,9],\n                [6,7,8,9],\n                [6,7,8],\n                [6,7],\n                [6,7,8],\n                [6,7,8,9]\n            ],\n            [\n                [],[],[],[],[],[],[],[],[],[]\n            ]\n        ],\n        [\n            [\n                [],[],[],[],[],[],[],[],[],[]\n            ],\n            [\n                [6,7,8,9],\n                [6,7,8],\n                [6,7,8,9],\n                [6,7,8],\n                [6,7,8,9],\n                [1,2,3],\n                [1,2,3,4],\n                [1,2,3,4,5],\n                [1,2,3,4,5,6],\n                [5,6,7,8]\n            ]\n        ],\n        [\n            [\n                [1,2,3,4,5,6,7,8],\n                [5,6,7,9],\n                [3,4,5,6],\n                [2,3,4,5],\n                [6,7,8,9],\n                [6,7,8,9],\n                [6,7,8],\n                [6,7],\n                [6,7,8],\n                [6,7,8,9]\n            ],\n            [\n                [6,7,8,9],\n                [6,7,8],\n                [6,7,8,9],\n                [6,7,8],\n                [6,7,8,9],\n                [1,2,3],\n                [1,2,3,4],\n                [1,2,3,4,5],\n                [1,2,3,4,5,6],\n                [1,2,3,4,5,6,7,8]\n            ]\n        ]\n    ];\n    let stop_cycle;\n    let primer_num;\n    let primer_num_n;\n    let primer;\n    var chislo = 0,\n        chislo_plus_all = 0,\n        znak = 0,\n        schotchik = 0,\n        Kolslog = 4, // Количество слагаемых\n        Kolcifr = 1, // Сложность: 1: 1, 2: 10, 3: 100, 4: 1000\n        Kolcifr2 = null,\n        cifr = [],\n        Level_Operation = 12, // Level*10 + Operation\n        Level = 1, // 1: Просто, 2: Брат, 3: Друг, 4: Комбо, 5: Произвольный\n        Operation = 2, // 0: плюс, 1: минус, 2: плюс/минус\n        possible_checked_var = [],\n        chislo_plus = [],\n        vip = 0, // ??? Количество примеров\n        prav = 0, // Количество правильно решенных примеров\n        half = true, // Отвечает за 1/2\n        Checked_cifr = [];\n\n    /*\n     * @public\n     * Функция генерации\n     * {Object} cfg конфиг для генерации\n     *  {Array} Checked_cifr\n     *  {Number} Level Уровень игры - 1: Просто, 2: Брат, 3: Друг, 4: Комбо, 5: Произвольный\n     *  {Number} Operation Доступные операции - 0: плюс, 1: минус, 2: плюс/минус\n     *  {Number} operationLevel Уровень игры - renamed Level_Operation = Level * 10 + Operation;\n     *  {Number} Kolslog Количество слагаемых\n     *  {Number} Kolcifr Количество цифр\n     *  {Boolean} Half 1/2\n     */\n    function generate(cfg){\n        Level = cfg.Level;\n        Operation = cfg.Operation;\n        Level_Operation = Level * 10 + Operation;\n        if (Array.isArray(cfg.Kolcifr)) {\n            Kolcifr = cfg.Kolcifr[0];\n            Kolcifr2 = cfg.Kolcifr[1];\n        } else {\n            Kolcifr = cfg.Kolcifr;\n        }\n        Kolslog = cfg.Kolslog;\n        Checked_cifr = cfg.Checked_cifr;\n        half = cfg.Half;\n\n        stop_cycle = false\n        schotchik = 0\n        chislo = 0;\n        cifr = [];\n        chislo_plus = [];\n         primer_num=0\n         primer_num_n = [0,0,0,0,0,0,0,0,0]\n         primer = []\n\n        for (i = 0; i < Kolcifr ; i++) {\n            var t =  possible_checked(Level,Operation);\n            possible_checked_var[i] = t.slice();\n        }\n\n        switch (parseInt(Level_Operation)) {\n            case 10: {\n                znak = 0;\n                chislo = 0;\n                for (var i = 0; i < Kolcifr-1; i++){\n                    cifr[i] = randomInteger(4);\n                    chislo += cifr[i]*power10(i);\n                }\n                var i = Kolcifr - 1;\n                cifr[i] = 1 + randomInteger(3);\n                chislo += cifr[i]*power10(i);\n                primer.push(chislo)\n                while (stop_cycle == false){\n                    calculate_simple_add()\n                }\n\n            }\n                break;\n\n            case 11: {\n                chislo = 0;\n                var t = Checked_cifr.slice();\n                exclude(0,t);\n                for (var i = 0; i < Kolcifr; i++){\n                    cifr[i] = t[randomInteger(t.length)]\n                    chislo += cifr[i]*power10(i);\n                }\n                primer.push(chislo)\n                while (stop_cycle == false){\n                    calculate_simple_sub()\n                }\n\n            }\n                break;\n\n            case 12: {\n                chislo = 0;\n                var t = Checked_cifr.slice();\n                for (var i = 0; i < Kolcifr-1; i++){\n                    cifr[i] = t[randomInteger(t.length)]\n                    chislo += cifr[i]*power10(i);\n                }\n                exclude(0,t);\n                i = Kolcifr - 1;\n                cifr[i] = t[randomInteger(t.length)]\n                chislo += cifr[i]*power10(i);\n\n                primer.push(chislo)\n                while (stop_cycle == false){\n                    calculate_simple_add_sub()\n                }\n\n            }\n                break;\n\n            case 20: {\n                znak = 0;\n                chislo = 0;\n                for (var i = 0; i < Kolcifr-1; i++){\n                    cifr[i] = randomInteger(5);\n                    chislo += cifr[i]*power10(i);\n                }\n                i = Kolcifr - 1;\n                cifr[i] = 2 + randomInteger(3);\n                chislo += cifr[i]*power10(i);\n                ;\n                primer.push(chislo)\n                while (stop_cycle == false){\n                    calculate_brother_add()\n                }\n\n            }\n                break;\n\n            case 21: {\n                chislo = 0;\n                for (var i = 0; i < Kolcifr; i++){\n                    cifr[i] = 5+randomInteger(5);\n                    chislo += cifr[i]*power10(i);\n                }\n                ;\n                primer.push(chislo)\n                while (stop_cycle == false){\n                    calculate_brother_sub()\n                }\n            }\n                break;\n\n            case 22: {\n                chislo = 0;\n                for (var i = 0; i < Kolcifr-1; i++){\n                    cifr[i] = randomInteger(10);\n                    chislo += cifr[i]*power10(i);\n                }\n                i = Kolcifr - 1;\n                cifr[i] = 2 + randomInteger(8);\n                chislo += cifr[i]*power10(i);\n                ;\n                primer.push(chislo)\n                while (stop_cycle == false){\n                    calculate_brother_add_sub()\n                }\n\n            }\n                break;\n\n            case 30: {\n                znak = 0;\n                chislo = 0;\n                for (var i = 0; i < Kolcifr-1; i++){\n                    cifr[i] = randomInteger(10);\n                    chislo += cifr[i]*power10(i);\n                }\n                i = Kolcifr - 1;\n                cifr[i] = 2 + randomInteger(8);\n                chislo += cifr[i]*power10(i);\n                ;\n                primer.push(chislo)\n                while (stop_cycle == false){\n                    calculate_friend_add()\n                }\n\n            }\n                break;\n\n            case 31: {\n                znak = 1;\n                chislo = 0;\n                for (var i = 0; i < Kolcifr; i++){\n                    cifr[i] = randomInteger(10);\n                    chislo += cifr[i]*power10(i);\n                }\n                i = Kolcifr;\n                cifr[i] = 2 + randomInteger(8);\n                chislo += cifr[i]*power10(i);\n                ;\n                primer.push(chislo)\n                while (stop_cycle == false){\n                    calculate_friend_sub()\n                }\n\n            }\n                break;\n\n            case 32: {\n                znak = 0;\n                chislo = 0;\n                for (var i = 0; i < Kolcifr-1; i++){\n                    cifr[i] = randomInteger(10);\n                    chislo += cifr[i]*power10(i);\n                }\n                i = Kolcifr - 1;\n                cifr[i] = 2 + randomInteger(8);\n                chislo += cifr[i]*power10(i);\n                ;\n                primer.push(chislo)\n                while (stop_cycle == false){\n                    calculate_friend_add_sub()\n                }\n\n            }\n                break;\n\n            case 40: {\n                znak = 0;\n                chislo = 0;\n                for (var i = 0; i < Kolcifr-1; i++){\n                    cifr[i] = randomInteger(10);\n                    chislo += cifr[i]*power10(i);\n                }\n                i = Kolcifr - 1;\n                cifr[i] = 2 + randomInteger(8);\n                chislo += cifr[i]*power10(i);\n                ;\n                primer.push(chislo)\n                while (stop_cycle == false){\n                    calculate_combo_add()\n                }\n\n            }\n                break;\n\n            case 41: {\n                znak = 1;\n                chislo = 0;\n                for (var i = 0; i < Kolcifr; i++){\n                    cifr[i] = randomInteger(10);\n                    chislo += cifr[i]*power10(i);\n                }\n                i = Kolcifr;\n                cifr[i] = 2 + randomInteger(8);\n                chislo += cifr[i]*power10(i);\n                ;\n                primer.push(chislo)\n                while (stop_cycle == false){\n                    calculate_combo_sub()\n                }\n\n            }\n                break;\n\n            case 42: {\n                znak = 0;\n                chislo = 0;\n                for (var i = 0; i < Kolcifr-1; i++){\n                    cifr[i] = randomInteger(10);\n                    chislo += cifr[i]*power10(i);\n                }\n                i = Kolcifr - 1;\n                cifr[i] = 2 + randomInteger(8);\n                chislo += cifr[i]*power10(i);\n                ;\n                primer.push(chislo)\n                while (stop_cycle == false){\n                    calculate_combo_add_sub()\n                }\n\n            }\n                break;\n            case 50: {\n                znak = 0;\n                chislo = 0;\n                for (var i = 0; i < Kolcifr-1; i++){\n                    cifr[i] = randomInteger(10);\n                    chislo += cifr[i]*power10(i);\n                }\n                i = Kolcifr - 1;\n                cifr[i] = 2 + randomInteger(8);\n                chislo += cifr[i]*power10(i);\n                ;\n                primer.push(chislo)\n                while (stop_cycle == false){\n                    calculate_random_add()\n                }\n\n            }\n                break;\n\n            case 51: {\n                znak = 1;\n                chislo = 0;\n                for (var i = 0; i < Kolcifr; i++){\n                    cifr[i] = randomInteger(10);\n                    chislo += cifr[i]*power10(i);\n                }\n                i = Kolcifr;\n                cifr[i] = 2 + randomInteger(8);\n                chislo += cifr[i]*power10(i);\n                ;\n                primer.push(chislo)\n                while (stop_cycle == false){\n                    calculate_random_sub()\n                }\n\n            }\n                break;\n\n            case 52: {\n                znak = 0;\n                chislo = 0;\n                for (var i = 0; i < Kolcifr-1; i++){\n                    cifr[i] = randomInteger(10);\n                    chislo += cifr[i]*power10(i);\n                }\n                i = Kolcifr - 1;\n                cifr[i] = 2 + randomInteger(8);\n                chislo += cifr[i]*power10(i);\n                ;\n                primer.push(chislo)\n                while (stop_cycle == false){\n                    calculate_random_add_sub()\n                }\n\n            }\n                break;\n        }\n\n        return {\n            seq: primer,\n            // answer: cifr // something wrong with cifr for level 3+\n            answer: splitAndReverse(primer.reduce(function (a, b) { return a + b; }))\n        };\n    }\n\n    function generateFractional(cfg) {\n        let result = {\n            seq: [],\n            newAnswer: 0\n        };\n        let {\n            digitsCountAfterPoint,\n            digitsCountBeforePoint,\n            termsCount,\n            operations,\n            treatZero\n        } = cfg;\n        operations = [\n            \"plus\",\n            \"plusMinus\"\n        ].indexOf(operations) > -1 ? operations : \"plus\";\n        if (operations === \"plus\") {\n            for (let i = 0, l = termsCount; i < l; i++) {\n                let before = utils.random(1, 9) + \"\";\n                let after = utils.random(0, 9) + \"\";\n                for (let i = 1, l = digitsCountBeforePoint; i < l; i++) {\n                    before += utils.random(0, 9);\n                }\n                for (let i = 1, l = digitsCountAfterPoint; i < l; i++) {\n                    after += utils.random(0, 9);\n                }\n                result.seq.push(before + \".\" + after);\n                result.newAnswer += (before + \".\" + after)*1;\n                result.newAnswer = result.newAnswer.toFixed(digitsCountAfterPoint)*1;\n            }\n        } else {\n            if (treatZero === \"around\") {\n                generateAroundZero();\n            } else if (treatZero === \"more\") {\n                generate(1);\n            } else if (treatZero === \"less\") {\n                generate(-1);\n            } else {\n                generateAroundZero();\n            }\n        }\n        return result;\n\n        function generateAroundZero() {\n            let a = 1;\n            for (let i = 0, l = termsCount; i < l; i++) {\n                let before = utils.random(1, result.newAnswer === 0 ? 6 : 9) + \"\";\n                let after = utils.random(0, 9) + \"\";\n                let prenum;\n                for (let i = 1, l = digitsCountBeforePoint; i < l; i++) {\n                    before += utils.random(0, 9);\n                }\n                for (let i = 1, l = digitsCountAfterPoint; i < l; i++) {\n                    after += utils.random(0, 9);\n                }\n                prenum = (before + \".\" + after)*1;\n                while (!prenum || (a === 1 ? result.newAnswer + prenum < 0 : result.newAnswer - prenum > 0)) {\n                    let before2 = utils.random(before[0]*1, 9) + \"\";\n                    let after2 = utils.random(0, 9) + \"\";\n                    for (let i = 1, l = digitsCountBeforePoint; i < l; i++) {\n                        before2 += utils.random(0, 9);\n                    }\n                    for (let i = 1, l = digitsCountAfterPoint; i < l; i++) {\n                        after2 += utils.random(0, 9);\n                    }\n                    prenum = (before2 + \".\" + after2)*1;\n                }\n                prenum *= a;\n                result.seq.push(prenum.toFixed(digitsCountAfterPoint).replace(\".\", \".\"));\n                result.newAnswer += prenum;\n                result.newAnswer = result.newAnswer.toFixed(digitsCountAfterPoint)*1;\n                a *= -1;\n            }\n        }\n\n        function generate(b) {\n            b = b*1 > 0 ? 1 : -1;\n            console.log(b);\n            let reachedMinus = false;\n            let limit = Math.pow(10, digitsCountBeforePoint)*2.5;\n            for (let i = 0, l = termsCount; i < l; i++) {\n                let before = utils.random(1, 9) + \"\";\n                let after = utils.random(0, 9) + \"\";\n                let prenum;\n                for (let i = 1, l = digitsCountBeforePoint; i < l; i++) {\n                    before += utils.random(0, 9);\n                }\n                for (let i = 1, l = digitsCountAfterPoint; i < l; i++) {\n                    after += utils.random(0, 9);\n                }\n                prenum = (before + \".\" + after)*1;\n                let a = result.newAnswer !== 0 && utils.random(0, 10) > 3 || i === 1 ? -1 : 1;\n                prenum *= a;\n                let ii = 0;\n                reachedMinus = reachedMinus || result.newAnswer + prenum < 0;\n                while ( (!prenum || (\n                    b === -1 ?\n                        reachedMinus ?\n                            result.newAnswer + prenum > 0 :\n                            false :\n                        result.newAnswer + prenum < 0\n                )) && !!result.newAnswer) {\n\n                    let before2 = utils.random(1, 9) + \"\";\n                    let after2 = utils.random(0, 9) + \"\";\n                    for (let i = 1, l = digitsCountBeforePoint; i < l; i++) {\n                        before2 += utils.random(0, 9);\n                    }\n                    for (let i = 1, l = digitsCountAfterPoint; i < l; i++) {\n                        after2 += utils.random(0, 9);\n                    }\n                    prenum = (before2 + \".\" + after2)*1;\n                    prenum *= a;\n                    if (ii > 3) {\n                        prenum *= -1;\n                        break;\n                    }\n                    ii++;\n                }\n                if (Math.abs(result.newAnswer + prenum) > limit)\n                    prenum *= -1;\n                result.seq.push(prenum.toFixed(digitsCountAfterPoint).replace(\".\", \".\"));\n                result.newAnswer += prenum;\n                result.newAnswer = result.newAnswer.toFixed(digitsCountAfterPoint)*1;\n            }\n        }\n    }\n\n    /*\n     * @private\n     * Превращает число в перевернутый массив (нужно для ответа генератора)\n     * {Number} n число\n     * return {Array of Number}\n     */\n    function splitAndReverse(n) {\n        return Array.from(n.toString())\n                    .map(function(digit) {\n                        return parseInt(digit)\n                    })\n                    .reverse();\n    }\n\n    /*\n     * @private\n     * Генерирует рандомное число\n     * {Number} n число\n     * return {Number}\n     */\n    function randomInteger (n, m) {\n        let result;\n        if (m) {\n            result = utils.random(n, m);\n        } else {\n            result = Math.floor(Math.random()*(n-0.0001));\n        }\n        // console.log(n);\n        // console.log(result);\n        // if (m) {\n        //     return utils.random(n, m);\n        // } else {\n        //     return Math.floor(Math.random()*(n-0.0001));\n        // }\n        return result;\n    }\n\n    /*\n     * @private\n     * {Number} n число\n     * return {Number}\n     */\n    function power10(n){\n        return Math.pow(10, n);\n    }\n\n    /*\n     * @private\n     */\n    function duplicat(b, c) {\n        var d = [],\n            e = {},\n            f = {};\n\n        for (var a = 0; a < b.length; a++) {\n            e[b[a]] = !0;\n        }\n\n        for (var a = 0; a < c.length; a++) {\n            f[c[a]] = !0;\n        }\n\n        for (var g in e) {\n            f[g] && d.push(g);\n        }\n\n        return d;\n    };\n\n    /*\n     * @private\n     */\n    function ravno(number) {\n        stop_cycle = true;\n    }\n\n    /*\n     * @private\n     */\n    function chislo_plus_f(){\n        chislo += chislo_plus_all;\n        primer.push(chislo_plus_all)\n        chislo = parseInt(chislo);\n        chislo_plus_all = parseInt(chislo_plus_all);\n    }\n\n    /*\n     * @private\n     */\n    function chislo_minus_f(){\n        chislo -= chislo_plus_all;\n        let ch = -chislo_plus_all\n        primer.push(ch)\n        chislo = parseInt(chislo);\n        chislo_plus_all = parseInt(chislo_plus_all);\n    }\n\n    /*\n     * @private\n     */\n    function include(a, arr) {\n        if (arr.indexOf(a) === -1) {\n            arr.push(a);\n        }\n\n        return arr;\n    };\n\n    /*\n     * @private\n     */\n    function exclude(a, arr) {\n        var index = arr.indexOf(a);\n\n        if (index !== -1) {\n            arr.splice(index, 1);\n        }\n\n        return arr;\n    }\n\n    /*\n     * @private\n     */\n    function yes_no(a, arr){\n        var c = false, i = 0;\n        while (c == false && i<arr.length) {\n            if (a == arr[i++]) c = true;\n        }\n        return c;\n    }\n\n    /*\n     * @private\n     * {Number} n Level\n     * {Number} m Operation\n     * return {Number} possible numbers\n     */\n    function possible_checked (n,m){\n        var arrchecked = Checked_cifr.slice();\n        var initial =\n            [[[0,1,2,3,4,5,6,7,8,9],[0,1,2,3,5,6,7,8],[0,1,2,5,6,7],[0,1,5,6],[0,5],[0,1,2,3,4],[0,1,2,3],[0,1,2],[0,1],[0]],\n                [[0],[0,1],[0,1,2],[0,1,2,3],[0,1,2,3,4],[0,5],[0,1,5,6],[0,1,2,5,6,7],[0,1,2,3,5,6,7,8],[0,1,2,3,4,5,6,7,8,9]]];\n        var arr_possible = [[[],[],[],[],[],[],[],[],[],[]],\n            [[],[],[],[],[],[],[],[],[],[]]];\n        if (n == 2){\n            for (var j = 0; j <= 1; j++){\n                for (var k = 0; k <= 9; k++){\n                    arr_possible[j][k] = initial[j][k].slice();\n                }\n            }\n        }\n        switch (parseInt(n)) {\n            case 1:\n                for (var j = 0; j <= 1; j++){\n                    for (var k = 0; k <= 9; k++){\n                        arr_possible[j][k] = duplicat(arrchecked, POSSIBLE_CONST_PROSTO[m][j][k]);\n                        if (arr_possible[j][k].length == 0){\n                            arr_possible[j][k] = initial[j][k].slice();\n                        }\n                    }\n                }\n                break;\n            case 2:\n                for (var j = 0; j <= 1; j++){\n                    for (var k = 0; k <= 9; k++){\n                        arr_possible[j][k] = POSSIBLE_CONST_BRAT[m][j][k].slice();\n                    }\n                }\n                switch (parseInt(m)){\n                    case 0:\n                        for (var k = 1; k <= 4; k++){\n                            arr_possible[0][k] = duplicat(arrchecked, POSSIBLE_CONST_BRAT[m][0][k]);\n                            if (arr_possible[0][k].length == 0 || arr_possible[0][k] == 0){\n                                arr_possible[0][k] = initial[0][k].slice();\n                            }\n                        }\n                        break;\n                    case 1:\n                        for (var k = 5; k <= 8; k++){\n                            arr_possible[1][k] = duplicat(arrchecked, POSSIBLE_CONST_BRAT[m][1][k]);\n                            if (arr_possible[1][k].length == 0 || arr_possible[1][k] == 0){\n                                arr_possible[1][k] = initial[1][k].slice();\n                            }\n                        }\n                        break;\n                    case 2:\n                        for (var k = 1; k <= 4; k++){\n                            arr_possible[0][k] = duplicat(arrchecked, POSSIBLE_CONST_BRAT[m][0][k]);\n                            if (arr_possible[0][k].length == 0 || arr_possible[0][k] == 0){\n                              arr_possible[0][k] = initial[0][k].slice();\n                            }\n                        }\n                        for (var k = 5; k <= 8; k++){\n                            arr_possible[1][k] = duplicat(arrchecked, POSSIBLE_CONST_BRAT[m][1][k]);\n                            if (arr_possible[1][k].length == 0 || arr_possible[1][k] == 0){\n                              arr_possible[1][k] = initial[1][k].slice();\n                            }\n                        }\n                      break;\n                }\n                break;\n            case 3:\n                var r = 1, p = 1;\n                switch (parseInt(m)) {\n                    case 0: r = 0; p = 0; break;\n                    case 1: r = 1; p = 1; break;\n                    case 2: r = 0; p = 1; break;\n                }\n                for (var j = r; j <= p; j++){\n                    for (var k = 0; k <= 9; k++){\n                        arr_possible[j][k] = duplicat(arrchecked, POSSIBLE_CONST_DRUG[m][j][k]);\n                        if (arr_possible[j][k].length == 0){\n                            arr_possible[j][k] = initial[j][k].slice();\n                        }\n                    }\n                }\n                break;\n            case 4:\n                // var r = 1, p = 1;\n                switch (parseInt(m)) {\n                    case 0:\n                        for (var k = 0; k <= 4; k++){\n                            arr_possible[0][k] = POSSIBLE_CONST_COMBO[0][0][k].slice();\n                        }\n                        for (var k = 5; k <= 9; k++){\n                            arr_possible[0][k] = duplicat(arrchecked, POSSIBLE_CONST_COMBO[0][0][k]);\n                            if (arr_possible[0][k].length == 0){\n                                arr_possible[0][k] =  duplicat([6,7,8,9], POSSIBLE_CONST_DRUG[2][0][k]);\n                            }\n                            if (arr_possible[0][k].length == 0){\n                                arr_possible[0][k] =  initial[0][k].slice();\n                            }\n                        }\n                        break;\n                    case 1:\n                        for (var k = 6; k <= 9; k++){\n                            arr_possible[1][k] = POSSIBLE_CONST_COMBO[1][1][k].slice();\n                        }\n                        for (var k = 0; k <= 5; k++){\n                            arr_possible[1][k] = duplicat(arrchecked, POSSIBLE_CONST_COMBO[1][1][k]);\n                            if (arr_possible[1][k].length == 0 /*|| arr_possible[j][k] == 0*/){\n                                arr_possible[1][k] =  duplicat([6,7,8,9],POSSIBLE_CONST_DRUG[2][1][k]);\n                            }\n                            if (arr_possible[1][k].length == 0){\n                                arr_possible[1][k] =  initial[1][k].slice();\n                            }\n                        }\n                        break;\n                    case 2:\n                        for (var k = 0; k <= 4; k++){\n                            arr_possible[0][k] = POSSIBLE_CONST_COMBO[0][0][k].slice();\n                        }\n                        for (var k = 5; k <= 9; k++){\n                            arr_possible[0][k] = duplicat(arrchecked, POSSIBLE_CONST_COMBO[0][0][k]);\n                            if (arr_possible[0][k].length == 0){\n                                arr_possible[0][k] =  duplicat([6,7,8,9], POSSIBLE_CONST_DRUG[2][0][k]);\n                            }\n                            if (arr_possible[0][k].length == 0){\n                                arr_possible[0][k] =  initial[0][k].slice();\n                            }\n                        }\n                        for (var k = 6; k <= 9; k++){\n                            arr_possible[1][k] = POSSIBLE_CONST_COMBO[1][1][k].slice();\n                        }\n                        for (var k = 0; k <= 5; k++){\n                            arr_possible[1][k] = duplicat(arrchecked, POSSIBLE_CONST_COMBO[1][1][k]);\n                            if (arr_possible[1][k].length == 0 /*|| arr_possible[j][k] == 0*/){\n                                arr_possible[1][k] =  duplicat([6,7,8,9],POSSIBLE_CONST_DRUG[2][1][k]);\n                            }\n                            if (arr_possible[1][k].length == 0){\n                                arr_possible[1][k] =  initial[1][k].slice();\n                            }\n                        }\n\n\n                        break;\n                }\n                break;\n\n            case 5:\n                for (var i = 0; i <= 9; i++) {\n                    for (var j = 0; j<=1; j++){\n                        arr_possible[j][i] = [1,2,3,4,5,6,7,8,9];\n                    }\n                }\n                break;\n        }\n        return arr_possible;\n    }\n\n    /*\n     * @private\n     */\n    function calculate_simple_add() {\n        var max_chislo = 0;\n        if (yes_no(5,Checked_cifr)) {\n            for (var i = 0; i < Kolcifr; i++){\n                max_chislo += 9*power10(i);\n            }\n        }\n        else{\n            for (var i = 0; i < Kolcifr; i++){\n                max_chislo += 4*power10(i);\n            }\n        }\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n\n        if (chislo == max_chislo || schotchik == Kolslog) {\n            ravno();\n        }\n        else {\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = [];\n                for (var i = 0; i < Kolcifr; i++) {\n                    var p = possible_checked_var[i][znak][cifr[i]].slice();\n                    if (p.length == 0 || p[0] == 0) {\n                        possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                        p = possible_checked_var[i][znak][cifr[i]].slice();\n                    }\n                    chislo_plus[i] = p[randomInteger(p.length)];\n                    chislo_plus_all += chislo_plus[i]*power10(i);\n                }\n            } while (chislo_plus_all == 0);\n\n            for (var i = 0; i < Kolcifr; i++) {\n                cifr[i] += parseInt(chislo_plus[i]);\n                for (var k = 0; k <= 9; k++){\n                    exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                }\n            }\n            chislo_plus_f();\n        }\n    }\n\n    /*\n * @private\n */\n    function calculate_simple_sub() {\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n\n        if (chislo == 0 || schotchik == Kolslog) {\n            ravno();\n        }\n        else {\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = [];\n                for (var i = 0; i < Kolcifr; i++) {\n                    var p = possible_checked_var[i][1][cifr[i]];\n                    if (p.length == 0 || p[0] == 0) {\n                        possible_checked_var[i][1][cifr[i]] = POSSIBLE_CHECKED_CONST[1][cifr[i]].slice();\n                        p = possible_checked_var[i][1][cifr[i]];\n                    }\n                    chislo_plus[i] = p[randomInteger(p.length)];\n                    chislo_plus_all += chislo_plus[i]*power10(i);\n                }\n            } while (chislo_plus_all == 0);\n\n            for (var i = 0; i < Kolcifr; i++) {\n                cifr[i] -= parseInt(chislo_plus[i]);\n                for (var k = 0; k <= 9; k++){\n                    exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                }\n            }\n            chislo_minus_f();\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_simple_add_sub() {\n        chislo = parseInt(chislo);\n        var max_chislo_4 = 0, l = Checked_cifr.length-1;\n        if (l == 4){\n            for (var i = 0; i < Kolcifr; i++){\n                max_chislo_4 += 4*power10(i);\n            }\n        }\n        var max_chislo = power10(Kolcifr) - 1;\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n        if (schotchik == Kolslog) {\n            ravno();\n        }\n        else {\n            var vspom_chislo = 0;\n            for (var i = 0; i < Kolcifr; i++){\n                vspom_chislo += 5*power10(i);\n            }\n\n            switch (chislo){\n                case 0: znak = 0; break;\n                case vspom_chislo: znak = 0; break;\n                case max_chislo: znak = 1; break;\n                case max_chislo_4:\n                    if ( l == 4 ) znak = 1; else znak = randomInteger(2); break;\n                default: znak = randomInteger(2); break;\n            }\n            var razmer = parseInt((chislo.toString()).length);\n            var per = 0;\n            if (half == true && razmer > 1 && Kolcifr > 1 && schotchik % 2 == 1){\n                per = 1;\n                var uio = chislo%power10(Kolcifr-1);\n                switch (chislo%power10(Kolcifr-1)){\n                    case 0: znak = 0; break;\n                    case parseInt(vspom_chislo/10): znak = 0; break;\n                    case parseInt(max_chislo/10): znak = 1; break;\n                    case parseInt(max_chislo_4/10):\n                        if ( l == 4 ) znak = 1; else znak = randomInteger(2); break;\n                    default: znak = randomInteger(2); break;\n                }\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = [];\n\n                for (var i = 0; i < Kolcifr - per; i++) {\n                    var p = possible_checked_var[i][znak][cifr[i]].slice();\n                    if (p.length == 0 || p[0] == 0) {\n                        possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                        p = possible_checked_var[i][znak][cifr[i]].slice();\n                    }\n                    chislo_plus[i] = p[randomInteger(p.length)];\n                    chislo_plus_all += chislo_plus[i]*power10(i);\n                }\n            } while (chislo_plus_all == 0);\n            for (var i = 0; i < Kolcifr-per; i++) {\n                if (znak == 0)  cifr[i] += parseInt(chislo_plus[i]);\n                else cifr[i] -= parseInt(chislo_plus[i]);\n                for (var k = 0; k <= 9; k++){\n                    exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                }\n            }\n\n            if (znak == 0) {\n                chislo_plus_f();\n            }\n            else {\n                chislo_minus_f();\n            }\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_brother_add() {\n        var max_chislo = power10(Kolcifr)-1;\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n\n        if (schotchik == Kolslog) {\n            ravno();\n        }\n        else {\n            var vspom_chislo1 = 0, vspom_chislo2 = 0;\n            for (var i = 0; i < Kolcifr; i++){\n                vspom_chislo1 += 5*power10(i);\n                vspom_chislo2 += 7*power10(i);\n            }\n            if (chislo >= vspom_chislo2) znak = 1;\n            else if (chislo < vspom_chislo1) znak = 0;\n            else znak = randomInteger(2);\n            var razmer = parseInt((chislo.toString()).length);\n            var per = 0;\n            if (half == true && razmer > 1 && Kolcifr > 1 && schotchik % 2 == 1){\n                per = 1;\n                switch (chislo%power10(Kolcifr-1)){\n                    case 0: znak = 0; break;\n                    case parseInt(max_chislo/10): znak = 1; break;\n                    default: znak = randomInteger(2); break;\n                }\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = [];\n                for (var i = 0; i < Kolcifr-per; i++) {\n                    var p = possible_checked_var[i][znak][cifr[i]].slice();\n                    if (p.length == 0 || p[0] == 0) {\n                        possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                        p = possible_checked_var[i][znak][cifr[i]].slice();\n                    }\n                    chislo_plus[i] = p[randomInteger(p.length)];\n                    chislo_plus_all += chislo_plus[i]*power10(i);\n                }\n            } while (chislo_plus_all == 0);\n\n            for (var i = 0; i < Kolcifr-per; i++) {\n                if (znak == 0)  cifr[i] += parseInt(chislo_plus[i]);\n                else cifr[i] -= parseInt(chislo_plus[i]);\n                for (var k = 0; k <= 9; k++){\n                    exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                }\n            }\n\n            if (znak == 0) {\n                chislo_plus_f();\n            }\n            else {\n                chislo_minus_f();\n            }\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_brother_sub() {\n        var max_chislo = power10(Kolcifr)-1;\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n\n        if (schotchik == Kolslog) {\n            ravno();\n        }\n        else {\n            var vspom_chislo1 = 0;\n            for (var i = 0; i < Kolcifr; i++){\n                vspom_chislo1 += 5*power10(i);\n            }\n            if (chislo < vspom_chislo1) znak = 0;\n            else znak = 1;\n            var razmer = parseInt((chislo.toString()).length);\n            var per = 0;\n            if (half == true && razmer > 1 && Kolcifr > 1 &&  schotchik % 2 == 1){\n                per = 1;\n                switch (chislo%power10(Kolcifr-1)){\n                    case 0: znak = 0; break;\n                    case parseInt(max_chislo/10): znak = 1; break;\n                    default: znak = randomInteger(2); break;\n                }\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = [];\n                for (var i = 0; i < Kolcifr-per; i++) {\n                    var p = possible_checked_var[i][znak][cifr[i]].slice();\n                    if (p.length == 0 || p[0] == 0) {\n                        possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                        p = possible_checked_var[i][znak][cifr[i]].slice();\n                    }\n                    chislo_plus[i] = p[randomInteger(p.length)];\n                    chislo_plus_all += chislo_plus[i]*power10(i);\n                }\n            } while (chislo_plus_all == 0);\n\n            for (var i = 0; i < Kolcifr-per; i++) {\n                if (cifr[i]>=5 && cifr[i] <= 8) {\n                    for (var k = 5; k <= 9; k++){\n                        exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                        exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                    }\n                }\n                else {\n                    for (var k = 0; k <= 4; k++){\n                        exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                        exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                    }\n                }\n                if (znak == 0)  cifr[i] += parseInt(chislo_plus[i]);\n                else cifr[i] -= parseInt(chislo_plus[i]);\n            }\n\n            if (znak == 0) chislo_plus_f();\n            else chislo_minus_f();\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_brother_add_sub() {\n        var max_chislo = power10(Kolcifr)-1;\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n\n        if (schotchik == Kolslog) {\n            ravno();\n        }\n        else {\n            var vspom_chislo1 = 0, vspom_chislo2 = 0;\n            for (var i = 0; i < Kolcifr; i++){\n                vspom_chislo1 += 5*power10(i);\n                vspom_chislo2 += 7*power10(i);\n            }\n            if (chislo >= vspom_chislo2) znak = 1;\n            else if (chislo < vspom_chislo1) znak = 0;\n            else znak = randomInteger(2);\n            var razmer = parseInt((chislo.toString()).length);\n            var per = 0;\n            if (half == true && razmer > 1 && Kolcifr > 1 && schotchik % 2 == 1){\n                per = 1;\n                switch (chislo%power10(Kolcifr-1)){\n                    case 0: znak = 0; break;\n                    case parseInt(max_chislo/10): znak = 1; break;\n                    default: znak = randomInteger(2); break;\n                }\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = [];\n                for (var i = 0; i < Kolcifr-per; i++) {\n                    var p = possible_checked_var[i][znak][cifr[i]].slice();\n                    if (p.length == 0 || p[0] == 0) {\n                        possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                        p = possible_checked_var[i][znak][cifr[i]].slice();\n                    }\n                    chislo_plus[i] = p[randomInteger(p.length)];\n                    chislo_plus_all += chislo_plus[i]*power10(i);\n                }\n            } while (chislo_plus_all == 0);\n\n            for (var i = 0; i < Kolcifr-per; i++) {\n                if (znak == 0)  cifr[i] += parseInt(chislo_plus[i]);\n                else cifr[i] -= parseInt(chislo_plus[i]);\n                for (var k = 0; k <= 9; k++){\n                    exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                }\n            }\n\n            if (znak == 0) chislo_plus_f();\n            else chislo_minus_f();\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_friend_add() {\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n        if (schotchik == Kolslog) {\n            ravno();\n        }\n        else {\n            var razmer = parseInt((chislo.toString()).length);\n            var per = 0;\n            if (half == true && razmer > 1 && Kolcifr > 1 && schotchik % 2 == 1){\n                per = 1;\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = [];\n                for (var i = 0; i < Kolcifr-per; i++) {\n                    var p = possible_checked_var[i][znak][cifr[i]].slice();\n                    if (p.length == 0 || p[0] == 0) {\n                        possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                        p = possible_checked_var[i][znak][cifr[i]].slice();\n                    }\n                    chislo_plus[i] = p[randomInteger(p.length)];\n                    chislo_plus_all += chislo_plus[i]*power10(i);\n                }\n            } while (chislo_plus_all == 0);\n\n            for (var i = 0; i < Kolcifr-per; i++) {\n                for (var k = 0; k <= 9; k++){\n\n                    exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n\n                }\n            }\n            chislo_plus_f();\n            cifr.length = 0;\n            for (var i = 0; i < Kolcifr; i++) {\n                cifr[i] = parseInt((chislo % power10(i + 1))/power10(i));\n            }\n\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_friend_sub() {\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n\n\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n        var razmer = 0;\n        razmer = parseInt((chislo.toString()).length);\n\n        if (razmer == 1 || schotchik == Kolslog) {\n            ravno();\n        }\n        else {\n            var per = 0;\n            if (half == true && razmer > 2  && Kolcifr > 1 && schotchik % 2 == 1){\n                per = 1;\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = undefined;\n                chislo_plus = [];\n                for (var i = 0; i < razmer - 1 - per; i++) {\n                    var p = possible_checked_var[i][1][cifr[i]];\n                    if (p.length == 0 || p[0] == 0) {\n                        possible_checked_var[i][1][cifr[i]] = POSSIBLE_CHECKED_CONST[1][cifr[i]].slice();\n                        p = possible_checked_var[i][1][cifr[i]];\n                    }\n                    chislo_plus[i] = p[randomInteger(p.length)];\n                    chislo_plus_all += chislo_plus[i]*power10(i);\n                }\n            } while (chislo_plus_all == 0);\n\n            for (var i = 0; i < razmer - 1 - per; i++) {\n                for (var k = 0; k <= 9; k++){\n\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n\n                }\n            }\n\n            chislo_minus_f();\n            razmer = parseInt((chislo.toString()).length);\n            cifr.length = 0;\n            for (var i = 0; i < razmer; i++) {\n                cifr[i] = parseInt((chislo % power10(i + 1))/power10(i));\n            }\n            cifr.length = razmer - 1;\n\n\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_friend_add_sub() {\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n\n        var razmer = 0;\n        razmer = parseInt((chislo.toString()).length);\n        if (schotchik == Kolslog) {\n            ravno();\n        }\n        else {\n            if (razmer <= Kolcifr) znak = 0;\n            else znak =  randomInteger(2);\n            var per = 0;\n            if (half == true && razmer > 1 && Kolcifr > 1 && schotchik % 2 == 1){\n                per = 1;\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = [];\n                if (znak == 0){\n                    for (var i = 0; i < Kolcifr - per; i++) {\n                        var p = possible_checked_var[i][znak][cifr[i]].slice();\n                        if (p.length == 0 || p[0] == 0) {\n                            possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                            p = possible_checked_var[i][znak][cifr[i]].slice();\n                        }\n                        chislo_plus[i] = p[randomInteger(p.length)];\n                        chislo_plus_all += chislo_plus[i]*power10(i);\n                    }\n                }\n                else{\n                    if (razmer > Kolcifr){\n                        for (var i = 0; i < Kolcifr - per; i++) {\n                            var p = possible_checked_var[i][znak][cifr[i]].slice();\n                            if (p.length == 0 || p[0] == 0) {\n                                possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                                p = possible_checked_var[i][znak][cifr[i]].slice();\n                            }\n                            chislo_plus[i] = p[randomInteger(p.length)];\n                            chislo_plus_all += chislo_plus[i]*power10(i);\n                        }\n                    }\n                    else{\n                        for (var i = 0; i < razmer - 1; i++) {\n                            var p = possible_checked_var[i][znak][cifr[i]].slice();\n                            if (p.length == 0 || p[0] == 0) {\n                                possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                                p = possible_checked_var[i][znak][cifr[i]].slice();\n                            }\n                            chislo_plus[i] = p[randomInteger(p.length)];\n                            chislo_plus_all += chislo_plus[i]*power10(i);\n                        }\n                    }\n                }\n            } while (chislo_plus_all == 0);\n\n            for (var i = 0; i < Kolcifr - per; i++) {\n\n                for (var k = 0; k <= 9; k++){\n                    exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                }\n\n            }\n            if (znak == 0) {\n                chislo_plus_f();\n                cifr.length = 0;\n                for (var i = 0; i < Kolcifr; i++) {\n                    cifr[i] = parseInt((chislo % power10(i + 1))/power10(i));\n                }\n            }\n            else {\n                chislo_minus_f();\n                cifr.length = 0;\n                for (var i = 0; i < Kolcifr; i++) {\n                    cifr[i] = parseInt((chislo % power10(i + 1))/power10(i));\n                }\n            }\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_combo_add() {\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n\n        if (schotchik == Kolslog) {\n            ravno();\n        }\n        else {\n            var razmer = parseInt((chislo.toString()).length);\n            var per = 0;\n            if (half == true && razmer > 1 && Kolcifr > 1 && schotchik % 2 == 1){\n                per = 1;\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = [];\n                for (var i = 0; i < Kolcifr-per; i++) {\n                    var p = possible_checked_var[i][znak][cifr[i]].slice();\n                    if (p.length == 0 || p[0] == 0) {\n                        possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                        p = possible_checked_var[i][znak][cifr[i]].slice();\n                    }\n                    chislo_plus[i] = p[randomInteger(p.length)];\n                    chislo_plus_all += chislo_plus[i]*power10(i);\n                }\n            } while (chislo_plus_all == 0);\n            for (var i = 0; i < Kolcifr-per; i++) {\n                for (var k = 0; k <= 9; k++){\n                    exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                }\n            }\n            chislo_plus_f();\n            cifr.length = 0;\n            for (var i = 0; i < Kolcifr; i++) {\n                cifr[i] = parseInt((chislo % power10(i + 1))/power10(i));\n            }\n\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_combo_sub() {\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation).slice();\n\n\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n        var razmer = 0;\n        razmer = parseInt((chislo.toString()).length);\n\n        if (razmer == 1 || schotchik == Kolslog) {\n            ravno();\n        }\n        else {\n            var per = 0;\n            if (half == true && razmer > 2 && Kolcifr > 1 && schotchik % 2 == 1){\n                per = 1;\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = undefined;\n                chislo_plus = [];\n\n\n                for (var i = 0; i < razmer - 1 - per; i++) {\n                    var p = possible_checked_var[i][1][cifr[i]];\n                    if (p.length == 0 || p[0] == 0) {\n                        possible_checked_var[i][1][cifr[i]] = POSSIBLE_CHECKED_CONST[1][cifr[i]].slice();\n                        p = possible_checked_var[i][1][cifr[i]];\n                    }\n                    chislo_plus[i] = p[randomInteger(p.length)];\n                    chislo_plus_all += chislo_plus[i]*power10(i);\n                }\n            } while (chislo_plus_all == 0);\n\n            for (var i = 0; i < razmer - 1 - per; i++) {\n                for (var k = 0; k <= 4; k++){\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                }\n            }\n\n            chislo_minus_f();\n            razmer = parseInt((chislo.toString()).length);\n            cifr.length = 0;\n            for (var i = 0; i < razmer; i++) {\n                cifr[i] = parseInt((chislo % power10(i + 1))/power10(i));\n            }\n            cifr.length = razmer - 1;\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_combo_add_sub() {\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n\n        var razmer = 0;\n        razmer = parseInt((chislo.toString()).length);\n        if (schotchik == Kolslog) {\n            ravno();\n        }\n        else {\n            if (razmer <= Kolcifr) znak = 0;\n            else znak =  randomInteger(2);\n            var per = 0;\n            if (half == true && razmer > 1 && Kolcifr > 1 && schotchik % 2 == 1){\n                per = 1;\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = [];\n                if (znak == 0){\n                    for (var i = 0; i < Kolcifr - per; i++) {\n                        var p = possible_checked_var[i][znak][cifr[i]].slice();\n                        if (p.length == 0 || p[0] == 0) {\n                            possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                            p = possible_checked_var[i][znak][cifr[i]].slice();\n                        }\n                        chislo_plus[i] = p[randomInteger(p.length)];\n                        chislo_plus_all += chislo_plus[i]*power10(i);\n                    }\n                }\n                else{\n                    if (razmer > Kolcifr){\n                        for (var i = 0; i < Kolcifr - per; i++) {\n                            var p = possible_checked_var[i][znak][cifr[i]].slice();\n                            if (p.length == 0 || p[0] == 0) {\n                                possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                                p = possible_checked_var[i][znak][cifr[i]].slice();\n                            }\n                            chislo_plus[i] = p[randomInteger(p.length)];\n                            chislo_plus_all += chislo_plus[i]*power10(i);\n                        }\n                    }\n                    else{\n                        for (var i = 0; i < razmer - 1; i++) {\n                            var p = possible_checked_var[i][znak][cifr[i]].slice();\n                            if (p.length == 0 || p[0] == 0) {\n                                possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                                p = possible_checked_var[i][znak][cifr[i]].slice();\n                            }\n                            chislo_plus[i] = p[randomInteger(p.length)];\n                            chislo_plus_all += chislo_plus[i]*power10(i);\n                        }\n                    }\n                }\n            } while (chislo_plus_all == 0);\n\n            for (var i = 0; i < Kolcifr - per; i++) {\n                for (var k = 0; k <= 9; k++){\n                    exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                }\n            }\n            if (znak == 0) {\n                chislo_plus_f();\n                cifr.length = 0;\n                for (var i = 0; i < Kolcifr; i++) {\n                    cifr[i] = parseInt((chislo % power10(i + 1))/power10(i));\n                }\n            }\n            else {\n                chislo_minus_f();\n                cifr.length = 0;\n                for (var i = 0; i < Kolcifr; i++) {\n                    cifr[i] = parseInt((chislo % power10(i + 1))/power10(i));\n                }\n            }\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_random_add() {\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n\n        if (schotchik == Kolslog) {\n            ravno();\n        }\n        else {\n            var razmer = parseInt((chislo.toString()).length);\n            var per = 0;\n            if (half == true && razmer > 1 && Kolcifr > 1 && schotchik % 2 == 1){\n                per = 1;\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = [];\n                for (var i = 0; i < Kolcifr - per; i++) {\n                    var p = possible_checked_var[i][znak][cifr[i]].slice();\n                    if (p.length == 0 || p[0] == 0) {\n                        possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                        p = possible_checked_var[i][znak][cifr[i]].slice();\n                    }\n                    chislo_plus[i] = p[randomInteger(p.length)];\n                    chislo_plus_all += chislo_plus[i]*power10(i);\n                }\n            } while (chislo_plus_all == 0);\n\n            for (var i = 0; i < Kolcifr - per; i++) {\n                for (var k = 0; k <= 9; k++){\n                    exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                }\n            }\n            chislo_plus_f();\n            cifr.length = 0;\n            for (var i = 0; i < Kolcifr; i++) {\n                cifr[i] = parseInt((chislo % power10(i + 1))/power10(i));\n            }\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_random_sub() {\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n        var razmer = 0;\n        razmer = parseInt((chislo.toString()).length);\n\n        if (razmer == 1 || schotchik == Kolslog) {\n            ravno();\n        }\n        else {\n            var per = 0;\n            if (half == true && razmer > 2 && Kolcifr > 1 && schotchik % 2 == 1){\n                per = 1;\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = undefined;\n                chislo_plus = [];\n\n\n                for (var i = 0; i < razmer - 1 - per; i++) {\n                    var p = possible_checked_var[i][1][cifr[i]];\n                    if (p.length == 0 || p[0] == 0) {\n                        possible_checked_var[i][1][cifr[i]] = POSSIBLE_CHECKED_CONST[1][cifr[i]].slice();\n                        p = possible_checked_var[i][1][cifr[i]];\n                    }\n                    chislo_plus[i] = p[randomInteger(p.length)];\n                    chislo_plus_all += chislo_plus[i]*power10(i);\n                }\n            } while (chislo_plus_all == 0);\n\n            for (var i = 0; i < razmer - 1 - per; i++) {\n                for (var k = 0; k <= 9; k++){\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                }\n            }\n            chislo_minus_f();\n            razmer = parseInt((chislo.toString()).length);\n            cifr.length = 0;\n            for (var i = 0; i < razmer; i++) {\n                cifr[i] = parseInt((chislo % power10(i + 1))/power10(i));\n            }\n            cifr.length = razmer - 1;\n        }\n    }\n\n    /*\n     * @private\n     */\n    function calculate_random_add_sub() {\n        var POSSIBLE_CHECKED_CONST =  possible_checked(Level,Operation);\n        chislo_plus = []; chislo_plus_all = 0;\n        schotchik++;\n        var razmer = 0;\n        razmer = parseInt((chislo.toString()).length);\n        if (schotchik == Kolslog) {\n            ravno();\n        }\n        else {\n            if (razmer <= Kolcifr) znak = 0;\n            else znak =  randomInteger(2);\n            var per = 0;\n            if (half == true && razmer > 1 && Kolcifr > 1 && schotchik % 2 == 1){\n                per = 1;\n            }\n            else per = 0;\n            do {\n                chislo_plus_all = 0;\n                chislo_plus = [];\n                if (znak == 0){\n                    for (var i = 0; i < Kolcifr - per; i++) {\n                        var p = possible_checked_var[i][znak][cifr[i]].slice();\n                        if (p.length == 0 || p[0] == 0) {\n                            possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                            p = possible_checked_var[i][znak][cifr[i]].slice();\n                        }\n                        chislo_plus[i] = p[randomInteger(p.length)];\n                        chislo_plus_all += chislo_plus[i]*power10(i);\n                    }\n                }\n                else{\n                    if (razmer > Kolcifr){\n                        for (var i = 0; i < Kolcifr - per; i++) {\n                            var p = possible_checked_var[i][znak][cifr[i]].slice();\n                            if (p.length == 0 || p[0] == 0) {\n                                possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                                p = possible_checked_var[i][znak][cifr[i]].slice();\n                            }\n                            chislo_plus[i] = p[randomInteger(p.length)];\n                            chislo_plus_all += chislo_plus[i]*power10(i);\n                        }\n                    }\n                    else{\n                        for (var i = 0; i < razmer - 1; i++) {\n                            var p = possible_checked_var[i][znak][cifr[i]].slice();\n                            if (p.length == 0 || p[0] == 0) {\n                                possible_checked_var[i][znak][cifr[i]] = POSSIBLE_CHECKED_CONST[znak][cifr[i]].slice();\n                                p = possible_checked_var[i][znak][cifr[i]].slice();\n                            }\n                            chislo_plus[i] = p[randomInteger(p.length)];\n                            chislo_plus_all += chislo_plus[i]*power10(i);\n                        }\n                    }\n                }\n            } while (chislo_plus_all == 0);\n\n            for (var i = 0; i < Kolcifr - per; i++) {\n                for (var k = 0; k <= 9; k++){\n                    exclude(chislo_plus[i],possible_checked_var[i][0][k]);\n                    exclude(chislo_plus[i],possible_checked_var[i][1][k]);\n                }\n            }\n\n            if (znak == 0) {\n                chislo_plus_f();\n                cifr.length = 0;\n                for (var i = 0; i < Kolcifr; i++) {\n                    cifr[i] = parseInt((chislo % power10(i + 1))/power10(i));\n                }\n            }\n            else {\n                cifr.length = 0;\n                for (var i = 0; i < Kolcifr; i++) {\n                    cifr[i] = parseInt((chislo % power10(i + 1))/power10(i));\n                }\n                chislo_minus_f();\n            }\n        }\n    }\n\n    return {\n        generate,\n        generateFractional,\n        calculate_simple_add_sub: calculate_simple_add_sub,\n        possible_checked: possible_checked\n    }\n})();\n\n(function (root, factory) {\n    let define;\n    if (typeof define === \"function\" && define.amd) {\n        define([], factory);\n    } else if (typeof exports === \"object\") {\n        module.exports = factory();\n    } else {\n        root._utils = factory();\n    }\n}(this, function () {\n    return _utils;\n}));","import React, { Component } from 'react';\r\n\r\nimport utils from './libs/generator'\r\n\r\n\r\nfunction process(cfg) {\r\n\r\n\r\n    let res = utils.generate(cfg);\r\n    //console.log('Level:', cfg.Level, '| Operation:', cfg.Operation, '| Result:', res);\r\n    //let seq_sum = res.seq.reduce(function (a, b) { return a + b; });\r\n    //let ans = res.answer.reverse().reduce(function (a, b) { return a * 10 + b });\r\n    //console.assert(seq_sum == ans, seq_sum, ans);\r\n    //console.assert(res.seq.length == cfg.Kolslog);\r\n    return res\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const MyContext = React.createContext();\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        gameStarted: false,\r\n        levelState: \"notstarted\",\r\n        seq: [],\r\n        ans: null,\r\n        ansPosition: 0,\r\n        beadHeight: 0,\r\n        value: 0,\r\n        dragged: {\r\n            c: null,\r\n            r: null\r\n        },\r\n        active: false,\r\n        abacusState: [\r\n            [{\r\n                beadState: 0,\r\n                active: false,\r\n                currentY: 0,\r\n                initialY: 0,\r\n                yOffset: 0,\r\n            }, {\r\n                beadState: 0,\r\n                active: false,\r\n                currentY: 0,\r\n                initialY: 0,\r\n                yOffset: 0,\r\n            }, {\r\n                beadState: 0,\r\n                active: false,\r\n                currentY: 0,\r\n                initialY: 0,\r\n                yOffset: 0,\r\n            }, {\r\n                beadState: 0,\r\n                active: false,\r\n                currentY: 0,\r\n                initialY: 0,\r\n                yOffset: 0,\r\n            }, {\r\n                beadState: 0,\r\n                active: false,\r\n                currentY: 0,\r\n                initialY: 0,\r\n                yOffset: 0,\r\n            }],\r\n            [{\r\n                beadState: 0,\r\n                active: false,\r\n                currentY: 0,\r\n                initialY: 0,\r\n                yOffset: 0,\r\n            }, {\r\n                beadState: 0,\r\n                active: false,\r\n                currentY: 0,\r\n                initialY: 0,\r\n                yOffset: 0,\r\n            }, {\r\n                beadState: 0,\r\n                active: false,\r\n                currentY: 0,\r\n                initialY: 0,\r\n                yOffset: 0,\r\n            }, {\r\n                beadState: 0,\r\n                active: false,\r\n                currentY: 0,\r\n                initialY: 0,\r\n                yOffset: 0,\r\n            }, {\r\n                beadState: 0,\r\n                active: false,\r\n                currentY: 0,\r\n                initialY: 0,\r\n                yOffset: 0,\r\n            }],\r\n        ]\r\n    }\r\n\r\n    dragStart = (e) => {\r\n\r\n        try {\r\n\r\n            if (e.target.id === \"sp0\") {\r\n                this.resetAbacus();\r\n            }\r\n\r\n            let newState = Object.assign({}, this.state);\r\n\r\n            newState.dragged.c = parseInt(e.target.id[0]);\r\n            newState.dragged.r = parseInt(e.target.id[2]);\r\n            newState.levelState = \"started\";\r\n            let c = parseInt(e.target.id[0]);\r\n            let r = parseInt(e.target.id[2]);\r\n\r\n            let uch;\r\n            uch = document.querySelector('#uc1').getBoundingClientRect().height;\r\n            newState.beadHeight = uch;  // изучи получше реакт и научись делать это в ComponentDidMount\r\n\r\n            if (e.type === \"touchstart\") {\r\n                newState.abacusState[c][r].initialY = e.touches[0].clientY - this.state.abacusState[c][r].yOffset;\r\n            } else {\r\n                newState.abacusState[c][r].initialY = e.clientY - this.state.abacusState[c][r].yOffset;\r\n            }\r\n\r\n            if (e.target !== e.currentTarget) {\r\n                // newState.abacusState[c][r].active = true;\r\n                newState.active = true;\r\n            }\r\n\r\n            this.setState(newState);\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    drag = (e) => {\r\n        let c, r;\r\n\r\n        try {\r\n\r\n            //   if (this.state.abacusState[c][r].active === true) {\r\n            if (this.state.active === true) {\r\n\r\n                c = this.state.dragged.c;\r\n                r = this.state.dragged.r;\r\n                let newState = Object.assign({}, this.state);\r\n                let uch = newState.beadHeight;\r\n\r\n\r\n                // let dragItem = e.target;\r\n                e.preventDefault();\r\n\r\n                let currentY;\r\n\r\n\r\n                if (e.type === \"touchmove\") {\r\n                    currentY = e.touches[0].clientY - this.state.abacusState[c][r].initialY;\r\n                } else {\r\n                    currentY = e.clientY - this.state.abacusState[c][r].initialY;\r\n                }\r\n\r\n                if (!this.state.abacusState[c][r].beadState) {\r\n                    if (r === 0) {\r\n                        if (currentY >= 0) {\r\n                            if (currentY < uch / 4) {\r\n                                newState.abacusState[c][r].currentY = currentY\r\n                                //this.setTranslate(newState.abacusState[c][r].currentY, dragItem);\r\n                            } else {\r\n                                currentY = uch / 2\r\n                                //this.setTranslate(newState.abacusState[c][r].currentY, dragItem);\r\n\r\n                                newState.abacusState[c][r].yOffset = currentY;\r\n                                newState.abacusState[c][r].currentY = currentY;\r\n                                newState.abacusState[c][r].beadState = 1;\r\n                                // newState.abacusState[c][r].active = false;\r\n                                newState.active = false;\r\n                                this.setState(newState);\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if ([1, 2, 3, 4].includes(r)) {\r\n                        if (currentY < 0) {\r\n                            if (currentY > -1 * uch / 4) {\r\n                                // this.setTranslate(currentY, dragItem);\r\n                                newState.abacusState[c][r].currentY = currentY;\r\n                                let firstOne = 1;\r\n                                for (let ind = 1; ind <= 4; ind++) {\r\n                                    if (newState.abacusState[c][ind].beadState === 1) {\r\n                                        firstOne = ind + 1;\r\n                                    }\r\n                                }\r\n\r\n                                for (let ind = firstOne; ind <= r; ind++) {\r\n                                    // let item = document.querySelector(\"#bead_\" + c + \"_\" + ind);\r\n                                    // this.setTranslate(newState.abacusState[c][r].currentY, item);\r\n                                    newState.abacusState[c][ind].currentY = currentY;\r\n                                    newState.abacusState[c][ind].yOffset = currentY;\r\n                                }\r\n                            } else {\r\n                                currentY = -1 * uch / 2;\r\n\r\n                                for (let ind = 1; ind <= r; ind++) {\r\n                                    // let item = document.querySelector(\"#bead_\" + c + \"_\" + ind);\r\n                                    //this.setTranslate(newState.abacusState[c][r].currentY, item);\r\n\r\n                                    newState.abacusState[c][ind].beadState = 1;\r\n                                    newState.abacusState[c][ind].yOffset = currentY;\r\n                                    newState.abacusState[c][ind].currentY = currentY;\r\n                                }\r\n\r\n                                // newState.abacusState[c][r].active = false;\r\n                                newState.active = false;\r\n                                this.setState(newState);\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (newState.abacusState[c][r].beadState) {\r\n\r\n                    if (r === 0) {\r\n\r\n                        if (newState.abacusState[c][r].currentY > uch / 4) {\r\n                            // this.setTranslate(newState.abacusState[c][r].currentY, dragItem);\r\n                            newState.abacusState[c][r].currentY = currentY;\r\n                            newState.abacusState[c][r].yOffset = currentY;\r\n                        }\r\n                        else if (currentY <= uch / 4) {\r\n\r\n                            currentY = 0;\r\n                            // this.setTranslate(newState.abacusState[c][r].currentY, dragItem);\r\n                            newState.abacusState[c][r].currentY = currentY;\r\n                            newState.abacusState[c][r].yOffset = currentY;\r\n                            newState.abacusState[c][r].beadState = 0;\r\n                            // newState.abacusState[c][r].active = false;\r\n                            newState.active = false;\r\n                            this.setState(newState);\r\n                            return false;\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    if ([1, 2, 3, 4].includes(r)) {\r\n                        if (currentY < 0) {\r\n                            if (currentY <= -1 * uch / 4 && currentY > -1 * uch / 2) {\r\n                                let firstZero = 4;\r\n\r\n                                for (let ind = 4; ind > 0; ind--) {\r\n                                    if (newState.abacusState[c][ind].beadState === 0) {\r\n                                        firstZero = ind - 1;\r\n                                    }\r\n                                }\r\n                                for (let ind = r; ind <= firstZero; ind++) {\r\n                                    newState.abacusState[c][ind].currentY = currentY;\r\n                                    newState.abacusState[c][ind].yOffset = currentY;\r\n                                    // let item = document.querySelector(\"#bead_\" + c + \"_\" + ind);\r\n                                    // this.setTranslate(newState.abacusState[c][r].currentY, item);\r\n                                }\r\n                                //this.setTranslate(currentY, dragItem);\r\n\r\n                            }\r\n                            if (currentY > -1 * uch / 4) {\r\n                                currentY = 0;\r\n                                //this.setTranslate(currentY, dragItem);\r\n                                for (let ind = r; ind <= 4; ind++) {\r\n                                    // let item = document.querySelector(\"#bead_\" + c + \"_\" + ind);\r\n                                    // this.setTranslate(newState.abacusState[c][r].currentY, item);\r\n                                    newState.abacusState[c][ind].beadState = 0;\r\n                                    newState.abacusState[c][ind].yOffset = currentY;\r\n                                    newState.abacusState[c][ind].currentY = currentY;\r\n                                }\r\n                                // newState.abacusState[c][r].active = false;\r\n                                newState.active = false;\r\n                                this.setState(newState);\r\n                                return false;\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                this.setState(newState);\r\n            }\r\n        } catch (e) {\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    dragEnd = (e) => {\r\n\r\n\r\n        try {\r\n            let c = this.state.dragged.c;\r\n            let r = this.state.dragged.r;\r\n            let newState = Object.assign({}, this.state);\r\n            let uch = newState.beadHeight;\r\n            let currentY = newState.abacusState[c][r].currentY;\r\n\r\n\r\n\r\n            //   if (newState.abacusState[c][r].active) {\r\n            if (!newState.abacusState[c][r].beadState) {\r\n\r\n                if (r === 0) {\r\n                    if (currentY < uch / 2) {\r\n                        currentY = 0;\r\n                        newState.abacusState[c][r].yOffset = currentY;\r\n                        newState.abacusState[c][r].currentY = currentY;\r\n                        // setTranslate(newState.abacusState[c][r].currentY, dragItem);\r\n                    }\r\n                }\r\n                if ([1, 2, 3, 4].includes(r)) {\r\n                    if (currentY > -1 * uch / 4) {\r\n                        let firstOne = 1;\r\n                        for (let ind = 1; ind <= 4; ind++) {\r\n                            if (newState.abacusState[c][ind].beadState === 1) {\r\n                                firstOne = ind + 1;\r\n                            }\r\n                        }\r\n                        for (let ind = firstOne; ind <= r; ind++) {\r\n                            newState.abacusState[c][ind].currentY = 0;\r\n                            newState.abacusState[c][ind].yOffset = 0;\r\n                            // let item = document.querySelector(\"#bead_\" + column + \"_\" + ind);\r\n                            // setTranslate(abacusState[column][ind].currentY, item);\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (newState.abacusState[c][r].beadState) {\r\n                if (r === 0) {\r\n                    if (currentY > uch / 4) {\r\n                        currentY = uch / 2;\r\n                        newState.abacusState[c][r].currentY = currentY;\r\n                        newState.abacusState[c][r].yOffset = currentY;\r\n                        //   newState.abacusState[c][r].yOffset = newState.abacusState[c][r].yOffset;\r\n                        // setTranslate(newState.abacusState[c][r].currentY, dragItem);\r\n                    }\r\n                }\r\n                if ([1, 2, 3, 4].includes(r)) {\r\n\r\n                    if (newState.abacusState[c][r].currentY > -1 * uch / 2) {\r\n                        let firstZero = 4;\r\n\r\n                        for (let ind = 4; ind > 0; ind--) {\r\n                            if (newState.abacusState[c][ind].beadState === 0) {\r\n                                firstZero = ind - 1;\r\n                            }\r\n                        }\r\n                        for (let ind = r; ind <= firstZero; ind++) {\r\n                            currentY = -1 * uch / 2;\r\n                            newState.abacusState[c][ind].yOffset = currentY;\r\n                            newState.abacusState[c][ind].currentY = currentY;\r\n                            // abacusState[column][ind].yOffset = abacusState[column][ind].yOffset;\r\n                            // let item = document.querySelector(\"#bead_\" + column + \"_\" + ind);\r\n                            // setTranslate(abacusState[column][ind].currentY, item);\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n            //   }\r\n            newState.abacusState[c][r].initialY = currentY;\r\n            // newState.abacusState[c][r].active = false;\r\n            newState.active = false;\r\n            newState.dragged.c = null;\r\n            newState.dragged.r = null;\r\n            newState.value = this.calculateValue(newState.abacusState);\r\n            this.setState(newState);\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    calculateValue(abacusState) {\r\n        let value0 = abacusState[0][0].beadState * 5 + Math.max(abacusState[0][1].beadState, abacusState[0][2]\r\n            .beadState * 2, abacusState[0][3].beadState * 3, abacusState[0][4].beadState * 4);\r\n        let value1 = 10 * (abacusState[1][0].beadState * 5 + Math.max(abacusState[1][1].beadState, abacusState[\r\n            1][2]\r\n            .beadState * 2, abacusState[1][3].beadState * 3, abacusState[1][4].beadState * 4));\r\n        return value0 + value1;\r\n    }\r\n\r\n    resetAbacus = () => {\r\n        if (this.state.ansPosition === 3) {\r\n            this.nextLevel();\r\n        } else {\r\n            let newState = Object.assign({}, this.state);\r\n            newState.abacusState = this.generateEmptyAbacus();\r\n            newState.ansPosition = 0;\r\n            newState.value = 0;\r\n            newState.levelState = \"started\";\r\n            this.setState(newState);\r\n        }\r\n    }\r\n\r\n\r\n    generateEmptyAbacus = () => {\r\n        let c = 2;\r\n        let r = 5;\r\n        let abacus = [];\r\n        for (let j = 1; j <= c; j++) {\r\n            abacus.push([])\r\n            for (let i = 1; i <= r; i++) {\r\n                abacus[j - 1].push({\r\n                    beadState: 0,\r\n                    active: false,\r\n                    currentY: 0,\r\n                    initialY: 0,\r\n                    yOffset: 0,\r\n                })\r\n            }\r\n        }\r\n        return abacus\r\n    }\r\n\r\n    resetStart = () => {\r\n        document.getElementById(\"reset\").setAttribute(\"class\", \"reset reset_clicked\");\r\n        this.resetAbacus();\r\n    }\r\n\r\n    resetEnd = () => {\r\n        document.getElementById(\"reset\").setAttribute(\"class\", \"reset\");\r\n    }\r\n\r\n    startGame = () => {\r\n        var level = { level: 2, Checked_cifr: [1, 2, 3, 4] };\r\n\r\n        var cfg = {\r\n            Checked_cifr: level.Checked_cifr,\r\n            Level: level.level,\r\n            Operation: 2,\r\n            Kolslog: 3,\r\n            Kolcifr: 1\r\n        }\r\n        let res = process(cfg);\r\n        let newState = Object.assign({}, this.state);\r\n        newState.seq = res.seq;\r\n        newState.ans = res.answer[0];\r\n        newState.gameStarted = true;\r\n\r\n        this.setState(newState);\r\n    }\r\n\r\n    nextLevel = () => {\r\n        let newState = Object.assign({}, this.state);\r\n        newState.ansPosition = 0;\r\n        newState.levelState = \"notstarted\";\r\n        newState.value = 0;\r\n        newState.abacusState = this.generateEmptyAbacus();\r\n        var level = { level: 2, Checked_cifr: [1, 2, 3, 4] };\r\n        var cfg = {\r\n            Checked_cifr: level.Checked_cifr,\r\n            Level: level.level,\r\n            Operation: 2,\r\n            Kolslog: 3,\r\n            Kolcifr: 1\r\n        }\r\n        let res = process(cfg);\r\n        newState.seq = res.seq;\r\n        newState.ans = res.answer[0];\r\n        this.setState(newState);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let intermedateSum = 0;\r\n        for (let i = 0; i <= this.state.ansPosition; i++) {\r\n            intermedateSum += this.state.seq[i];\r\n        }\r\n        if (this.state.value === intermedateSum) {\r\n            let newState = Object.assign({}, this.state);\r\n            newState.ansPosition = this.state.ansPosition + 1;\r\n            if (newState.ansPosition === 3) {\r\n\r\n                \r\n                newState.levelState = \"finished\";\r\n                \r\n    \r\n                //this.nextLevel();\r\n            }\r\n\r\n            this.setState(newState);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <MyContext.Provider\r\n                value={{\r\n                    gameStarted: this.state.gameStarted,\r\n                    levelState: this.state.levelState,\r\n                    seq: this.state.seq,\r\n                    ans: this.state.ans,\r\n                    exerciseAnswer: this.state.exerciseAnswer,\r\n                    ansPosition: this.state.ansPosition,\r\n                    value: this.state.value,\r\n                    dragged: this.state.dragged,\r\n                    active: this.state.active,\r\n                    abacusState: this.state.abacusState,\r\n                    actions: {\r\n                        nextExample: this.nextExample,\r\n                        startGame: this.startGame,\r\n                        nextLevel: this.nextLevel,\r\n                        resetStart: this.resetStart,\r\n                        resetEnd: this.resetEnd,\r\n                        dragStart: this.dragStart,\r\n                        drag: this.drag,\r\n                        dragEnd: this.dragEnd,\r\n                    },\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </MyContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Consumer = MyContext.Consumer ","import React, { Component } from 'react';\r\nimport './Bead.css'\r\nimport { Consumer } from \"./AbacusContext\";\r\n\r\nclass Bead extends Component {\r\n\r\n    render() {\r\n\r\n        let tclass;\r\n        if (this.props.row >= 1) {\r\n            tclass = \"bead bead_bottom\"\r\n        } else if (this.props.row === 0) {\r\n            tclass = \"bead bead_upper\"\r\n        }\r\n\r\n        return (\r\n            <Consumer>\r\n                {context => {\r\n\r\n                    let y = context.abacusState[this.props.column][this.props.row].currentY;\r\n\r\n                    let styles = {\r\n                        transform: `translateY(${y}px)`\r\n                    };\r\n\r\n                    return (\r\n                        <div\r\n                            style={styles}\r\n                            className={`${tclass}`}\r\n                            id={this.props.column + \" \" + this.props.row}\r\n\r\n/*                          onTouchStart={(e) => context.actions.dragStart(e, this.props.column, this.props.row)}\r\n                            onTouchMove={(e) => context.actions.drag(e, this.props.column, this.props.row)}\r\n                            onTouchEnd={(e) => context.actions.dragEnd(e, this.props.column, this.props.row)}\r\n\r\n                            onMouseDown={(e) => context.actions.dragStart(e, this.props.column, this.props.row)}\r\n                            onMouseMove={(e) => context.actions.drag(e, this.props.column, this.props.row)}\r\n                            onMouseUp={(e) => context.actions.dragEnd(e, this.props.column, this.props.row)} */\r\n                        ></div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Bead","import React, { Component } from 'react';\r\nimport './InfoMessage.css'\r\nimport { Consumer } from \"./AbacusContext\";\r\n\r\n\r\nclass InfoMessage extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {context => { \r\n                    if (context.levelState === \"finished\") {\r\n                        return <p className=\"value\">Сброс и далее</p>\r\n                    } else \r\n                        return <p className=\"value\">{context.value}</p>\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default InfoMessage\r\n","import React, { Component } from 'react';\r\nimport './Abacus.css';\r\nimport Bead from './Bead';\r\nimport InfoMessage from './InfoMessage'\r\nimport { Consumer } from \"./AbacusContext\";\r\n\r\n\r\n\r\nclass AbacusTest extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Consumer>\r\n                {context => (\r\n\r\n                    <div\r\n                        className={\"abacus\" + context.abacusState.length}\r\n                        id=\"abacus\"\r\n                        onTouchStart={(e) => context.actions.dragStart(e)}\r\n                        onTouchMove={(e) => context.actions.drag(e)}\r\n                        onTouchEnd={(e) => context.actions.dragEnd(e)}\r\n\r\n                        onMouseDown={(e) => context.actions.dragStart(e)}\r\n                        onMouseMove={(e) => context.actions.drag(e)}\r\n                        onMouseUp={(e) => context.actions.dragEnd(e)}\r\n                    >\r\n                        <div className=\"button_holder\">\r\n                            <div className=\"somecass\"\r\n                                onMouseDown={(e) => context.actions.resetStart(e)}\r\n                                onMouseUp={(e) => context.actions.resetEnd(e)}\r\n                                onTouchStart={(e) => context.actions.resetStart(e)}\r\n                                onTouchEnd={(e) => context.actions.resetEnd(e)}\r\n                                id=\"pressarea\">\r\n                                <div className=\"reset\" id=\"reset\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"upperedge edgefillhor\">\r\n\r\n                        </div>\r\n                        {context.abacusState.map((column, i) => (\r\n\r\n                            <React.Fragment key={\"column_\" + i}>\r\n\r\n                                <div className={\"uppercontainer\" + i} id=\"uc1\">\r\n                                    <Bead\r\n                                        column={i}\r\n                                        row={0}\r\n                                    />\r\n                                </div>\r\n                                <div className={\"separator\" + i + \" sepfill\"} id={\"sp\" + i}>\r\n                                    {\r\n                                        i === 0 ? <div className=\"circle\"></div> : \"\"\r\n                                    }\r\n                                </div>\r\n                                <div className={\"bottomcontainer\" + i}>\r\n                                    <div className=\"beadspacer\"></div>\r\n                                    <Bead\r\n                                        column={i}\r\n                                        row={1}\r\n                                    />\r\n                                    <Bead\r\n                                        column={i}\r\n                                        row={2}\r\n                                    />\r\n                                    <Bead\r\n                                        column={i}\r\n                                        row={3}\r\n                                    />\r\n                                    <Bead\r\n                                        column={i}\r\n                                        row={4}\r\n                                    />\r\n                                </div>\r\n                            </React.Fragment>\r\n                        ))}\r\n                        <div className=\"bottomedge edgefillhor\">\r\n                            <InfoMessage />\r\n                        </div>\r\n                        <div className=\"rightedge edgefillvert\"></div>\r\n                    </div>\r\n                )}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AbacusTest\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './Exercise.css';\r\n\r\nimport { Consumer } from \"./AbacusContext\";\r\n\r\n\r\n\r\nclass Exercise extends Component {\r\n    \r\n    \r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {context => {\r\n                    return (\r\n                        <>\r\n                            <div style={context.ansPosition === 0 ? {color: \"red\"} : {color: \"black\"}}>{context.seq[0]}</div>\r\n                            <div style={context.ansPosition === 1 ? {color: \"red\"} : {color: \"black\"}}>{context.seq[1]}</div>\r\n                            <div style={context.ansPosition === 2 ? {color: \"red\"} : {color: \"black\"}}>{context.seq[2]}</div>\r\n                            <div className=\"spacer\"></div>\r\n                            <div style={{color: \"red\"}}>{context.ansPosition === 3 ? context.ans : \"\\u00a0\"}</div>\r\n                        </>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Exercise","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Abacus from './Abacus'\r\nimport Exercise from './Exercise'\r\nimport { Consumer } from \"./AbacusContext\";\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {context => {\r\n\r\n                    if (context.gameStarted === false) {\r\n                        return (\r\n                            <div className=\"app\">\r\n                                <button onMouseUp={(e) => context.actions.startGame(e)}>Начать!</button>\r\n                            </div>\r\n                        )\r\n                    } else {\r\n                        return (\r\n                            <div className=\"app\">\r\n\r\n                                <div className=\"header\"></div>\r\n                                <div className=\"helper\"></div>\r\n                                <div className=\"exercise\">\r\n                                    <Exercise />\r\n                                </div>\r\n                                <div className=\"abacusholder\">\r\n                                    <Abacus />\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n\r\n                }}\r\n\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"./AbacusContext\";\n\n\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n  <Provider><App /></Provider>,\n  rootElement\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}