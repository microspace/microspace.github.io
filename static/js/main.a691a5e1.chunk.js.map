{"version":3,"sources":["components/Bead.js","components/InfoMessage.js","components/Abacus.js","components/Exercise/Exercise.js","components/Exercise/index.js","components/Tutorial/Tutorial.js","components/Tutorial/index.js","App.js","serviceWorker.js","index.js","contexts/functions/cleanfunctions.js","contexts/AppContext.js"],"names":["Bead","tclass","_this","this","props","row","react_default","a","createElement","AppContext","context","y","state","abacusState","column","currentY","styles","transform","concat","style","className","id","Component","InfoMessage","levelState","value","AbacusTest","enableAbacus","pointerEvents","opacity","length","onTouchStart","e","actions","dragStart","onTouchMove","drag","onTouchEnd","dragEnd","onMouseDown","onMouseMove","onMouseUp","resetStart","resetEnd","map","i","Fragment","key","src_components_Bead","src_components_InfoMessage","Exercise","tutorialState","sequence","currentExercise","components_Exercise","Consumer","_ref","Object","objectDestructuringEmpty","components_Exercise_Exercise","assign","Tutorial","Button","onClick","restartTutorial","variant","color","components_Abacus","React","components_Tutorial","allLevelsState","components_Tutorial_Tutorial","override","css","_templateObject","App","location","Layout","useContext","AbacusContext","console","log","loading","react_spinners","sizeUnit","size","Boolean","window","hostname","match","rootElement","document","getElementById","ReactDOM","render","react_router_dom","react_router","path","component","navigator","serviceWorker","ready","then","registration","unregister","__webpack_require__","d","__webpack_exports__","generateEmptyAbacus","calculateValue","generateExercise","resizeAbacus","generateSec","ans","c","String","abacus","j","push","beadState","active","initialY","yOffset","oldAbacus","emptycolumn","addedrowcount","sum","Math","max","pow","operation","sublevel","limit","exercise","getRandomInt","game","arr1","forEach","element","num","min","ints","randNum","indexOf","shuffleArray","getRandomInts","digits","floor","random","array","createContext","AbacusProvider","_Component","_getPrototypeOf2","C_Users_Documents_abacus_tutorial_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_len","arguments","args","Array","_key","C_Users_Documents_abacus_tutorial_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Documents_abacus_tutorial_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","apply","startResetDrag","resetX0","resetx1","resetDx","elapsedSec","showWinPopup","selectedOperation","selectedSublevel","seq","ansPosition","beadHeight","dragged","r","serverConfig","config","gamemode","target","type","touches","clientX","newState","parseInt","uch","querySelector","getBoundingClientRect","height","clientY","currentTarget","setState","preventDefault","includes","ind","firstOne","firstZero","resetX1","resetAbacus","abacusSize","nextLevel","setAttribute","restartGame","sublevels","elapsedTime","gameState","exerciseCount","sec","startTutorial","startGame","res","process","answer","gameStarted","startTimer","timer","setInterval","stopTimer","clearInterval","resetTimer","gotoMenu","selectOperation","index","C_Users_Documents_abacus_tutorial_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_Documents_abacus_tutorial_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","_this2","params","queryString","parse","search","axios","get","token","response","JSON","data","properties","intermedateSum","react__WEBPACK_IMPORTED_MODULE_5___default","Provider","nextExample","endGame","children","AbacusConsumer"],"mappings":"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","file":"static/js/main.a691a5e1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Bead.css'\r\nimport { AbacusConsumer } from \"../contexts/AppContext\";\r\n\r\nclass Bead extends Component {\r\n\r\n    render() {\r\n\r\n        let tclass;\r\n        if (this.props.row >= 1) {\r\n            tclass = \"bead bead_bottom\"\r\n        } else if (this.props.row === 0) {\r\n            tclass = \"bead bead_upper\"\r\n        }\r\n\r\n        return (\r\n            <AbacusConsumer>\r\n                {context => {\r\n                    let y = context.state.abacusState[this.props.column][this.props.row].currentY;\r\n\r\n                    let styles = {\r\n                        transform: `translateY(${y}px)`\r\n                    };\r\n\r\n                    return (\r\n                        <div\r\n                            style={styles}\r\n                            className={`${tclass}`}\r\n                            id={this.props.column + \" \" + this.props.row}\r\n\r\n/*                          onTouchStart={(e) => context.actions.dragStart(e, this.props.column, this.props.row)}\r\n                            onTouchMove={(e) => context.actions.drag(e, this.props.column, this.props.row)}\r\n                            onTouchEnd={(e) => context.actions.dragEnd(e, this.props.column, this.props.row)}\r\n\r\n                            onMouseDown={(e) => context.actions.dragStart(e, this.props.column, this.props.row)}\r\n                            onMouseMove={(e) => context.actions.drag(e, this.props.column, this.props.row)}\r\n                            onMouseUp={(e) => context.actions.dragEnd(e, this.props.column, this.props.row)} */\r\n                        ></div>\r\n                    )\r\n                }}\r\n            </AbacusConsumer>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Bead","import React, { Component } from 'react';\r\nimport './InfoMessage.css'\r\nimport { AbacusConsumer } from \"../contexts/AppContext\";\r\n\r\n\r\nclass InfoMessage extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <AbacusConsumer>\r\n                {context => { \r\n                    if (context.state.levelState === \"finished\") {\r\n                        return <p className=\"value\">Сброс и далее</p>\r\n                    } else \r\n                        return <p className=\"value\">{context.state.value}</p>\r\n                }}\r\n            </AbacusConsumer>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default InfoMessage\r\n","import React, { Component } from 'react';\r\nimport './Abacus.css';\r\nimport Bead from './Bead';\r\nimport InfoMessage from './InfoMessage'\r\nimport { AbacusConsumer } from \"../contexts/AppContext\";\r\n\r\n\r\n\r\nclass AbacusTest extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <AbacusConsumer>\r\n                {context => {\r\n                    \r\n                   return (\r\n\r\n                    <div style={context.state.enableAbacus ? {} : {pointerEvents: \"none\", opacity: \"0.4\"}}\r\n                        className={\"abacus\" + context.state.abacusState.length}\r\n                        id=\"abacus\"\r\n                        onTouchStart={(e) => context.actions.dragStart(e)}\r\n                        onTouchMove={(e) => context.actions.drag(e)}\r\n                        onTouchEnd={(e) => context.actions.dragEnd(e)}\r\n\r\n                        onMouseDown={(e) => context.actions.dragStart(e)}\r\n                        onMouseMove={(e) => context.actions.drag(e)}\r\n                        onMouseUp={(e) => context.actions.dragEnd(e)}\r\n                    >\r\n                        <div className=\"button_holder\">\r\n                            <div className=\"somecass\"\r\n                                onMouseDown={(e) => context.actions.resetStart(e)}\r\n                                onMouseUp={(e) => context.actions.resetEnd(e)}\r\n                                onTouchStart={(e) => context.actions.resetStart(e)}\r\n                                onTouchEnd={(e) => context.actions.resetEnd(e)}\r\n                                id=\"pressarea\">\r\n                                <div className=\"reset\" id=\"reset\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"upperedge edgefillhor\">\r\n\r\n                        </div>\r\n                        {context.state.abacusState.map((column, i) => (\r\n\r\n                            <React.Fragment key={\"column_\" + i}>\r\n\r\n                                <div className={\"uppercontainer\" + i} id=\"uc1\">\r\n                                    <Bead\r\n                                        column={i}\r\n                                        row={0}\r\n                                    />\r\n                                </div>\r\n                                <div className={\"separator\" + i + \" sepfill\"} id={\"sp\" + i}>\r\n                                    {\r\n                                        i === 0 ? <div className=\"circle\" id=\"circle\"></div> : \"\"\r\n                                    }\r\n                                </div>\r\n                                <div className={\"bottomcontainer\" + i}>\r\n                                    <div className=\"beadspacer\"></div>\r\n                                    <Bead\r\n                                        column={i}\r\n                                        row={1}\r\n                                    />\r\n                                    <Bead\r\n                                        column={i}\r\n                                        row={2}\r\n                                    />\r\n                                    <Bead\r\n                                        column={i}\r\n                                        row={3}\r\n                                    />\r\n                                    <Bead\r\n                                        column={i}\r\n                                        row={4}\r\n                                    />\r\n                                </div>\r\n                            </React.Fragment>\r\n                        ))}\r\n                        <div className=\"bottomedge edgefillhor\">\r\n                            <InfoMessage />\r\n                        </div>\r\n                        <div className=\"rightedge edgefillvert\"></div>\r\n                    </div>\r\n                )}}\r\n            </AbacusConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AbacusTest\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './Exercise.css';\r\n\r\n\r\n\r\n\r\n\r\nclass Exercise extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>{this.props.tutorialState.sequence[this.props.tutorialState.currentExercise]}</div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Exercise","import React from \"react\";\r\nimport { AbacusContext } from \"../../contexts/AppContext\";\r\nimport Exercise from \"./Exercise\";\r\n\r\nexport default props => (\r\n    <AbacusContext.Consumer>\r\n        {\r\n            ({ state: {tutorialState}, actions: {} }) => <Exercise \r\n        {...props} \r\n        tutorialState={tutorialState}\r\n\r\n        />}\r\n    </AbacusContext.Consumer>\r\n);\r\n\r\n","import React from 'react';\r\n\r\nimport Abacus from '../Abacus'\r\nimport Exercise from '../Exercise'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass Tutorial extends React.Component {\r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n\r\n        <div className=\"app\" id=\"game\">\r\n          <div className=\"header\">\r\n            <Button onClick={(e) => this.props.restartTutorial()} variant=\"contained\" color=\"default\">\r\n              Рестарт\r\n                    </Button>\r\n          </div>\r\n          <div className=\"helper\">\r\n\r\n          </div>\r\n          <div className=\"exercise\">\r\n            <Exercise />\r\n          </div>\r\n          <div className=\"abacusholder\">\r\n            <Abacus />\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Tutorial\r\n\r\n","import React from \"react\";\r\nimport { AbacusContext } from \"../../contexts/AppContext\";\r\nimport Tutorial from \"./Tutorial\";\r\n\r\nexport default props => (\r\n    <AbacusContext.Consumer>\r\n        {\r\n            ({ state: {allLevelsState}, actions: {restartTutorial} }) => <Tutorial \r\n        {...props} \r\n\r\n        allLevelsState={allLevelsState}\r\n        restartTutorial={restartTutorial} \r\n        />}\r\n    </AbacusContext.Consumer>\r\n);\r\n\r\n","import React, { Component, useContext } from 'react';\r\nimport './App.css';\r\n\r\n\r\nimport Tutorial from './components/Tutorial'\r\nimport { AbacusProvider, AbacusContext } from \"./contexts/AppContext\";\r\n\r\nimport { css } from '@emotion/core';\r\n// First way to import\r\nimport { ClipLoader } from 'react-spinners';\r\n// Another way to import\r\n\r\n\r\nconst override = css`\r\n    display: block;\r\n    margin: 0 auto;\r\n    border-color: red;\r\n`;\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <AbacusProvider location={this.props.location}>\r\n                <Layout />\r\n            </AbacusProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n\r\n/* const Popup = ({ open }) => {\r\n    if (open) {\r\n        return (\r\n            <div className='overlay'><h1 className=\"popupText\">Уровень завершен!</h1></div>\r\n        )\r\n    } else {\r\n        return (null)\r\n    }\r\n} */\r\n\r\nfunction Layout() {\r\n\r\n    let context = useContext(AbacusContext)\r\n\r\n    console.log(context)\r\n\r\n\r\n    if (context.state.loading) {\r\n        return (\r\n            <div className='sweet-loading'>\r\n                <ClipLoader\r\n                    css={override}\r\n                    sizeUnit={\"px\"}\r\n                    size={150}\r\n                    color={'#123abc'}\r\n                    loading={context.state.loading}\r\n                />\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <Tutorial />\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {\n    BrowserRouter as Router, Route\n  } from 'react-router-dom'\n\n\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<Router>\n                    <Route path=\"/\" component={App} />\n                </Router>, rootElement)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n","const generateEmptyAbacus = (ans) => {\r\n    let c = String(ans).length;\r\n    let r = 5;\r\n    let abacus = [];\r\n    for (let j = 1; j <= c; j++) {\r\n        abacus.push([])\r\n        for (let i = 1; i <= r; i++) {\r\n            abacus[j - 1].push({\r\n                beadState: 0,\r\n                active: false,\r\n                currentY: 0,\r\n                initialY: 0,\r\n                yOffset: 0,\r\n            })\r\n        }\r\n    }\r\n    return abacus\r\n}\r\n\r\nconst resizeAbacus = (ans, oldAbacus) => {\r\n    let c = String(ans).length;\r\n    console.log(c)\r\n    let r = 5;\r\n\r\n    let emptycolumn = [];\r\n\r\n    for (let i = 1; i <= r; i++) {\r\n        emptycolumn.push({\r\n            beadState: 0,\r\n            active: false,\r\n            currentY: 0,\r\n            initialY: 0,\r\n            yOffset: 0,\r\n        })\r\n\r\n    }\r\n\r\n    const addedrowcount = c - oldAbacus.length;\r\n    console.log(c, oldAbacus.length)\r\n    for (let i = 1; i <= addedrowcount; i++) {\r\n        oldAbacus.push(emptycolumn);\r\n    }\r\n\r\n    return oldAbacus\r\n}\r\n\r\nfunction calculateValue(abacusState) {\r\n\r\n    let sum = 0;\r\n    for (let i = 0; i < abacusState.length; i++) {\r\n        sum += (abacusState[i][0].beadState * 5 + Math.max(abacusState[i][1].beadState, abacusState[i][2]\r\n            .beadState * 2, abacusState[i][3].beadState * 3, abacusState[i][4].beadState * 4)) * (10 ** i);\r\n    }\r\n    return sum;\r\n}\r\n\r\n\r\nfunction generateExercise(operation, sublevel, ans, currentExercise, limit) {\r\n    let exercise;\r\n    if (operation === 0) {\r\n        // inc dec mode\r\n        if (sublevel === 0) {\r\n            exercise = currentExercise;\r\n            return exercise;\r\n        }\r\n        else if (sublevel === 1) {\r\n            exercise = limit - currentExercise + 1;\r\n            return exercise;\r\n        }\r\n        else if (sublevel === 2) {\r\n            exercise = getRandomInt(1, 99)\r\n            while (exercise === ans) {\r\n                exercise = getRandomInt(1, 99)\r\n            }\r\n            return exercise\r\n        }\r\n    }\r\n    return 0\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst generateSec = (game) => {\r\n    var arr1 = []\r\n    game.forEach(element => {\r\n        arr1 = arr1.concat(getRandomInts(10, 10 ** (element.digits - 1) - 1, 10 ** element.digits))\r\n    });\r\n\r\n    return arr1\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\nfunction getRandomInts(num, min, max) {\r\n    var ints = [];\r\n        while (ints.length < num) {\r\n            var randNum = getRandomInt(min, max);\r\n            if (ints.indexOf(randNum) === -1) {\r\n                ints.push(randNum);\r\n            }\r\n        }\r\n\r\n        while (ints[0] === 0) {\r\n            shuffleArray(ints)\r\n        }\r\n    return ints;\r\n}\r\n\r\nfunction shuffleArray(array) {\r\n    console.log(\"shuffled\")\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n}\r\n\r\nexport { generateEmptyAbacus, calculateValue, generateExercise, resizeAbacus, generateSec }","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\n\r\nimport { generateEmptyAbacus, calculateValue, generateExercise, resizeAbacus, generateSec } from './functions/cleanfunctions'\r\nexport const AbacusContext = React.createContext();\r\n\r\n\r\nexport class AbacusProvider extends Component {\r\n    startResetDrag = false;\r\n    resetX0 = 0;\r\n    resetx1 = 0;\r\n    resetDx = 0;\r\n    state = {\r\n        loading: true,\r\n        elapsedSec: 0,\r\n        showWinPopup: false,\r\n        selectedOperation: 0,\r\n        selectedSublevel: null,\r\n        seq: [],\r\n        ans: null,\r\n        ansPosition: 0,\r\n        beadHeight: 0,\r\n        value: 0,\r\n        dragged: {\r\n            c: null,\r\n            r: null\r\n        },\r\n        active: false,\r\n        enableAbacus: true,\r\n        allLevelsState: [],\r\n        abacusState: [],\r\n        serverConfig: {\r\n            config: {\r\n                gamemode: \"game\"\r\n            },\r\n        },\r\n    }\r\n\r\n    componentDidMount() {\r\n        let params = queryString.parse(this.props.location.search);\r\n\r\n\r\n        axios.get('http://194.67.201.238/api/v0.1/courses-management/games?token=' + params.token)\r\n            .then(response => {\r\n                let newState = Object.assign({}, this.state);\r\n                newState.loading = false;\r\n                let config = JSON.parse(response.data.data.config)\r\n                let properties = JSON.parse(response.data.data.properties)\r\n                let sec = generateSec(config.game);\r\n                newState.serverConfig.config = config;\r\n                newState.serverConfig.properties = properties;\r\n                newState.tutorialState =  // Operation level\r\n                    {\r\n                        currentExercise: properties.currentExercise,\r\n                        sequence: sec,\r\n                    }\r\n                let abacusSize = newState.tutorialState.sequence[newState.tutorialState.currentExercise];\r\n                newState.abacusState = generateEmptyAbacus(abacusSize);\r\n                this.setState(newState);\r\n            });\r\n\r\n\r\n    }\r\n    componentWillMount() {\r\n\r\n\r\n\r\n\r\n\r\n\r\n        /*         let obj = JSON.parse(`\r\n                {\r\n                    \"config\": {\r\n                      \"gamemode\": \"tutorial\",\r\n                      \"lesson\": 2,\r\n                      \"game\": [\r\n                        {\r\n                          \"mode\": \"random\",\r\n                          \"digits\": 1,\r\n                          \"exercises\": 10\r\n                        },\r\n                        {\r\n                          \"mode\": \"random\",\r\n                          \"digits\": 2,\r\n                          \"exercises\": 10\r\n                        },\r\n                        {\r\n                          \"mode\": \"random\",\r\n                          \"digits\": 3,\r\n                          \"exercises\": 10\r\n                        }\r\n                      ]\r\n                    },\r\n                    \"properties\": {\r\n                      \"currentGame\": 0,\r\n                      \"currentExercise\": 0\r\n                    }\r\n                  }\r\n                `); \r\n                let obj;\r\n               // obj.config = \r\n                let newState = Object.assign({}, this.state);\r\n                newState.serverConfig = obj;\r\n                if (obj.config.gamemode === \"tutorial\" && obj.config.lesson === 2) {\r\n        \r\n                    let sec = generateSec(obj.config.game)\r\n        \r\n        \r\n                    newState.tutorialState =  // Operation level\r\n                        {\r\n                            currentExercise: obj.properties.currentExercise,\r\n                            sequence: sec, \r\n                        }\r\n        \r\n                } else {\r\n                    newState.allLevelsState = [ // Operation level\r\n                        {\r\n                            name: \"Счет\",\r\n                            sublevels: [ // mode Счет\r\n                                {\r\n                                    name: \"Счет вперёд\",\r\n                                    gameState: \"notentered\", //notentered, entered, completed\r\n                                    currentExercise: 1,\r\n                                    exerciseCount: 99,\r\n                                },\r\n                                {\r\n                                    name: \"Счет назад\",\r\n                                    gameState: \"notentered\", //notstarted, entered, completed\r\n                                    currentExercise: 1,\r\n                                    exerciseCount: 99,\r\n                                },\r\n                                {\r\n                                    name: \"Случайные\",\r\n                                    gameState: \"notentered\", //notstarted, entered, completed\r\n                                    currentExercise: 1,\r\n                                    exerciseCount: 3,\r\n                                    elapsedTime: 0,\r\n                                },\r\n                            ]\r\n                        },\r\n                        {\r\n                            name: \"Пр. слож/вычит\",\r\n                            sublevels: [ // mode level\r\n                                {\r\n                                    name: \"±1234\",\r\n                                    gameState: \"notentered\", //notentered, entered, completed\r\n                                    currentExercise: 1,\r\n                                    exerciseCount: 5,\r\n                                },\r\n                                {\r\n                                    name: \"±5\",\r\n                                    gameState: \"notentered\", //notstarted, entered, completed\r\n                                    currentExercise: 1,\r\n                                    exerciseCount: 5,\r\n                                },\r\n                                {\r\n                                    name: \"±6\",\r\n                                    gameState: \"notentered\", //notstarted, entered, completed\r\n                                    currentExercise: 1,\r\n                                    exerciseCount: 5,\r\n                                },\r\n                                {\r\n                                    name: \"±7\",\r\n                                    gameState: \"notentered\", //notstarted, entered, completed\r\n                                    currentExercise: 1,\r\n                                    exerciseCount: 5,\r\n                                },\r\n                                {\r\n                                    name: \"±8\",\r\n                                    gameState: \"notentered\", //notstarted, entered, completed\r\n                                    currentExercise: 1,\r\n                                    exerciseCount: 5,\r\n                                },\r\n                                {\r\n                                    name: \"±9\",\r\n                                    gameState: \"notentered\", //notstarted, entered, completed\r\n                                    currentExercise: 1,\r\n                                    exerciseCount: 5,\r\n                                },\r\n                                {\r\n                                    name: \"Повторение\",\r\n                                    gameState: \"notentered\", //notstarted, entered, completed\r\n                                    currentExercise: 1,\r\n                                    exerciseCount: 5,\r\n                                },\r\n                                {\r\n                                    name: \"Случайно\",\r\n                                    gameState: \"notentered\", //notstarted, entered, completed\r\n                                    currentExercise: 1,\r\n                                    exerciseCount: 5,\r\n                                    elapsedTime: 0,\r\n                                },\r\n                            ],\r\n                        }\r\n                    ];\r\n                }\r\n                this.setState(newState);\r\n                */\r\n\r\n    }\r\n\r\n    dragStart = (e) => {\r\n        if (this.state.enableAbacus) {\r\n            try {\r\n\r\n                if (e.target.id === \"sp0\" || e.target.id === \"circle\") {\r\n                    this.startResetDrag = true;\r\n                    if (e.type === \"touchstart\") {\r\n                        this.resetX0 = e.touches[0].clientX\r\n                    } else {\r\n                        this.resetX0 = e.clientX\r\n                    }\r\n                }\r\n\r\n                let newState = Object.assign({}, this.state);\r\n\r\n                newState.dragged.c = parseInt(e.target.id[0]);\r\n                newState.dragged.r = parseInt(e.target.id[2]);\r\n                newState.levelState = \"started\";\r\n                let c = parseInt(e.target.id[0]);\r\n                let r = parseInt(e.target.id[2]);\r\n\r\n                let uch;\r\n                uch = document.querySelector('#uc1').getBoundingClientRect().height;\r\n                newState.beadHeight = uch;  // изучи получше реакт и научись делать это в ComponentDidMount\r\n\r\n                if (e.type === \"touchstart\") {\r\n                    newState.abacusState[c][r].initialY = e.touches[0].clientY - this.state.abacusState[c][r].yOffset;\r\n                } else {\r\n                    newState.abacusState[c][r].initialY = e.clientY - this.state.abacusState[c][r].yOffset;\r\n                }\r\n\r\n                if (e.target !== e.currentTarget) {\r\n                    // newState.abacusState[c][r].active = true;\r\n                    newState.active = true;\r\n                }\r\n\r\n                this.setState(newState);\r\n            } catch (e) {\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    drag = (e) => {\r\n        if (this.state.enableAbacus) {\r\n            let c, r;\r\n\r\n            try {\r\n\r\n                //   if (this.state.abacusState[c][r].active === true) {\r\n                if (this.state.active === true) {\r\n\r\n                    c = this.state.dragged.c;\r\n                    r = this.state.dragged.r;\r\n                    let newState = Object.assign({}, this.state);\r\n                    let uch = newState.beadHeight;\r\n\r\n\r\n                    // let dragItem = e.target;\r\n                    e.preventDefault();\r\n\r\n                    let currentY;\r\n\r\n\r\n                    if (e.type === \"touchmove\") {\r\n                        currentY = e.touches[0].clientY - this.state.abacusState[c][r].initialY;\r\n                    } else {\r\n                        currentY = e.clientY - this.state.abacusState[c][r].initialY;\r\n                    }\r\n\r\n                    if (!this.state.abacusState[c][r].beadState) {\r\n                        if (r === 0) {\r\n                            if (currentY >= 0) {\r\n                                if (currentY < uch / 4) {\r\n                                    newState.abacusState[c][r].currentY = currentY\r\n                                    //this.setTranslate(newState.abacusState[c][r].currentY, dragItem);\r\n                                } else {\r\n                                    currentY = uch / 2\r\n                                    //this.setTranslate(newState.abacusState[c][r].currentY, dragItem);\r\n\r\n                                    newState.abacusState[c][r].yOffset = currentY;\r\n                                    newState.abacusState[c][r].currentY = currentY;\r\n                                    newState.abacusState[c][r].beadState = 1;\r\n                                    // newState.abacusState[c][r].active = false;\r\n                                    newState.active = false;\r\n                                    this.setState(newState);\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if ([1, 2, 3, 4].includes(r)) {\r\n                            if (currentY < 0) {\r\n                                if (currentY > -1 * uch / 4) {\r\n                                    // this.setTranslate(currentY, dragItem);\r\n                                    newState.abacusState[c][r].currentY = currentY;\r\n                                    let firstOne = 1;\r\n                                    for (let ind = 1; ind <= 4; ind++) {\r\n                                        if (newState.abacusState[c][ind].beadState === 1) {\r\n                                            firstOne = ind + 1;\r\n                                        }\r\n                                    }\r\n\r\n                                    for (let ind = firstOne; ind <= r; ind++) {\r\n                                        // let item = document.querySelector(\"#bead_\" + c + \"_\" + ind);\r\n                                        // this.setTranslate(newState.abacusState[c][r].currentY, item);\r\n                                        newState.abacusState[c][ind].currentY = currentY;\r\n                                        newState.abacusState[c][ind].yOffset = currentY;\r\n                                    }\r\n                                } else {\r\n                                    currentY = -1 * uch / 2;\r\n\r\n                                    for (let ind = 1; ind <= r; ind++) {\r\n                                        // let item = document.querySelector(\"#bead_\" + c + \"_\" + ind);\r\n                                        //this.setTranslate(newState.abacusState[c][r].currentY, item);\r\n\r\n                                        newState.abacusState[c][ind].beadState = 1;\r\n                                        newState.abacusState[c][ind].yOffset = currentY;\r\n                                        newState.abacusState[c][ind].currentY = currentY;\r\n                                    }\r\n\r\n                                    // newState.abacusState[c][r].active = false;\r\n                                    newState.active = false;\r\n                                    this.setState(newState);\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (newState.abacusState[c][r].beadState) {\r\n\r\n                        if (r === 0) {\r\n                            if (newState.abacusState[c][r].currentY > uch / 4) {\r\n                                // this.setTranslate(newState.abacusState[c][r].currentY, dragItem);\r\n                                newState.abacusState[c][r].currentY = currentY;\r\n                                newState.abacusState[c][r].yOffset = currentY;\r\n                            }\r\n                            else if (currentY <= uch / 4) {\r\n                                currentY = 0;\r\n                                // this.setTranslate(newState.abacusState[c][r].currentY, dragItem);\r\n                                newState.abacusState[c][r].currentY = currentY;\r\n                                newState.abacusState[c][r].yOffset = currentY;\r\n                                newState.abacusState[c][r].beadState = 0;\r\n                                // newState.abacusState[c][r].active = false;\r\n                                newState.active = false;\r\n                                this.setState(newState);\r\n                                return false;\r\n                            }\r\n                        }\r\n\r\n                        if ([1, 2, 3, 4].includes(r)) {\r\n                            if (currentY < 0) {\r\n                                if (currentY <= -1 * uch / 4 && currentY > -1 * uch / 2) {\r\n                                    let firstZero = 4;\r\n                                    for (let ind = 4; ind > 0; ind--) {\r\n                                        if (newState.abacusState[c][ind].beadState === 0) {\r\n                                            firstZero = ind - 1;\r\n                                        }\r\n                                    }\r\n                                    for (let ind = r; ind <= firstZero; ind++) {\r\n                                        newState.abacusState[c][ind].currentY = currentY;\r\n                                        newState.abacusState[c][ind].yOffset = currentY;\r\n                                        // let item = document.querySelector(\"#bead_\" + c + \"_\" + ind);\r\n                                        // this.setTranslate(newState.abacusState[c][r].currentY, item);\r\n                                    }\r\n                                    //this.setTranslate(currentY, dragItem);\r\n                                }\r\n                                if (currentY > -1 * uch / 4) {\r\n                                    currentY = 0;\r\n                                    //this.setTranslate(currentY, dragItem);\r\n                                    for (let ind = r; ind <= 4; ind++) {\r\n                                        // let item = document.querySelector(\"#bead_\" + c + \"_\" + ind);\r\n                                        // this.setTranslate(newState.abacusState[c][r].currentY, item);\r\n                                        newState.abacusState[c][ind].beadState = 0;\r\n                                        newState.abacusState[c][ind].yOffset = currentY;\r\n                                        newState.abacusState[c][ind].currentY = currentY;\r\n                                    }\r\n                                    // newState.abacusState[c][r].active = false;\r\n                                    newState.active = false;\r\n                                    this.setState(newState);\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    this.setState(newState);\r\n                }\r\n            } catch (e) {\r\n            }\r\n        }\r\n    }\r\n\r\n    dragEnd = (e) => {\r\n        if (this.state.enableAbacus) {\r\n            if (this.startResetDrag) {\r\n                this.startResetDrag = false;\r\n                if (e.type === \"touchstart\") {\r\n                    this.resetX1 = e.touches[0].clientX\r\n                } else {\r\n                    this.resetX1 = e.clientX\r\n                }\r\n                if (this.resetX1 < this.resetX0) {\r\n                    this.resetAbacus();\r\n                }\r\n            }\r\n\r\n            try {\r\n                let c = this.state.dragged.c;\r\n                let r = this.state.dragged.r;\r\n                let newState = Object.assign({}, this.state);\r\n                let uch = newState.beadHeight;\r\n                let currentY = newState.abacusState[c][r].currentY;\r\n\r\n                //   if (newState.abacusState[c][r].active) {\r\n                if (!newState.abacusState[c][r].beadState) {\r\n\r\n                    if (r === 0) {\r\n                        if (currentY < uch / 2) {\r\n                            currentY = 0;\r\n                            newState.abacusState[c][r].yOffset = currentY;\r\n                            newState.abacusState[c][r].currentY = currentY;\r\n                            // setTranslate(newState.abacusState[c][r].currentY, dragItem);\r\n                        }\r\n                    }\r\n                    if ([1, 2, 3, 4].includes(r)) {\r\n                        if (currentY > -1 * uch / 4) {\r\n                            let firstOne = 1;\r\n                            for (let ind = 1; ind <= 4; ind++) {\r\n                                if (newState.abacusState[c][ind].beadState === 1) {\r\n                                    firstOne = ind + 1;\r\n                                }\r\n                            }\r\n                            for (let ind = firstOne; ind <= r; ind++) {\r\n                                newState.abacusState[c][ind].currentY = 0;\r\n                                newState.abacusState[c][ind].yOffset = 0;\r\n                                // let item = document.querySelector(\"#bead_\" + column + \"_\" + ind);\r\n                                // setTranslate(abacusState[column][ind].currentY, item);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (newState.abacusState[c][r].beadState) {\r\n                    if (r === 0) {\r\n                        if (currentY > uch / 4) {\r\n                            currentY = uch / 2;\r\n                            newState.abacusState[c][r].currentY = currentY;\r\n                            newState.abacusState[c][r].yOffset = currentY;\r\n                            //   newState.abacusState[c][r].yOffset = newState.abacusState[c][r].yOffset;\r\n                            // setTranslate(newState.abacusState[c][r].currentY, dragItem);\r\n                        }\r\n                    }\r\n                    if ([1, 2, 3, 4].includes(r)) {\r\n\r\n                        if (newState.abacusState[c][r].currentY > -1 * uch / 2) {\r\n                            let firstZero = 4;\r\n\r\n                            for (let ind = 4; ind > 0; ind--) {\r\n                                if (newState.abacusState[c][ind].beadState === 0) {\r\n                                    firstZero = ind - 1;\r\n                                }\r\n                            }\r\n                            for (let ind = r; ind <= firstZero; ind++) {\r\n                                currentY = -1 * uch / 2;\r\n                                newState.abacusState[c][ind].yOffset = currentY;\r\n                                newState.abacusState[c][ind].currentY = currentY;\r\n                                // abacusState[column][ind].yOffset = abacusState[column][ind].yOffset;\r\n                                // let item = document.querySelector(\"#bead_\" + column + \"_\" + ind);\r\n                                // setTranslate(abacusState[column][ind].currentY, item);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                //   }\r\n                newState.abacusState[c][r].initialY = currentY;\r\n                // newState.abacusState[c][r].active = false;\r\n                newState.active = false;\r\n                newState.dragged.c = null;\r\n                newState.dragged.r = null;\r\n                newState.value = calculateValue(newState.abacusState);\r\n\r\n                /*                 if (this.state.selectedOperation === 0) {\r\n                                    // inc dec mode\r\n                                    let currentExercise = newState.allLevelsState[this.state.selectedOperation].sublevels[this.state.selectedSublevel].currentExercise;\r\n                                    const limit = newState.allLevelsState[this.state.selectedOperation].sublevels[this.state.selectedSublevel].exerciseCount\r\n                                    if (newState.value === this.state.ans) {\r\n                                        if (currentExercise < limit) {\r\n                                            currentExercise += 1;\r\n                                            newState.allLevelsState[this.state.selectedOperation].sublevels[this.state.selectedSublevel].currentExercise = currentExercise;\r\n                                            newState.ans = generateExercise(this.state.selectedOperation, this.state.selectedSublevel, this.state.ans, currentExercise, limit);\r\n                \r\n                                        } else {\r\n                                            currentExercise += 1;\r\n                                            newState.allLevelsState[this.state.selectedOperation].sublevels[this.state.selectedSublevel].currentExercise = currentExercise;\r\n                                            this.stopTimer();\r\n                                            newState.allLevelsState[this.state.selectedOperation].sublevels[this.state.selectedSublevel].gameState = \"completed\";\r\n                                            newState.showWinPopup = true;\r\n                                            \r\n                                        }\r\n                \r\n                                    }\r\n                \r\n                                } */\r\n                let abacusSize;\r\n                if (newState.value === newState.tutorialState.sequence[newState.tutorialState.currentExercise]) {\r\n                    newState.tutorialState.currentExercise += 1;\r\n                    if (newState.tutorialState.currentExercise <= newState.tutorialState.sequence.length - 1) {\r\n                        abacusSize = newState.tutorialState.sequence[newState.tutorialState.currentExercise];\r\n                        newState.abacusState = resizeAbacus(abacusSize, newState.abacusState);\r\n                    } else {\r\n                        newState.showWinPopup = true;\r\n                        newState.enableAbacus = false;\r\n                    }\r\n                }\r\n                this.setState(newState);\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    resetAbacus = () => {\r\n        if (this.state.ansPosition === 3) {\r\n            this.nextLevel();\r\n        } else {\r\n            let newState = Object.assign({}, this.state);\r\n            newState.abacusState = generateEmptyAbacus(newState.tutorialState.sequence[newState.tutorialState.currentExercise]);\r\n            newState.ansPosition = 0;\r\n            newState.value = 0;\r\n            newState.levelState = \"started\";\r\n            this.setState(newState);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    resetStart = () => {\r\n        document.getElementById(\"reset\").setAttribute(\"class\", \"reset reset_clicked\");\r\n        this.resetAbacus();\r\n    }\r\n\r\n    resetEnd = () => {\r\n        document.getElementById(\"reset\").setAttribute(\"class\", \"reset\");\r\n    }\r\n\r\n    restartGame = (selectedOperation, selectedSublevel) => {\r\n        let newState = Object.assign({}, this.state);\r\n        newState.allLevelsState[selectedOperation].sublevels[selectedSublevel].elapsedTime = 0;\r\n        newState.allLevelsState[selectedOperation].sublevels[selectedSublevel].currentExercise = 1;\r\n        newState.allLevelsState[selectedOperation].sublevels[selectedSublevel].gameState = \"entered\";\r\n        newState.showWinPopup = false;\r\n        newState.enableAbacus = true;\r\n        newState.abacusState = generateEmptyAbacus();\r\n        newState.value = 0;\r\n        newState.allLevelsState[selectedOperation].sublevels[selectedSublevel].elapsedTime = 0;\r\n        let currentExercise = newState.allLevelsState[selectedOperation].sublevels[selectedSublevel].currentExercise;\r\n        let limit = newState.allLevelsState[selectedOperation].sublevels[selectedSublevel].exerciseCount;\r\n\r\n        newState.ans = generateExercise(selectedOperation, selectedSublevel, null, currentExercise, limit)\r\n        newState.allLevelsState[newState.selectedOperation].sublevels[newState.selectedSublevel].elapsedTime = 0;\r\n\r\n        this.setState(newState);\r\n\r\n    }\r\n    restartTutorial = () => {\r\n        let newState = Object.assign({}, this.state);\r\n        newState.enableAbacus = true;\r\n        newState.tutorialState.currentExercise = 0;\r\n        newState.abacusState = generateEmptyAbacus(newState.tutorialState.sequence[newState.tutorialState.currentExercise]);\r\n        newState.value = 0;\r\n        newState.showWinPopup = false;\r\n\r\n\r\n\r\n        let sec = generateSec(newState.serverConfig.config.game)\r\n\r\n\r\n        newState.tutorialState.sequence = sec;\r\n\r\n        this.setState(newState);\r\n\r\n    }\r\n    startTutorial = () => {\r\n        let newState = Object.assign({}, this.state);\r\n        let abacusSize = newState.tutorialState.sequence[newState.tutorialState.currentExercise];\r\n        newState.abacusState = generateEmptyAbacus(abacusSize);\r\n        this.setState(newState);\r\n    }\r\n\r\n    startGame = (selectedOperation, selectedSublevel) => {\r\n        if (selectedOperation === 0) {\r\n            // inc dec mode\r\n            //  if (selectedSublevel === 0) {\r\n            // inc mode\r\n            let newState = Object.assign({}, this.state);\r\n            let currentExercise = newState.allLevelsState[selectedOperation].sublevels[selectedSublevel].currentExercise;\r\n            let limit = newState.allLevelsState[selectedOperation].sublevels[selectedSublevel].exerciseCount;\r\n            newState.selectedOperation = selectedOperation;\r\n            newState.selectedSublevel = selectedSublevel;\r\n\r\n            newState.ans = generateExercise(selectedOperation, selectedSublevel, null, currentExercise, limit)\r\n            if (newState.allLevelsState[selectedOperation].sublevels[selectedSublevel].gameState === \"notentered\") {\r\n                newState.allLevelsState[selectedOperation].sublevels[selectedSublevel].gameState = \"entered\";\r\n            }\r\n\r\n\r\n            newState.showWinPopup = false;\r\n            newState.enableAbacus = true;\r\n\r\n            if (newState.allLevelsState[selectedOperation].sublevels[selectedSublevel].currentExercise - 1 === newState.allLevelsState[selectedOperation].sublevels[selectedSublevel].exerciseCount) {\r\n                newState.showWinPopup = true;\r\n                newState.enableAbacus = false;\r\n\r\n\r\n            }\r\n\r\n            newState.abacusState = generateEmptyAbacus();\r\n            this.setState(newState);\r\n            // }\r\n        } else {\r\n            let res = this.process();\r\n            let newState = Object.assign({}, this.state);\r\n            newState.seq = res.seq;\r\n            newState.ans = res.answer[0];\r\n            newState.gameStarted = true;\r\n            this.setState(newState);\r\n        }\r\n    }\r\n    startTimer = () => {\r\n        this.timer = setInterval(() => {\r\n            let newState = Object.assign({}, this.state);\r\n            newState.allLevelsState[newState.selectedOperation].sublevels[newState.selectedSublevel].elapsedTime += 1;\r\n            this.setState(newState);\r\n        }, 1000);\r\n    }\r\n\r\n\r\n    stopTimer = () => {\r\n        clearInterval(this.timer)\r\n    }\r\n\r\n    resetTimer = () => {\r\n        let newState = Object.assign({}, this.state);\r\n        newState.allLevelsState[newState.selectedOperation].sublevels[newState.selectedSublevel].elapsedTime = 0;\r\n        this.setState(newState);\r\n    }\r\n\r\n    gotoMenu = () => {\r\n        let newState = Object.assign({}, this.state);\r\n        newState.selectedSublevel = null;\r\n        this.setState(newState);\r\n    }\r\n    selectOperation = (index) => {\r\n        let newState = Object.assign({}, this.state);\r\n        newState.selectedOperation = index;\r\n        this.setState(newState);\r\n    }\r\n    nextLevel = () => {\r\n        let newState = Object.assign({}, this.state);\r\n        newState.ansPosition = 0;\r\n        newState.levelState = \"notentered\";\r\n        newState.value = 0;\r\n        newState.abacusState = generateEmptyAbacus();\r\n\r\n        let res = process();\r\n        newState.seq = res.seq;\r\n        newState.ans = res.answer[0];\r\n        this.setState(newState);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let intermedateSum = 0;\r\n        for (let i = 0; i <= this.state.ansPosition; i++) {\r\n            intermedateSum += this.state.seq[i];\r\n        }\r\n        if (this.state.value === intermedateSum) {\r\n            let newState = Object.assign({}, this.state);\r\n            newState.ansPosition = this.state.ansPosition + 1;\r\n            if (newState.ansPosition === 3) {\r\n                newState.levelState = \"finished\";\r\n                //this.nextLevel();\r\n            }\r\n            this.setState(newState);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AbacusContext.Provider\r\n                value={{\r\n                    state: this.state,\r\n                    actions: {\r\n                        gotoMenu: this.gotoMenu,\r\n                        selectOperation: this.selectOperation,\r\n                        nextExample: this.nextExample,\r\n                        startGame: this.startGame,\r\n                        restartGame: this.restartGame,\r\n                        restartTutorial: this.restartTutorial,\r\n                        endGame: this.endGame,\r\n                        nextLevel: this.nextLevel,\r\n                        resetStart: this.resetStart,\r\n                        resetEnd: this.resetEnd,\r\n                        dragStart: this.dragStart,\r\n                        drag: this.drag,\r\n                        dragEnd: this.dragEnd,\r\n                        startTimer: this.startTimer,\r\n                        stopTimer: this.stopTimer,\r\n                    },\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </AbacusContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport const AbacusConsumer = AbacusContext.Consumer "],"sourceRoot":""}